export function setHighestVulnerabilitySeverity<
  T extends Record<string, any>,
  TChild extends Record<string, any> | undefined
>(config: Record<string, any>, parent: T, child: TChild): void {
  let mostSevere: string | undefined;

  const parentVulSeverity = parent.vulnerabilitySeverity?.toUpperCase();

  const childVulSeverity = child?.vulnerabilitySeverity?.toUpperCase();

  if (!parentVulSeverity && childVulSeverity) {
    mostSevere = childVulSeverity;
  } else if (parentVulSeverity && !childVulSeverity) {
    mostSevere = parentVulSeverity;
  } else if (parentVulSeverity === 'CRITICAL') {
    mostSevere = 'CRITICAL';
  } else if (parentVulSeverity === 'HIGH' && childVulSeverity !== 'CRITICAL') {
    mostSevere = 'HIGH';
  } else if (
    parentVulSeverity === 'MODERATE' &&
    childVulSeverity !== 'CRITICAL' &&
    childVulSeverity !== 'HIGH'
  ) {
    mostSevere = 'MODERATE';
  } else {
    mostSevere = childVulSeverity;
  }

  config.vulnerabilitySeverity = mostSevere;
}
