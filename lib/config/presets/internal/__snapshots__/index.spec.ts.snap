// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`config/presets/internal/index contains all compatibility presets 1`] = `
{
  "additionalBranchPrefix": {
    "buildkite": {
      "additionalBranchPrefix": "buildkite-",
    },
    "cargo": {
      "additionalBranchPrefix": "rust-",
    },
    "description": "Backwards-compatibility preset to restore \`additionalBranchPrefix\` settings for multiple managers which were removed in Renovate \`v25\`.",
    "docker": {
      "additionalBranchPrefix": "docker-",
    },
    "homebrew": {
      "additionalBranchPrefix": "homebrew-",
    },
    "packageRules": [
      {
        "additionalBranchPrefix": "helm-",
        "matchDatasources": [
          "helm",
        ],
      },
    ],
  },
}
`;

exports[`config/presets/internal/index contains all config presets 1`] = `
{
  "base": {
    "description": "Default base configuration for all languages.",
    "extends": [
      ":dependencyDashboard",
      ":semanticPrefixFixDepsChoreOthers",
      ":ignoreModulesAndTests",
      ":autodetectPinVersions",
      ":prHourlyLimit2",
      ":prConcurrentLimit10",
      "group:monorepos",
      "group:recommended",
      "workarounds:all",
    ],
  },
  "js-app": {
    "description": "Default configuration for webapps.",
    "extends": [
      "config:base",
      ":pinAllExceptPeerDependencies",
    ],
  },
  "js-lib": {
    "description": "Default configuration for libraries.",
    "extends": [
      "config:base",
      ":pinOnlyDevDependencies",
    ],
  },
  "semverAllMonthly": {
    "description": "Preserve SemVer ranges and update everything together once a month.",
    "extends": [
      ":preserveSemverRanges",
      "group:all",
      "schedule:monthly",
      ":maintainLockFilesMonthly",
    ],
    "lockFileMaintenance": {
      "commitMessageAction": "Update",
      "extends": [
        "group:all",
      ],
    },
    "separateMajorMinor": false,
  },
}
`;

exports[`config/presets/internal/index contains all default presets 1`] = `
{
  "assignAndReview": {
    "description": "Set \`{{arg0}}\` as assignee and reviewer of PRs.",
    "extends": [
      ":assignee({{arg0}})",
      ":reviewer({{arg0}})",
    ],
  },
  "assignee": {
    "assignees": [
      "{{arg0}}",
    ],
    "description": "Assign PRs to \`{{arg0}}\`.",
  },
  "autodetectPinVersions": {
    "description": "Autodetect whether to pin dependencies or maintain ranges.",
    "rangeStrategy": "auto",
  },
  "automergeAll": {
    "automerge": true,
    "description": "Automerge all upgrades (including \`major\`) if they pass tests.",
  },
  "automergeBranch": {
    "automergeType": "branch",
    "description": "If automerging, push the new commit directly to the base branch (no PR).",
  },
  "automergeDigest": {
    "description": "Automerge \`digest\` upgrades if they pass tests.",
    "digest": {
      "automerge": true,
    },
  },
  "automergeDisabled": {
    "automerge": false,
    "description": "Disable automerging feature - wait for humans to merge all PRs.",
  },
  "automergeLinters": {
    "description": "Update lint packages automatically if tests pass.",
    "packageRules": [
      {
        "automerge": true,
        "extends": [
          "packages:linters",
        ],
      },
    ],
  },
  "automergeMajor": {
    "automerge": true,
    "description": "Automerge all upgrades (including \`major\`) if they pass tests.",
  },
  "automergeMinor": {
    "description": "Automerge \`patch\` and \`minor\` upgrades if they pass tests.",
    "lockFileMaintenance": {
      "automerge": true,
    },
    "minor": {
      "automerge": true,
    },
    "patch": {
      "automerge": true,
    },
    "pin": {
      "automerge": true,
    },
  },
  "automergePatch": {
    "description": "Automerge \`patch\` upgrades if they pass tests.",
    "lockFileMaintenance": {
      "automerge": true,
    },
    "patch": {
      "automerge": true,
    },
    "pin": {
      "automerge": true,
    },
    "separateMinorPatch": true,
  },
  "automergePr": {
    "automergeType": "pr",
    "description": "Raise a PR first before any automerging.",
  },
  "automergeRequireAllStatusChecks": {
    "description": "Require all status checks to pass before any automerging.",
    "ignoreTests": false,
  },
  "automergeTesters": {
    "description": "Update testing packages automatically if tests pass.",
    "packageRules": [
      {
        "automerge": true,
        "extends": [
          "packages:test",
        ],
      },
    ],
  },
  "automergeTypes": {
    "description": "Update \`@types/*\` packages automatically if tests pass.",
    "packageRules": [
      {
        "automerge": true,
        "matchPackagePrefixes": [
          "@types/",
        ],
      },
    ],
  },
  "combinePatchMinorReleases": {
    "description": "Do not separate \`patch\` and \`minor\` upgrades into separate PRs for the same dependency.",
    "separateMinorPatch": false,
  },
  "dependencyDashboard": {
    "dependencyDashboard": true,
    "description": "Enable Renovate Dependency Dashboard creation.",
  },
  "dependencyDashboardApproval": {
    "dependencyDashboardApproval": true,
    "description": "Enable Renovate Dependency Dashboard approval workflow.",
  },
  "disableDependencyDashboard": {
    "dependencyDashboard": false,
    "description": "Disable Renovate Dependency Dashboard creation.",
  },
  "disableDevDependencies": {
    "description": "Do not renovate \`devDependencies\` versions/ranges.",
    "packageRules": [
      {
        "enabled": false,
        "matchDepTypes": [
          "devDependencies",
        ],
      },
    ],
  },
  "disableDigestUpdates": {
    "description": "Disable \`digest\` and Git hash updates.",
    "digest": {
      "enabled": false,
    },
  },
  "disableDomain": {
    "description": "Disable requests to a particular domain.",
    "hostRules": [
      {
        "enabled": false,
        "matchHost": "{{arg0}}",
      },
    ],
  },
  "disableHost": {
    "description": "Disable requests to a particular host.",
    "hostRules": [
      {
        "enabled": false,
        "matchHost": "https://{{arg0}}",
      },
    ],
  },
  "disableLockFiles": {
    "description": "Disable lock file updates.",
    "updateLockFiles": false,
  },
  "disableMajorUpdates": {
    "description": "Disable \`major\` updates.",
    "major": {
      "enabled": false,
    },
  },
  "disablePeerDependencies": {
    "description": "Do not renovate \`peerDependencies\` versions/ranges.",
    "packageRules": [
      {
        "enabled": false,
        "matchDepTypes": [
          "peerDependencies",
        ],
      },
    ],
  },
  "disablePrControls": {
    "description": "Remove the checkbox controls from PRs.",
    "prBodyTemplate": "{{{header}}}{{{table}}}{{{notes}}}{{{changelogs}}}{{{configDescription}}}{{{footer}}}",
  },
  "disableRateLimiting": {
    "description": "Remove hourly and concurrent rate limits.",
    "prConcurrentLimit": 0,
    "prHourlyLimit": 0,
  },
  "disableRenovate": {
    "description": "Disable Renovate.",
    "enabled": false,
  },
  "disableVulnerabilityAlerts": {
    "description": "Disable vulnerability alerts completely.",
    "vulnerabilityAlerts": {
      "enabled": false,
    },
  },
  "doNotPinPackage": {
    "description": "Disable version pinning for \`{{arg0}}\`.",
    "packageRules": [
      {
        "matchPackageNames": [
          "{{arg0}}",
        ],
        "rangeStrategy": "replace",
      },
    ],
  },
  "docker": {
    "description": "Keep Dockerfile \`FROM\` sources updated.",
    "docker": {
      "enabled": true,
    },
  },
  "enablePreCommit": {
    "description": "Enable the pre-commit manager.",
    "pre-commit": {
      "enabled": true,
    },
  },
  "enableRenovate": {
    "description": "Enable Renovate.",
    "enabled": true,
  },
  "enableVulnerabilityAlerts": {
    "description": "Raise PR when vulnerability alerts are detected.",
    "vulnerabilityAlerts": {
      "enabled": true,
    },
  },
  "enableVulnerabilityAlertsWithLabel": {
    "description": "Raise PR when vulnerability alerts are detected with label \`{{arg0}}\`.",
    "vulnerabilityAlerts": {
      "enabled": true,
      "labels": [
        "{{arg0}}",
      ],
    },
  },
  "followTag": {
    "description": "For package \`{{arg0}}\`, strictly follow release tag \`{{arg1}}\`.",
    "packageRules": [
      {
        "followTag": "{{arg1}}",
        "matchPackageNames": [
          "{{arg0}}",
        ],
      },
    ],
  },
  "gitSignOff": {
    "commitBody": "Signed-off-by: {{{gitAuthor}}}",
    "description": "Append \`Signed-off-by:\` to signoff Git commits.",
  },
  "githubComToken": {
    "description": "Use provided token for \`github.com\` lookups. Do not configure this if you are already running on \`github.com\`.",
    "hostRules": [
      {
        "encrypted": {
          "token": "{{arg0}}",
        },
        "matchHost": "github.com",
      },
    ],
  },
  "gomod": {
    "description": "Enable Go modules support.",
    "gomod": {
      "enabled": true,
    },
  },
  "group": {
    "description": "Group \`{{arg1}}\` packages into same branch/PR.",
    "packageRules": [
      {
        "extends": [
          "{{arg0}}",
        ],
        "groupName": "{{arg1}}",
      },
    ],
  },
  "ignoreModulesAndTests": {
    "description": "Ignore \`node_modules\`, \`bower_components\`, \`vendor\` and various test/tests directories.",
    "ignorePaths": [
      "**/node_modules/**",
      "**/bower_components/**",
      "**/vendor/**",
      "**/examples/**",
      "**/__tests__/**",
      "**/test/**",
      "**/tests/**",
      "**/__fixtures__/**",
    ],
  },
  "ignoreUnstable": {
    "description": "Upgrade to unstable versions only if the existing version is unstable.",
    "ignoreUnstable": true,
  },
  "includeNodeModules": {
    "description": "Include \`package.json\` files found within \`node_modules\` folders or \`bower_components\`.",
    "ignorePaths": [],
  },
  "label": {
    "description": "Apply label \`{{arg0}}\` to PRs.",
    "labels": [
      "{{arg0}}",
    ],
  },
  "labels": {
    "description": "Apply labels \`{{arg0}}\` and \`{{arg1}}\` to PRs.",
    "labels": [
      "{{arg0}}",
      "{{arg1}}",
    ],
  },
  "maintainLockFilesDisabled": {
    "description": "Update existing lock files only when \`package.json\` is modified.",
    "lockFileMaintenance": {
      "enabled": false,
    },
  },
  "maintainLockFilesMonthly": {
    "description": "Run lock file maintenance (updates) on the first day of each month.",
    "lockFileMaintenance": {
      "enabled": true,
      "extends": [
        "schedule:monthly",
      ],
    },
  },
  "maintainLockFilesWeekly": {
    "description": "Run lock file maintenance (updates) early Monday mornings.",
    "lockFileMaintenance": {
      "enabled": true,
      "extends": [
        "schedule:weekly",
      ],
    },
  },
  "meteor": {
    "description": "Keep Meteor Npm.depends packages updated.",
    "meteor": {
      "enabled": true,
    },
  },
  "noUnscheduledUpdates": {
    "description": "Only update branches when scheduled.",
    "updateNotScheduled": false,
  },
  "npm": {
    "description": "Keep \`package.json\` npm dependencies updated.",
    "npm": {
      "enabled": true,
    },
  },
  "onlyNpm": {
    "description": "Renovate only npm dependencies.",
    "docker": {
      "enabled": false,
    },
    "meteor": {
      "enabled": false,
    },
  },
  "pathSemanticCommitType": {
    "description": "Use semanticCommitType \`{{arg0}}\` for all package files matching path \`{{arg1}}\`.",
    "packageRules": [
      {
        "matchPaths": [
          "{{arg0}}",
        ],
        "semanticCommitType": "{{arg1}}",
      },
    ],
  },
  "pinAllExceptPeerDependencies": {
    "description": "Pin all dependency versions except \`peerDependencies\`.",
    "packageRules": [
      {
        "matchPackagePatterns": [
          "*",
        ],
        "rangeStrategy": "pin",
      },
      {
        "matchDepTypes": [
          "engines",
          "peerDependencies",
        ],
        "rangeStrategy": "auto",
      },
    ],
  },
  "pinDependencies": {
    "description": "Pin dependency versions where \`depType=dependencies\`. Usually applies only to non-dev dependencies in \`package.json\`.",
    "packageRules": [
      {
        "matchDepTypes": [
          "dependencies",
        ],
        "rangeStrategy": "pin",
      },
    ],
  },
  "pinDevDependencies": {
    "description": "Pin dependency versions for \`devDependencies\`.",
    "packageRules": [
      {
        "matchDepTypes": [
          "devDependencies",
        ],
        "rangeStrategy": "pin",
      },
    ],
  },
  "pinDigestsDisabled": {
    "description": "Disable pinning of Docker dependency digests.",
    "pinDigests": false,
  },
  "pinOnlyDevDependencies": {
    "description": "Pin dependency versions for \`devDependencies\` and retain SemVer ranges for others.",
    "packageRules": [
      {
        "matchPackagePatterns": [
          "*",
        ],
        "rangeStrategy": "replace",
      },
      {
        "matchDepTypes": [
          "devDependencies",
        ],
        "rangeStrategy": "pin",
      },
      {
        "matchDepTypes": [
          "peerDependencies",
        ],
        "rangeStrategy": "widen",
      },
    ],
  },
  "pinSkipCi": {
    "description": "Add \`[skip ci]\` to commit message body whenever pinning.",
    "pin": {
      "commitBody": "[skip ci]",
    },
  },
  "pinVersions": {
    "description": "Use version pinning (maintain a single version only and not SemVer ranges).",
    "rangeStrategy": "pin",
  },
  "prConcurrentLimit10": {
    "description": "Limit to maximum 10 open PRs at any time.",
    "prConcurrentLimit": 10,
  },
  "prConcurrentLimit20": {
    "description": "Limit to maximum 20 open PRs at any time.",
    "prConcurrentLimit": 20,
  },
  "prConcurrentLimitNone": {
    "description": "Remove limit for open PRs at any time.",
    "prConcurrentLimit": 0,
  },
  "prHourlyLimit1": {
    "description": "Rate limit PR creation to a maximum of one per hour.",
    "prHourlyLimit": 1,
  },
  "prHourlyLimit2": {
    "description": "Rate limit PR creation to a maximum of two per hour.",
    "prHourlyLimit": 2,
  },
  "prHourlyLimit4": {
    "description": "Rate limit PR creation to a maximum of four per hour.",
    "prHourlyLimit": 4,
  },
  "prHourlyLimitNone": {
    "description": "Removes rate limit for PR creation per hour.",
    "prHourlyLimit": 0,
  },
  "prImmediately": {
    "description": "Raise PRs immediately (after branch is created).",
    "prCreation": "immediate",
  },
  "prNotPending": {
    "description": "Wait for branch tests to pass or fail before creating the PR.",
    "prCreation": "not-pending",
  },
  "preserveSemverRanges": {
    "description": "Preserve (but continue to upgrade) any existing SemVer ranges.",
    "packageRules": [
      {
        "matchPackagePatterns": [
          "*",
        ],
        "rangeStrategy": "replace",
      },
    ],
  },
  "rebaseStalePrs": {
    "description": "Rebase existing PRs any time the base branch has been updated.",
    "rebaseWhen": "behind-base-branch",
  },
  "renovatePrefix": {
    "branchPrefix": "renovate/",
    "description": "Prefix \`renovate/\` to all branch names.",
  },
  "respectLatest": {
    "description": "Upgrade versions up to the "latest" tag in the npm registry.",
    "respectLatest": true,
  },
  "reviewer": {
    "description": "Add \`{{arg0}}\` as reviewer for PRs.",
    "reviewers": [
      "{{arg0}}",
    ],
  },
  "semanticCommitScope": {
    "description": "Use semantic commit scope \`{{arg0}}\` for all commits and PR titles.",
    "semanticCommitScope": "{{arg0}}",
  },
  "semanticCommitScopeDisabled": {
    "description": "Disable semantic commit scope for all commits and PR titles.",
    "semanticCommitScope": null,
  },
  "semanticCommitType": {
    "description": "Use \`{{arg0}}\` as semantic commit type for commit messages and PR titles.",
    "semanticCommitType": "{{arg0}}",
  },
  "semanticCommitTypeAll": {
    "description": "If Renovate detects semantic commits, it will use semantic commit type \`{{arg0}}\` for all commits.",
    "packageRules": [
      {
        "matchPackagePatterns": [
          "*",
        ],
        "semanticCommitType": "{{arg0}}",
      },
    ],
  },
  "semanticCommits": {
    "description": "Use semantic prefixes for commit messages and PR titles.",
    "semanticCommits": "enabled",
  },
  "semanticCommitsDisabled": {
    "description": "Disable semantic prefixes for commit messages and PR titles.",
    "semanticCommits": "disabled",
  },
  "semanticPrefixChore": {
    "description": "Use \`chore\` as semantic commit type for commit messages and PR titles.",
    "extends": [
      ":semanticCommitType(chore)",
    ],
  },
  "semanticPrefixFix": {
    "description": "Use \`fix\` as semantic commit type for commit messages and PR titles.",
    "extends": [
      ":semanticCommitType(fix)",
    ],
  },
  "semanticPrefixFixDepsChoreOthers": {
    "description": "If Renovate detects semantic commits, it will use semantic commit type \`fix\` for dependencies and \`chore\` for all others.",
    "packageRules": [
      {
        "matchPackagePatterns": [
          "*",
        ],
        "semanticCommitType": "chore",
      },
      {
        "matchDepTypes": [
          "dependencies",
          "require",
        ],
        "semanticCommitType": "fix",
      },
      {
        "matchDatasources": [
          "maven",
        ],
        "matchDepTypes": [
          "compile",
          "provided",
          "runtime",
          "system",
          "import",
          "parent",
        ],
        "semanticCommitType": "fix",
      },
    ],
  },
  "separateMajorReleases": {
    "description": "Separate \`major\` versions of dependencies into individual branches/PRs.",
    "separateMajorMinor": true,
  },
  "separateMultipleMajorReleases": {
    "description": "Separate each \`major\` version of dependencies into individual branches/PRs.",
    "separateMajorMinor": true,
    "separateMultipleMajor": true,
  },
  "separatePatchReleases": {
    "description": "Separate \`patch\` and \`minor\` releases of dependencies into separate PRs.",
    "separateMinorPatch": true,
  },
  "skipStatusChecks": {
    "description": "Skip status checks and automerge right away.",
    "ignoreTests": true,
  },
  "timezone": {
    "description": "Evaluate schedules according to timezone \`{{arg0}}\`.",
    "timezone": "{{arg0}}",
  },
  "updateNotScheduled": {
    "description": "Keep existing branches updated even when not scheduled.",
    "updateNotScheduled": true,
  },
  "widenPeerDependencies": {
    "description": "Always widen \`peerDependencies\` SemVer ranges when updating, instead of replacing.",
    "packageRules": [
      {
        "matchDepTypes": [
          "peerDependencies",
        ],
        "rangeStrategy": "widen",
      },
    ],
  },
}
`;

exports[`config/presets/internal/index contains all docker presets 1`] = `
{
  "disable": {
    "circleci": {
      "enabled": false,
    },
    "description": "Disable Docker updates.",
    "docker": {
      "enabled": false,
    },
    "docker-compose": {
      "enabled": false,
    },
  },
  "disableMajor": {
    "description": "Disable Docker \`major\` updates.",
    "packageRules": [
      {
        "enabled": false,
        "matchDatasources": [
          "docker",
        ],
        "matchUpdateTypes": [
          "major",
        ],
      },
    ],
  },
  "enableMajor": {
    "description": "Enable Docker \`major\` updates.",
    "packageRules": [
      {
        "enabled": true,
        "matchDatasources": [
          "docker",
        ],
        "matchUpdateTypes": [
          "major",
        ],
      },
    ],
  },
  "pinDigests": {
    "description": "Pin Docker digests.",
    "docker": {
      "pinDigests": true,
    },
  },
}
`;

exports[`config/presets/internal/index contains all group presets 1`] = `
{
  "HangfireMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from Hangfire monorepo together.",
        "extends": "monorepo:Hangfire",
        "groupName": "Hangfire monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "accountsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from accounts monorepo together.",
        "extends": "monorepo:accounts",
        "groupName": "accounts monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "acotMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from acot monorepo together.",
        "extends": "monorepo:acot",
        "groupName": "acot monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "ag-gridMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from ag-grid monorepo together.",
        "extends": "monorepo:ag-grid",
        "groupName": "ag-grid monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "algolia-react-instantsearchMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from algolia-react-instantsearch monorepo together.",
        "extends": "monorepo:algolia-react-instantsearch",
        "groupName": "algolia-react-instantsearch monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "algoliasearch-autocompleteMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from algoliasearch-autocomplete monorepo together.",
        "extends": "monorepo:algoliasearch-autocomplete",
        "groupName": "algoliasearch-autocomplete monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "algoliasearch-client-javascriptMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from algoliasearch-client-javascript monorepo together.",
        "extends": "monorepo:algoliasearch-client-javascript",
        "groupName": "algoliasearch-client-javascript monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "all": {
    "description": "Group all updates together.",
    "groupName": "all dependencies",
    "groupSlug": "all",
    "lockFileMaintenance": {
      "enabled": false,
    },
    "packageRules": [
      {
        "groupName": "all dependencies",
        "groupSlug": "all",
        "matchPackagePatterns": [
          "*",
        ],
      },
    ],
    "separateMajorMinor": false,
  },
  "allApollographql": {
    "description": "Group all packages published by Apollo GraphQL together.",
    "packageRules": [
      {
        "extends": "packages:apollographql",
        "groupName": "Apollo GraphQL packages",
      },
    ],
  },
  "allNonMajor": {
    "description": "Group all \`minor\` and \`patch\` updates together.",
    "packageRules": [
      {
        "groupName": "all non-major dependencies",
        "groupSlug": "all-minor-patch",
        "matchPackagePatterns": [
          "*",
        ],
        "matchUpdateTypes": [
          "minor",
          "patch",
        ],
      },
    ],
  },
  "angular-cliMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from angular-cli monorepo together.",
        "extends": "monorepo:angular-cli",
        "groupName": "angular-cli monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "angular-eslintMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from angular-eslint monorepo together.",
        "extends": "monorepo:angular-eslint",
        "groupName": "angular-eslint monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "angularMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from angular monorepo together.",
        "extends": "monorepo:angular",
        "groupName": "angular monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "angularfireMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from angularfire monorepo together.",
        "extends": "monorepo:angularfire",
        "groupName": "angularfire monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "angularjsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from angularjs monorepo together.",
        "extends": "monorepo:angularjs",
        "groupName": "angularjs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "angularmaterialMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from angularmaterial monorepo together.",
        "extends": "monorepo:angularmaterial",
        "groupName": "angularmaterial monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "apache-camelMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from apache-camel monorepo together.",
        "extends": "monorepo:apache-camel",
        "groupName": "apache-camel monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "apollo-serverMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from apollo-server monorepo together.",
        "extends": "monorepo:apollo-server",
        "groupName": "apollo-server monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "apolloclientMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from apolloclient monorepo together.",
        "extends": "monorepo:apolloclient",
        "groupName": "apolloclient monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "applicationinsights-dotnetMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from applicationinsights-dotnet monorepo together.",
        "extends": "monorepo:applicationinsights-dotnet",
        "groupName": "applicationinsights-dotnet monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "arcus.background-jobsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from arcus.background-jobs monorepo together.",
        "extends": "monorepo:arcus.background-jobs",
        "groupName": "arcus.background-jobs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "arcus.event-gridMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from arcus.event-grid monorepo together.",
        "extends": "monorepo:arcus.event-grid",
        "groupName": "arcus.event-grid monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "arcus.messagingMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from arcus.messaging monorepo together.",
        "extends": "monorepo:arcus.messaging",
        "groupName": "arcus.messaging monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "arcus.observabilityMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from arcus.observability monorepo together.",
        "extends": "monorepo:arcus.observability",
        "groupName": "arcus.observability monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "arcus.securityMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from arcus.security monorepo together.",
        "extends": "monorepo:arcus.security",
        "groupName": "arcus.security monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "arcus.webapiMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from arcus.webapi monorepo together.",
        "extends": "monorepo:arcus.webapi",
        "groupName": "arcus.webapi monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "aspnet aspnetwebstackMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from aspnet aspnetwebstack monorepo together.",
        "extends": "monorepo:aspnet aspnetwebstack",
        "groupName": "aspnet aspnetwebstack monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "aspnet extensionsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from aspnet extensions monorepo together.",
        "extends": "monorepo:aspnet extensions",
        "groupName": "aspnet extensions monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "aspnet-api-versioningMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from aspnet-api-versioning monorepo together.",
        "extends": "monorepo:aspnet-api-versioning",
        "groupName": "aspnet-api-versioning monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "automapper-dotnetMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from automapper-dotnet monorepo together.",
        "extends": "monorepo:automapper-dotnet",
        "groupName": "automapper-dotnet monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "aws-cdkMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from aws-cdk monorepo together.",
        "extends": "monorepo:aws-cdk",
        "groupName": "aws-cdk monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "aws-java-sdk-v2Monorepo": {
    "packageRules": [
      {
        "description": "Group packages from aws-java-sdk-v2 monorepo together.",
        "extends": "monorepo:aws-java-sdk-v2",
        "groupName": "aws-java-sdk-v2 monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "aws-java-sdkMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from aws-java-sdk monorepo together.",
        "extends": "monorepo:aws-java-sdk",
        "groupName": "aws-java-sdk monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "aws-lambda-powertools-typescriptMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from aws-lambda-powertools-typescript monorepo together.",
        "extends": "monorepo:aws-lambda-powertools-typescript",
        "groupName": "aws-lambda-powertools-typescript monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "aws-sdk-js-v3Monorepo": {
    "packageRules": [
      {
        "description": "Group packages from aws-sdk-js-v3 monorepo together.",
        "extends": "monorepo:aws-sdk-js-v3",
        "groupName": "aws-sdk-js-v3 monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "aws-sdk-netMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from aws-sdk-net monorepo together.",
        "extends": "monorepo:aws-sdk-net",
        "groupName": "aws-sdk-net monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "awsappsyncMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from awsappsync monorepo together.",
        "extends": "monorepo:awsappsync",
        "groupName": "awsappsync monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "azure azure-libraries-for-netMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from azure azure-libraries-for-net monorepo together.",
        "extends": "monorepo:azure azure-libraries-for-net",
        "groupName": "azure azure-libraries-for-net monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "azure azure-sdk-for-netMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from azure azure-sdk-for-net monorepo together.",
        "extends": "monorepo:azure azure-sdk-for-net",
        "groupName": "azure azure-sdk-for-net monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "azure azure-storage-netMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from azure azure-storage-net monorepo together.",
        "extends": "monorepo:azure azure-storage-net",
        "groupName": "azure azure-storage-net monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "babel6Monorepo": {
    "packageRules": [
      {
        "description": "Group packages from babel6 monorepo together.",
        "extends": "monorepo:babel6",
        "groupName": "babel6 monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "babelMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from babel monorepo together.",
        "extends": "monorepo:babel",
        "groupName": "babel monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "basetMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from baset monorepo together.",
        "extends": "monorepo:baset",
        "groupName": "baset monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "braveMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from brave monorepo together.",
        "extends": "monorepo:brave",
        "groupName": "brave monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "bugsnag-jsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from bugsnag-js monorepo together.",
        "extends": "monorepo:bugsnag-js",
        "groupName": "bugsnag-js monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "capacitorMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from capacitor monorepo together.",
        "extends": "monorepo:capacitor",
        "groupName": "capacitor monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "chakra-uiMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from chakra-ui monorepo together.",
        "extends": "monorepo:chakra-ui",
        "groupName": "chakra-ui monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "chromelyMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from chromely monorepo together.",
        "extends": "monorepo:chromely",
        "groupName": "chromely monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "clarityMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from clarity monorepo together.",
        "extends": "monorepo:clarity",
        "groupName": "clarity monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "clearscriptMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from clearscript monorepo together.",
        "extends": "monorepo:clearscript",
        "groupName": "clearscript monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "codemirror": {
    "description": "Group CodeMirror packages together.",
    "packageRules": [
      {
        "groupName": "CodeMirror",
        "matchPackagePrefixes": [
          "@codemirror/",
        ],
      },
    ],
  },
  "commitlintMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from commitlint monorepo together.",
        "extends": "monorepo:commitlint",
        "groupName": "commitlint monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "contentful-rich-textMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from contentful-rich-text monorepo together.",
        "extends": "monorepo:contentful-rich-text",
        "groupName": "contentful-rich-text monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "datadog-browser-sdkMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from datadog-browser-sdk monorepo together.",
        "extends": "monorepo:datadog-browser-sdk",
        "groupName": "datadog-browser-sdk monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "date-ioMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from date-io monorepo together.",
        "extends": "monorepo:date-io",
        "groupName": "date-io monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "definitelyTyped": {
    "description": "Group all \`@types\` packages together.",
    "packageRules": [
      {
        "groupName": "definitelyTyped",
        "matchPackagePrefixes": [
          "@types/",
        ],
      },
    ],
  },
  "denoMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from deno monorepo together.",
        "extends": "monorepo:deno",
        "groupName": "deno monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "devextreme-reactiveMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from devextreme-reactive monorepo together.",
        "extends": "monorepo:devextreme-reactive",
        "groupName": "devextreme-reactive monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "dnd-kitMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from dnd-kit monorepo together.",
        "extends": "monorepo:dnd-kit",
        "groupName": "dnd-kit monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "docusaurusMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from docusaurus monorepo together.",
        "extends": "monorepo:docusaurus",
        "groupName": "docusaurus monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "dotNetCore": {
    "description": ".NET Core Docker containers.",
    "packageRules": [
      {
        "groupName": ".NET Core Docker containers",
        "matchDatasources": [
          "docker",
        ],
        "matchPackagePrefixes": [
          "mcr.microsoft.com/dotnet/",
        ],
      },
    ],
  },
  "dotnet-azure-ad-identitymodel-extensionsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from dotnet-azure-ad-identitymodel-extensions monorepo together.",
        "extends": "monorepo:dotnet-azure-ad-identitymodel-extensions",
        "groupName": "dotnet-azure-ad-identitymodel-extensions monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "dotnet-wcfMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from dotnet-wcf monorepo together.",
        "extends": "monorepo:dotnet-wcf",
        "groupName": "dotnet-wcf monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "dotnetMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from dotnet monorepo together.",
        "extends": "monorepo:dotnet",
        "groupName": "dotnet monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "dropwizardMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from dropwizard monorepo together.",
        "extends": "monorepo:dropwizard",
        "groupName": "dropwizard monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "elastic-apm-agent-rum-jsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from elastic-apm-agent-rum-js monorepo together.",
        "extends": "monorepo:elastic-apm-agent-rum-js",
        "groupName": "elastic-apm-agent-rum-js monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "electron-forgeMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from electron-forge monorepo together.",
        "extends": "monorepo:electron-forge",
        "groupName": "electron-forge monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "ember-decoratorsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from ember-decorators monorepo together.",
        "extends": "monorepo:ember-decorators",
        "groupName": "ember-decorators monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "embroiderMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from embroider monorepo together.",
        "extends": "monorepo:embroider",
        "groupName": "embroider monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "emojibaseMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from emojibase monorepo together.",
        "extends": "monorepo:emojibase",
        "groupName": "emojibase monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "emotionMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from emotion monorepo together.",
        "extends": "monorepo:emotion",
        "groupName": "emotion monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "eslint-config-globexMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from eslint-config-globex monorepo together.",
        "extends": "monorepo:eslint-config-globex",
        "groupName": "eslint-config-globex monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "expoMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from expo monorepo together.",
        "extends": "monorepo:expo",
        "groupName": "expo monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "feathersMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from feathers monorepo together.",
        "extends": "monorepo:feathers",
        "groupName": "feathers monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "feignMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from feign monorepo together.",
        "extends": "monorepo:feign",
        "groupName": "feign monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "felaMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from fela monorepo together.",
        "extends": "monorepo:fela",
        "groupName": "fela monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "fimbullinterMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from fimbullinter monorepo together.",
        "extends": "monorepo:fimbullinter",
        "groupName": "fimbullinter monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "flopflipMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from flopflip monorepo together.",
        "extends": "monorepo:flopflip",
        "groupName": "flopflip monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "fontsourceMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from fontsource monorepo together.",
        "extends": "monorepo:fontsource",
        "groupName": "fontsource monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "formatjsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from formatjs monorepo together.",
        "extends": "monorepo:formatjs",
        "groupName": "formatjs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "fortawesome": {
    "description": "Group all packages by Font Awesome together.",
    "packageRules": [
      {
        "groupName": "Font Awesome",
        "matchPackagePrefixes": [
          "@fortawesome/",
        ],
      },
    ],
  },
  "framework7Monorepo": {
    "packageRules": [
      {
        "description": "Group packages from framework7 monorepo together.",
        "extends": "monorepo:framework7",
        "groupName": "framework7 monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "fullcalendarMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from fullcalendar monorepo together.",
        "extends": "monorepo:fullcalendar",
        "groupName": "fullcalendar monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "fusionjs": {
    "description": "Group Fusion.js packages together.",
    "matchPackageNames": [
      "fusion-cli",
      "fusion-core",
      "fusion-test-utils",
      "fusion-tokens",
    ],
    "matchPackagePrefixes": [
      "fusion-plugin-",
      "fusion-react",
      "^usion-apollo",
    ],
  },
  "gatsbyMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from gatsby monorepo together.",
        "extends": "monorepo:gatsby",
        "groupName": "gatsby monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "glimmer": {
    "description": "Group Glimmer.js packages together.",
    "packageRules": [
      {
        "groupName": "Glimmer.js packages",
        "groupSlug": "glimmer",
        "matchPackageNames": [
          "@glimmer/component",
          "@glimmer/tracking",
        ],
      },
    ],
  },
  "goOpenapi": {
    "description": "Group \`go-openapi\` packages together.",
    "packageRules": [
      {
        "groupName": "go-openapi packages",
        "groupSlug": "go-openapi",
        "matchDatasources": [
          "go",
        ],
        "matchPackagePrefixes": [
          "github.com/go-openapi/",
        ],
      },
    ],
  },
  "googleapis": {
    "description": "Group \`googleapis\` packages together.",
    "packageRules": [
      {
        "extends": "packages:googleapis",
        "groupName": "googleapis packages",
      },
    ],
  },
  "grafanaMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from grafana monorepo together.",
        "extends": "monorepo:grafana",
        "groupName": "grafana monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "graphql-meshMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from graphql-mesh monorepo together.",
        "extends": "monorepo:graphql-mesh",
        "groupName": "graphql-mesh monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "graphql-modulesMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from graphql-modules monorepo together.",
        "extends": "monorepo:graphql-modules",
        "groupName": "graphql-modules monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "graphql-toolsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from graphql-tools monorepo together.",
        "extends": "monorepo:graphql-tools",
        "groupName": "graphql-tools monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "graphqlcodegeneratorMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from graphqlcodegenerator monorepo together.",
        "extends": "monorepo:graphqlcodegenerator",
        "groupName": "graphqlcodegenerator monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "groovyMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from groovy monorepo together.",
        "extends": "monorepo:groovy",
        "groupName": "groovy monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "guavaMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from guava monorepo together.",
        "extends": "monorepo:guava",
        "groupName": "guava monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "hapijsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from hapijs monorepo together.",
        "extends": "monorepo:hapijs",
        "groupName": "hapijs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "hibernateCommons": {
    "description": "Group Java Hibernate Commons packages.",
    "packageRules": [
      {
        "groupName": "hibernate commons",
        "matchPackagePrefixes": [
          "org.hibernate.common:",
        ],
      },
    ],
  },
  "hibernateCore": {
    "description": "Group Java Hibernate Core packages.",
    "packageRules": [
      {
        "groupName": "hibernate core",
        "matchPackagePrefixes": [
          "org.hibernate:",
        ],
      },
    ],
  },
  "hibernateOgm": {
    "description": "Group Java Hibernate OGM packages.",
    "packageRules": [
      {
        "groupName": "hibernate ogm",
        "matchPackagePrefixes": [
          "org.hibernate.ogm:",
        ],
      },
    ],
  },
  "hibernateValidator": {
    "description": "Group Java Hibernate Validator packages.",
    "packageRules": [
      {
        "groupName": "hibernate validator",
        "matchPackagePrefixes": [
          "org.hibernate.validator:",
        ],
      },
    ],
  },
  "hotchocolateMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from hotchocolate monorepo together.",
        "extends": "monorepo:hotchocolate",
        "groupName": "hotchocolate monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "illuminate": {
    "description": "Group PHP Illuminate packages together.",
    "packageRules": [
      {
        "groupName": "illuminate packages",
        "groupSlug": "illuminate",
        "matchPackagePrefixes": [
          "illuminate/",
        ],
      },
    ],
  },
  "infrastructure-uiMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from infrastructure-ui monorepo together.",
        "extends": "monorepo:infrastructure-ui",
        "groupName": "infrastructure-ui monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "ionic-nativeMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from ionic-native monorepo together.",
        "extends": "monorepo:ionic-native",
        "groupName": "ionic-native monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "istanbuljsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from istanbuljs monorepo together.",
        "extends": "monorepo:istanbuljs",
        "groupName": "istanbuljs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "jasmineMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from jasmine monorepo together.",
        "extends": "monorepo:jasmine",
        "groupName": "jasmine monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "javahamcrestMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from javahamcrest monorepo together.",
        "extends": "monorepo:javahamcrest",
        "groupName": "javahamcrest monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "javascriptengineswitcherMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from javascriptengineswitcher monorepo together.",
        "extends": "monorepo:javascriptengineswitcher",
        "groupName": "javascriptengineswitcher monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "jekyllEcosystem": {
    "description": "Group Jekyll and related Ruby packages together.",
    "packageRules": [
      {
        "groupName": "jekyll ecosystem packages",
        "matchSourceUrlPrefixes": [
          "https://github.com/jekyll/",
          "https://github.com/github/pages-gem",
        ],
      },
    ],
  },
  "jerseyMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from jersey monorepo together.",
        "extends": "monorepo:jersey",
        "groupName": "jersey monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "jestMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from jest monorepo together.",
        "extends": "monorepo:jest",
        "groupName": "jest monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "jestPlusTSJest": {
    "description": "Add \`ts-jest\` \`major\` update to Jest monorepo.",
    "packageRules": [
      {
        "groupName": "jest monorepo",
        "matchSourceUrls": [
          "https://github.com/kulshekhar/ts-jest",
        ],
        "matchUpdateTypes": [
          "major",
        ],
      },
    ],
  },
  "jestPlusTypes": {
    "description": "Add \`@types/jest\` update to Jest monorepo.",
    "packageRules": [
      {
        "groupName": "jest monorepo",
        "matchPackageNames": [
          "@types/jest",
        ],
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "jsTest": {
    "description": "Group JS test packages together.",
    "packageRules": [
      {
        "extends": "packages:jsTest",
        "groupName": "JS test packages",
      },
    ],
  },
  "jsTestMonMajor": {
    "description": "Group non-major JS test package updates together.",
    "packageRules": [
      {
        "extends": "packages:jsTest",
        "groupName": "JS test packages",
        "matchUpdateTypes": [
          "minor",
          "patch",
        ],
      },
    ],
  },
  "jsUnitTest": {
    "description": "Group JavaScript unit test packages together.",
    "packageRules": [
      {
        "extends": "packages:jsUnitTest",
        "groupName": "JS unit test packages",
      },
    ],
  },
  "jsUnitTestNonMajor": {
    "description": "Group JavaScipt unit test packages together for non-major updates.",
    "packageRules": [
      {
        "extends": "packages:jsUnitTest",
        "groupName": "JS unit test packages",
        "matchUpdateTypes": [
          "minor",
          "patch",
        ],
      },
    ],
  },
  "jsplumbMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from jsplumb monorepo together.",
        "extends": "monorepo:jsplumb",
        "groupName": "jsplumb monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "junit5Monorepo": {
    "packageRules": [
      {
        "description": "Group packages from junit5 monorepo together.",
        "extends": "monorepo:junit5",
        "groupName": "junit5 monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "jwtFramework": {
    "description": "Group JWT Framework packages together.",
    "packageRules": [
      {
        "groupName": "JWT Framework packages",
        "matchDatasources": [
          "packagist",
        ],
        "matchPackagePrefixes": [
          "web-token/",
        ],
      },
    ],
  },
  "kotlinMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from kotlin monorepo together.",
        "extends": "monorepo:kotlin",
        "groupName": "kotlin monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "kubernetes": {
    "description": "Group Kubernetes packages together.",
    "packageRules": [
      {
        "groupName": "kubernetes packages",
        "groupSlug": "kubernetes-go",
        "matchDatasources": [
          "go",
        ],
        "matchPackagePrefixes": [
          "k8s.io/api",
          "k8s.io/apiextensions-apiserver",
          "k8s.io/apimachinery",
          "k8s.io/apiserver",
          "k8s.io/cli-runtime",
          "k8s.io/client-go",
          "k8s.io/cloud-provider",
          "k8s.io/cluster-bootstrap",
          "k8s.io/code-generator",
          "k8s.io/component-base",
          "k8s.io/controller-manager",
          "k8s.io/cri-api",
          "k8s.io/csi-translation-lib",
          "k8s.io/kube-aggregator",
          "k8s.io/kube-controller-manager",
          "k8s.io/kube-proxy",
          "k8s.io/kube-scheduler",
          "k8s.io/kubectl",
          "k8s.io/kubelet",
          "k8s.io/legacy-cloud-providers",
          "k8s.io/metrics",
          "k8s.io/mount-utils",
          "k8s.io/pod-security-admission",
          "k8s.io/sample-apiserver",
          "k8s.io/sample-cli-plugin",
          "k8s.io/sample-controller",
        ],
      },
    ],
  },
  "lernaMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from lerna monorepo together.",
        "extends": "monorepo:lerna",
        "groupName": "lerna monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "linguijsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from linguijs monorepo together.",
        "extends": "monorepo:linguijs",
        "groupName": "linguijs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "linters": {
    "description": "Group various lint packages together.",
    "packageRules": [
      {
        "extends": "packages:linters",
        "groupName": "linters",
      },
    ],
  },
  "lodashMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from lodash monorepo together.",
        "extends": "monorepo:lodash",
        "groupName": "lodash monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "loopbackMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from loopback monorepo together.",
        "extends": "monorepo:loopback",
        "groupName": "loopback monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "lrnwebcomponentsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from lrnwebcomponents monorepo together.",
        "extends": "monorepo:lrnwebcomponents",
        "groupName": "lrnwebcomponents monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "mailingMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from mailing monorepo together.",
        "extends": "monorepo:mailing",
        "groupName": "mailing monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "mapstructMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from mapstruct monorepo together.",
        "extends": "monorepo:mapstruct",
        "groupName": "mapstruct monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "masstransitMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from masstransit monorepo together.",
        "extends": "monorepo:masstransit",
        "groupName": "masstransit monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "material-components-webMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from material-components-web monorepo together.",
        "extends": "monorepo:material-components-web",
        "groupName": "material-components-web monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "material-uiMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from material-ui monorepo together.",
        "extends": "monorepo:material-ui",
        "groupName": "material-ui monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "mdc-reactMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from mdc-react monorepo together.",
        "extends": "monorepo:mdc-react",
        "groupName": "mdc-react monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "mdxMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from mdx monorepo together.",
        "extends": "monorepo:mdx",
        "groupName": "mdx monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "middy-jsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from middy-js monorepo together.",
        "extends": "monorepo:middy-js",
        "groupName": "middy-js monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "mikro-ormMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from mikro-orm monorepo together.",
        "extends": "monorepo:mikro-orm",
        "groupName": "mikro-orm monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "mockitoMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from mockito monorepo together.",
        "extends": "monorepo:mockito",
        "groupName": "mockito monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "monorepos": {
    "description": "Group known monorepo packages together.",
    "extends": [
      "group:accountsMonorepo",
      "group:acotMonorepo",
      "group:ag-gridMonorepo",
      "group:algolia-react-instantsearchMonorepo",
      "group:algoliasearch-autocompleteMonorepo",
      "group:algoliasearch-client-javascriptMonorepo",
      "group:angularMonorepo",
      "group:angular-cliMonorepo",
      "group:angular-eslintMonorepo",
      "group:angularfireMonorepo",
      "group:angularjsMonorepo",
      "group:apollo-serverMonorepo",
      "group:apolloclientMonorepo",
      "group:applicationinsights-dotnetMonorepo",
      "group:arcus.background-jobsMonorepo",
      "group:arcus.event-gridMonorepo",
      "group:arcus.messagingMonorepo",
      "group:arcus.observabilityMonorepo",
      "group:arcus.securityMonorepo",
      "group:arcus.webapiMonorepo",
      "group:aspnet aspnetwebstackMonorepo",
      "group:aspnet extensionsMonorepo",
      "group:aspnet-api-versioningMonorepo",
      "group:automapper-dotnetMonorepo",
      "group:aws-cdkMonorepo",
      "group:aws-lambda-powertools-typescriptMonorepo",
      "group:aws-sdk-js-v3Monorepo",
      "group:aws-sdk-netMonorepo",
      "group:awsappsyncMonorepo",
      "group:azure azure-libraries-for-netMonorepo",
      "group:azure azure-sdk-for-netMonorepo",
      "group:azure azure-storage-netMonorepo",
      "group:babelMonorepo",
      "group:basetMonorepo",
      "group:braveMonorepo",
      "group:bugsnag-jsMonorepo",
      "group:capacitorMonorepo",
      "group:chakra-uiMonorepo",
      "group:chromelyMonorepo",
      "group:clarityMonorepo",
      "group:clearscriptMonorepo",
      "group:commitlintMonorepo",
      "group:contentful-rich-textMonorepo",
      "group:datadog-browser-sdkMonorepo",
      "group:date-ioMonorepo",
      "group:denoMonorepo",
      "group:devextreme-reactiveMonorepo",
      "group:dnd-kitMonorepo",
      "group:docusaurusMonorepo",
      "group:dotnetMonorepo",
      "group:dotnet-azure-ad-identitymodel-extensionsMonorepo",
      "group:dotnet-wcfMonorepo",
      "group:dropwizardMonorepo",
      "group:elastic-apm-agent-rum-jsMonorepo",
      "group:electron-forgeMonorepo",
      "group:ember-decoratorsMonorepo",
      "group:emojibaseMonorepo",
      "group:emotionMonorepo",
      "group:eslint-config-globexMonorepo",
      "group:expoMonorepo",
      "group:feathersMonorepo",
      "group:feignMonorepo",
      "group:felaMonorepo",
      "group:fimbullinterMonorepo",
      "group:flopflipMonorepo",
      "group:fontsourceMonorepo",
      "group:formatjsMonorepo",
      "group:framework7Monorepo",
      "group:gatsbyMonorepo",
      "group:grafanaMonorepo",
      "group:graphql-meshMonorepo",
      "group:graphql-modulesMonorepo",
      "group:graphql-toolsMonorepo",
      "group:graphqlcodegeneratorMonorepo",
      "group:groovyMonorepo",
      "group:guavaMonorepo",
      "group:HangfireMonorepo",
      "group:hotchocolateMonorepo",
      "group:infrastructure-uiMonorepo",
      "group:ionic-nativeMonorepo",
      "group:istanbuljsMonorepo",
      "group:jasmineMonorepo",
      "group:javahamcrestMonorepo",
      "group:javascriptengineswitcherMonorepo",
      "group:jerseyMonorepo",
      "group:jestMonorepo",
      "group:jsplumbMonorepo",
      "group:junit5Monorepo",
      "group:kotlinMonorepo",
      "group:lernaMonorepo",
      "group:linguijsMonorepo",
      "group:loopbackMonorepo",
      "group:lrnwebcomponentsMonorepo",
      "group:mailingMonorepo",
      "group:mapstructMonorepo",
      "group:masstransitMonorepo",
      "group:material-components-webMonorepo",
      "group:material-uiMonorepo",
      "group:mdc-reactMonorepo",
      "group:mdxMonorepo",
      "group:middy-jsMonorepo",
      "group:mikro-ormMonorepo",
      "group:mockitoMonorepo",
      "group:mstestMonorepo",
      "group:nestMonorepo",
      "group:nettyMonorepo",
      "group:neutrinoMonorepo",
      "group:nexpectMonorepo",
      "group:nextjsMonorepo",
      "group:ngx-formlyMonorepo",
      "group:ngxs-storeMonorepo",
      "group:nivoMonorepo",
      "group:nswagMonorepo",
      "group:nuxtjsMonorepo",
      "group:opentelemetry-dotnetMonorepo",
      "group:opentelemetry-goMonorepo",
      "group:opentelemetry-jsMonorepo",
      "group:orleansMonorepo",
      "group:parcelMonorepo",
      "group:percy-cliMonorepo",
      "group:picassojsMonorepo",
      "group:pixijsMonorepo",
      "group:playwrightMonorepo",
      "group:pnpjsMonorepo",
      "group:pollyjsMonorepo",
      "group:pouchdbMonorepo",
      "group:prismaMonorepo",
      "group:quartznetMonorepo",
      "group:reach-uiMonorepo",
      "group:reactMonorepo",
      "group:react-adminMonorepo",
      "group:react-apolloMonorepo",
      "group:react-dndMonorepo",
      "group:react-navigationMonorepo",
      "group:react-pageMonorepo",
      "group:react-routerMonorepo",
      "group:reactivestack-cookiesMonorepo",
      "group:reakitMonorepo",
      "group:redwoodMonorepo",
      "group:reg-suitMonorepo",
      "group:remarkMonorepo",
      "group:remixMonorepo",
      "group:router5Monorepo",
      "group:rust-futuresMonorepo",
      "group:rust-wasm-bindgenMonorepo",
      "group:sanityMonorepo",
      "group:sendgrid-nodejsMonorepo",
      "group:sentry-dotnetMonorepo",
      "group:sentry-javascriptMonorepo",
      "group:sentry-rubyMonorepo",
      "group:shedlockMonorepo",
      "group:shopify-app-bridgeMonorepo",
      "group:sitecore-jssMonorepo",
      "group:skiasharpMonorepo",
      "group:springfoxMonorepo",
      "group:steeltoeMonorepo",
      "group:storybookMonorepo",
      "group:strapiMonorepo",
      "group:stryker-jsMonorepo",
      "group:surveyjsMonorepo",
      "group:swashbuckle-aspnetcoreMonorepo",
      "group:system.io.abstractionsMonorepo",
      "group:tanstack-queryMonorepo",
      "group:tauriMonorepo",
      "group:telus-tdsMonorepo",
      "group:telus-tds-coreMonorepo",
      "group:temporalio-tsMonorepo",
      "group:theme-uiMonorepo",
      "group:treatMonorepo",
      "group:trpcMonorepo",
      "group:tsoaMonorepo",
      "group:typefacesMonorepo",
      "group:typescript-eslintMonorepo",
      "group:typography-jsMonorepo",
      "group:uppyMonorepo",
      "group:vitestMonorepo",
      "group:vstestMonorepo",
      "group:vueMonorepo",
      "group:vue-cliMonorepo",
      "group:vuepressMonorepo",
      "group:webdriverioMonorepo",
      "group:workboxMonorepo",
      "group:xtermMonorepo",
      "group:xunit-dotnetMonorepo",
      "group:yarnMonorepo",
      "group:zxing-netMonorepo",
      "group:hapijsMonorepo",
      "group:lodashMonorepo",
      "group:ngrxMonorepo",
      "group:nrwlMonorepo",
      "group:semantic-releaseMonorepo",
      "group:angularmaterialMonorepo",
      "group:apache-camelMonorepo",
      "group:aws-java-sdkMonorepo",
      "group:aws-java-sdk-v2Monorepo",
      "group:babel6Monorepo",
      "group:embroiderMonorepo",
      "group:fullcalendarMonorepo",
      "group:spfxMonorepo",
      "group:wordpressMonorepo",
    ],
    "ignoreDeps": [],
  },
  "mstestMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from mstest monorepo together.",
        "extends": "monorepo:mstest",
        "groupName": "mstest monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "nestMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from nest monorepo together.",
        "extends": "monorepo:nest",
        "groupName": "nest monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "nettyMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from netty monorepo together.",
        "extends": "monorepo:netty",
        "groupName": "netty monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "neutrinoMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from neutrino monorepo together.",
        "extends": "monorepo:neutrino",
        "groupName": "neutrino monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "nexpectMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from nexpect monorepo together.",
        "extends": "monorepo:nexpect",
        "groupName": "nexpect monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "nextjsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from nextjs monorepo together.",
        "extends": "monorepo:nextjs",
        "groupName": "nextjs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "ngrxMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from ngrx monorepo together.",
        "extends": "monorepo:ngrx",
        "groupName": "ngrx monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "ngx-formlyMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from ngx-formly monorepo together.",
        "extends": "monorepo:ngx-formly",
        "groupName": "ngx-formly monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "ngxs-storeMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from ngxs-store monorepo together.",
        "extends": "monorepo:ngxs-store",
        "groupName": "ngxs-store monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "nivoMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from nivo monorepo together.",
        "extends": "monorepo:nivo",
        "groupName": "nivo monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "nodeJs": {
    "description": "Group anything that looks like Node.js together so that it's updated together.",
    "packageRules": [
      {
        "commitMessageTopic": "Node.js",
        "excludePackageNames": [
          "calico/node",
          "kindest/node",
        ],
        "matchDatasources": [
          "docker",
        ],
        "matchPackageNames": [
          "node",
        ],
        "matchPackagePatterns": [
          "/node$",
        ],
      },
    ],
  },
  "nrwlMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from nrwl monorepo together.",
        "extends": "monorepo:nrwl",
        "groupName": "nrwl monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "nswagMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from nswag monorepo together.",
        "extends": "monorepo:nswag",
        "groupName": "nswag monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "nuxtjsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from nuxtjs monorepo together.",
        "extends": "monorepo:nuxtjs",
        "groupName": "nuxtjs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "opentelemetry-dotnetMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from opentelemetry-dotnet monorepo together.",
        "extends": "monorepo:opentelemetry-dotnet",
        "groupName": "opentelemetry-dotnet monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "opentelemetry-goMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from opentelemetry-go monorepo together.",
        "extends": "monorepo:opentelemetry-go",
        "groupName": "opentelemetry-go monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "opentelemetry-jsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from opentelemetry-js monorepo together.",
        "extends": "monorepo:opentelemetry-js",
        "groupName": "opentelemetry-js monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "orleansMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from orleans monorepo together.",
        "extends": "monorepo:orleans",
        "groupName": "orleans monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "parcelMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from parcel monorepo together.",
        "extends": "monorepo:parcel",
        "groupName": "parcel monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "percy-cliMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from percy-cli monorepo together.",
        "extends": "monorepo:percy-cli",
        "groupName": "percy-cli monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "phpstan": {
    "description": "Group PHPStan packages together.",
    "packageRules": [
      {
        "groupName": "PHPStan packages",
        "matchDatasources": [
          "packagist",
        ],
        "matchPackagePatterns": [
          "^phpstan\\/phpstan$",
          "\\/phpstan-",
        ],
      },
    ],
  },
  "picassojsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from picassojs monorepo together.",
        "extends": "monorepo:picassojs",
        "groupName": "picassojs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "pixijsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from pixijs monorepo together.",
        "extends": "monorepo:pixijs",
        "groupName": "pixijs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "playwrightMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from playwright monorepo together.",
        "extends": "monorepo:playwright",
        "groupName": "playwright monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "pnpjsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from pnpjs monorepo together.",
        "extends": "monorepo:pnpjs",
        "groupName": "pnpjs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "pollyjsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from pollyjs monorepo together.",
        "extends": "monorepo:pollyjs",
        "groupName": "pollyjs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "polymer": {
    "description": "Group all \`@polymer\` packages together.",
    "packageRules": [
      {
        "groupName": "polymer packages",
        "matchPackagePrefixes": [
          "@polymer/",
        ],
      },
    ],
  },
  "postcss": {
    "description": "Group PostCSS packages together.",
    "packageRules": [
      {
        "extends": "packages:postcss",
        "groupName": "postcss packages",
      },
    ],
  },
  "pouchdbMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from pouchdb monorepo together.",
        "extends": "monorepo:pouchdb",
        "groupName": "pouchdb monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "prismaMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from prisma monorepo together.",
        "extends": "monorepo:prisma",
        "groupName": "prisma monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "quartznetMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from quartznet monorepo together.",
        "extends": "monorepo:quartznet",
        "groupName": "quartznet monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "reach-uiMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from reach-ui monorepo together.",
        "extends": "monorepo:reach-ui",
        "groupName": "reach-ui monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "react-adminMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from react-admin monorepo together.",
        "extends": "monorepo:react-admin",
        "groupName": "react-admin monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "react-apolloMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from react-apollo monorepo together.",
        "extends": "monorepo:react-apollo",
        "groupName": "react-apollo monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "react-dndMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from react-dnd monorepo together.",
        "extends": "monorepo:react-dnd",
        "groupName": "react-dnd monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "react-navigationMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from react-navigation monorepo together.",
        "extends": "monorepo:react-navigation",
        "groupName": "react-navigation monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "react-pageMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from react-page monorepo together.",
        "extends": "monorepo:react-page",
        "groupName": "react-page monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "react-routerMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from react-router monorepo together.",
        "extends": "monorepo:react-router",
        "groupName": "react-router monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "reactMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from react monorepo together.",
        "extends": "monorepo:react",
        "groupName": "react monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "reactivestack-cookiesMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from reactivestack-cookies monorepo together.",
        "extends": "monorepo:reactivestack-cookies",
        "groupName": "reactivestack-cookies monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "reakitMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from reakit monorepo together.",
        "extends": "monorepo:reakit",
        "groupName": "reakit monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "recommended": {
    "description": "Use curated list of recommended non-monorepo package groupings.",
    "extends": [
      "group:nodeJs",
      "group:allApollographql",
      "group:codemirror",
      "group:fortawesome",
      "group:fusionjs",
      "group:glimmer",
      "group:goOpenapi",
      "group:hibernateCore",
      "group:hibernateValidator",
      "group:hibernateOgm",
      "group:hibernateCommons",
      "group:illuminate",
      "group:jekyllEcosystem",
      "group:jestPlusTSJest",
      "group:jestPlusTypes",
      "group:jwtFramework",
      "group:kubernetes",
      "group:phpstan",
      "group:polymer",
      "group:resilience4j",
      "group:rubyOnRails",
      "group:rubyOmniauth",
      "group:socketio",
      "group:springAmqp",
      "group:springAndroid",
      "group:springBatch",
      "group:springBoot",
      "group:springCloud",
      "group:springCore",
      "group:springData",
      "group:springHateoas",
      "group:springIntegration",
      "group:springKafka",
      "group:springLdap",
      "group:springMobile",
      "group:springOsgi",
      "group:springRestDocs",
      "group:springRoo",
      "group:springScala",
      "group:springSecurity",
      "group:springSession",
      "group:springShell",
      "group:springSocial",
      "group:springStatemachine",
      "group:springWebflow",
      "group:springWs",
      "group:symfony",
    ],
    "ignoreDeps": [],
  },
  "redwoodMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from redwood monorepo together.",
        "extends": "monorepo:redwood",
        "groupName": "redwood monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "reg-suitMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from reg-suit monorepo together.",
        "extends": "monorepo:reg-suit",
        "groupName": "reg-suit monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "remarkMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from remark monorepo together.",
        "extends": "monorepo:remark",
        "groupName": "remark monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "remixMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from remix monorepo together.",
        "extends": "monorepo:remix",
        "groupName": "remix monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "resilience4j": {
    "description": "Group Java Resilience4j packages.",
    "packageRules": [
      {
        "groupName": "resilience4j",
        "matchPackagePrefixes": [
          "io.github.resilience4j:",
        ],
      },
    ],
  },
  "router5Monorepo": {
    "packageRules": [
      {
        "description": "Group packages from router5 monorepo together.",
        "extends": "monorepo:router5",
        "groupName": "router5 monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "rubyOmniauth": {
    "description": "Group OmniAuth packages together.",
    "packageRules": [
      {
        "groupName": "omniauth packages",
        "matchDatasources": [
          "rubygems",
        ],
        "matchPackagePrefixes": [
          "omniauth",
        ],
      },
    ],
  },
  "rubyOnRails": {
    "description": "Group Ruby on Rails packages together.",
    "packageRules": [
      {
        "groupName": "Ruby on Rails packages",
        "matchDatasources": [
          "rubygems",
        ],
        "matchPackageNames": [
          "actioncable",
          "actionmailbox",
          "actionmailer",
          "actionpack",
          "actiontext",
          "actionview",
          "activejob",
          "activemodel",
          "activerecord",
          "activestorage",
          "activesupport",
          "railties",
          "rails",
        ],
      },
    ],
  },
  "rust-futuresMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from rust-futures monorepo together.",
        "extends": "monorepo:rust-futures",
        "groupName": "rust-futures monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "rust-wasm-bindgenMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from rust-wasm-bindgen monorepo together.",
        "extends": "monorepo:rust-wasm-bindgen",
        "groupName": "rust-wasm-bindgen monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "sanityMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from sanity monorepo together.",
        "extends": "monorepo:sanity",
        "groupName": "sanity monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "semantic-releaseMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from semantic-release monorepo together.",
        "extends": "monorepo:semantic-release",
        "groupName": "semantic-release monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "sendgrid-nodejsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from sendgrid-nodejs monorepo together.",
        "extends": "monorepo:sendgrid-nodejs",
        "groupName": "sendgrid-nodejs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "sentry-dotnetMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from sentry-dotnet monorepo together.",
        "extends": "monorepo:sentry-dotnet",
        "groupName": "sentry-dotnet monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "sentry-javascriptMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from sentry-javascript monorepo together.",
        "extends": "monorepo:sentry-javascript",
        "groupName": "sentry-javascript monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "sentry-rubyMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from sentry-ruby monorepo together.",
        "extends": "monorepo:sentry-ruby",
        "groupName": "sentry-ruby monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "shedlockMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from shedlock monorepo together.",
        "extends": "monorepo:shedlock",
        "groupName": "shedlock monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "shopify-app-bridgeMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from shopify-app-bridge monorepo together.",
        "extends": "monorepo:shopify-app-bridge",
        "groupName": "shopify-app-bridge monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "sitecore-jssMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from sitecore-jss monorepo together.",
        "extends": "monorepo:sitecore-jss",
        "groupName": "sitecore-jss monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "skiasharpMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from skiasharp monorepo together.",
        "extends": "monorepo:skiasharp",
        "groupName": "skiasharp monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "socketio": {
    "description": "Group socket.io packages.",
    "packageRules": [
      {
        "groupName": "socket.io packages",
        "matchPackagePrefixes": [
          "socket.io",
        ],
      },
    ],
  },
  "spfxMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from spfx monorepo together.",
        "extends": "monorepo:spfx",
        "groupName": "spfx monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "springAmqp": {
    "description": "Group Java Spring AMQP packages.",
    "packageRules": [
      {
        "groupName": "spring amqp",
        "matchPackagePrefixes": [
          "org.springframework.amqp:",
        ],
      },
    ],
  },
  "springAndroid": {
    "description": "Group Java Spring Android packages.",
    "packageRules": [
      {
        "groupName": "spring android",
        "matchPackagePrefixes": [
          "org.springframework.android:",
        ],
      },
    ],
  },
  "springBatch": {
    "description": "Group Java Spring Batch packages.",
    "packageRules": [
      {
        "groupName": "spring batch",
        "matchPackagePrefixes": [
          "org.springframework.batch:",
        ],
      },
    ],
  },
  "springBoot": {
    "description": "Group Java Spring Boot packages.",
    "packageRules": [
      {
        "groupName": "spring boot",
        "matchPackageNames": [
          "org.springframework.boot",
        ],
        "matchPackagePrefixes": [
          "org.springframework.boot:",
        ],
      },
    ],
  },
  "springCloud": {
    "description": "Group Java Spring Cloud packages.",
    "packageRules": [
      {
        "groupName": "spring cloud",
        "matchPackagePrefixes": [
          "org.springframework.cloud:",
        ],
      },
    ],
  },
  "springCore": {
    "description": "Group Java Spring Core packages.",
    "packageRules": [
      {
        "groupName": "spring core",
        "matchPackagePrefixes": [
          "org.springframework:",
        ],
      },
    ],
  },
  "springData": {
    "description": "Group Java Spring Data packages.",
    "packageRules": [
      {
        "groupName": "spring data",
        "matchPackagePrefixes": [
          "org.springframework.data:",
        ],
      },
    ],
  },
  "springHateoas": {
    "description": "Group Java Spring HATEOAS packages.",
    "packageRules": [
      {
        "groupName": "spring hateoas",
        "matchPackagePrefixes": [
          "org.springframework.hateoas:",
        ],
      },
    ],
  },
  "springIntegration": {
    "description": "Group Java Spring Integration packages.",
    "packageRules": [
      {
        "groupName": "spring integration",
        "matchPackagePrefixes": [
          "org.springframework.integration:",
        ],
      },
    ],
  },
  "springKafka": {
    "description": "Group Java Spring Kafka packages.",
    "packageRules": [
      {
        "groupName": "spring kafka",
        "matchPackagePrefixes": [
          "org.springframework.kafka:",
        ],
      },
    ],
  },
  "springLdap": {
    "description": "Group Java Spring LDAP packages.",
    "packageRules": [
      {
        "groupName": "spring ldap",
        "matchPackagePrefixes": [
          "org.springframework.ldap:",
        ],
      },
    ],
  },
  "springMobile": {
    "description": "Group Java Spring Mobile packages.",
    "packageRules": [
      {
        "groupName": "spring mobile",
        "matchPackagePrefixes": [
          "org.springframework.mobile:",
        ],
      },
    ],
  },
  "springOsgi": {
    "description": "Group Java Spring OSGi packages.",
    "packageRules": [
      {
        "groupName": "spring osgi",
        "matchPackagePrefixes": [
          "org.springframework.osgi:",
        ],
      },
    ],
  },
  "springRestDocs": {
    "description": "Group Java Spring REST Docs packages.",
    "packageRules": [
      {
        "groupName": "spring restdocs",
        "matchPackagePrefixes": [
          "org.springframework.restdocs:",
        ],
      },
    ],
  },
  "springRoo": {
    "description": "Group Java Spring Roo packages.",
    "packageRules": [
      {
        "groupName": "spring roo",
        "matchPackagePrefixes": [
          "org.springframework.roo:",
        ],
      },
    ],
  },
  "springScala": {
    "description": "Group Java Spring Scala packages.",
    "packageRules": [
      {
        "groupName": "spring scala",
        "matchPackagePrefixes": [
          "org.springframework.scala:",
        ],
      },
    ],
  },
  "springSecurity": {
    "description": "Group Java Spring Security packages.",
    "packageRules": [
      {
        "groupName": "spring security",
        "matchPackagePrefixes": [
          "org.springframework.security:",
        ],
      },
    ],
  },
  "springSession": {
    "description": "Group Java Spring Session packages.",
    "packageRules": [
      {
        "groupName": "spring session",
        "matchPackagePrefixes": [
          "org.springframework.session:",
        ],
      },
    ],
  },
  "springShell": {
    "description": "Group Java Spring Shell packages.",
    "packageRules": [
      {
        "groupName": "spring shell",
        "matchPackagePrefixes": [
          "org.springframework.shell:",
        ],
      },
    ],
  },
  "springSocial": {
    "description": "Group Java Spring Social packages.",
    "packageRules": [
      {
        "groupName": "spring social",
        "matchPackagePrefixes": [
          "org.springframework.social:",
        ],
      },
    ],
  },
  "springStatemachine": {
    "description": "Group Java Spring Statemachine packages.",
    "packageRules": [
      {
        "groupName": "spring statemachine",
        "matchPackagePrefixes": [
          "org.springframework.statemachine:",
        ],
      },
    ],
  },
  "springWebflow": {
    "description": "Group Java Spring WebFlow packages.",
    "packageRules": [
      {
        "groupName": "spring webflow",
        "matchPackagePrefixes": [
          "org.springframework.webflow:",
        ],
      },
    ],
  },
  "springWs": {
    "description": "Group Java Spring WS packages.",
    "packageRules": [
      {
        "groupName": "spring ws",
        "matchPackagePrefixes": [
          "org.springframework.ws:",
        ],
      },
    ],
  },
  "springfoxMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from springfox monorepo together.",
        "extends": "monorepo:springfox",
        "groupName": "springfox monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "steeltoeMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from steeltoe monorepo together.",
        "extends": "monorepo:steeltoe",
        "groupName": "steeltoe monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "storybookMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from storybook monorepo together.",
        "extends": "monorepo:storybook",
        "groupName": "storybook monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "strapiMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from strapi monorepo together.",
        "extends": "monorepo:strapi",
        "groupName": "strapi monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "stryker-jsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from stryker-js monorepo together.",
        "extends": "monorepo:stryker-js",
        "groupName": "stryker-js monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "surveyjsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from surveyjs monorepo together.",
        "extends": "monorepo:surveyjs",
        "groupName": "surveyjs monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "swashbuckle-aspnetcoreMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from swashbuckle-aspnetcore monorepo together.",
        "extends": "monorepo:swashbuckle-aspnetcore",
        "groupName": "swashbuckle-aspnetcore monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "symfony": {
    "description": "Group PHP Symfony packages together.",
    "packageRules": [
      {
        "groupName": "symfony packages",
        "groupSlug": "symfony",
        "matchPackagePrefixes": [
          "symfony/",
        ],
      },
    ],
  },
  "system.io.abstractionsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from system.io.abstractions monorepo together.",
        "extends": "monorepo:system.io.abstractions",
        "groupName": "system.io.abstractions monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "tanstack-queryMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from tanstack-query monorepo together.",
        "extends": "monorepo:tanstack-query",
        "groupName": "tanstack-query monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "tauriMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from tauri monorepo together.",
        "extends": "monorepo:tauri",
        "groupName": "tauri monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "telus-tds-coreMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from telus-tds-core monorepo together.",
        "extends": "monorepo:telus-tds-core",
        "groupName": "telus-tds-core monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "telus-tdsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from telus-tds monorepo together.",
        "extends": "monorepo:telus-tds",
        "groupName": "telus-tds monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "temporalio-tsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from temporalio-ts monorepo together.",
        "extends": "monorepo:temporalio-ts",
        "groupName": "temporalio-ts monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "test": {
    "description": "Group all test packages together.",
    "packageRules": [
      {
        "extends": "packages:test",
        "groupName": "test packages",
      },
    ],
  },
  "testNonMajor": {
    "description": "Group all non-major test package updates together.",
    "packageRules": [
      {
        "extends": "packages:test",
        "groupName": "test packages",
        "matchUpdateTypes": [
          "minor",
          "patch",
        ],
      },
    ],
  },
  "theme-uiMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from theme-ui monorepo together.",
        "extends": "monorepo:theme-ui",
        "groupName": "theme-ui monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "treatMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from treat monorepo together.",
        "extends": "monorepo:treat",
        "groupName": "treat monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "trpcMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from trpc monorepo together.",
        "extends": "monorepo:trpc",
        "groupName": "trpc monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "tsoaMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from tsoa monorepo together.",
        "extends": "monorepo:tsoa",
        "groupName": "tsoa monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "typefacesMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from typefaces monorepo together.",
        "extends": "monorepo:typefaces",
        "groupName": "typefaces monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "typescript-eslintMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from typescript-eslint monorepo together.",
        "extends": "monorepo:typescript-eslint",
        "groupName": "typescript-eslint monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "typography-jsMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from typography-js monorepo together.",
        "extends": "monorepo:typography-js",
        "groupName": "typography-js monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "unitTest": {
    "description": "Group all unit test packages together.",
    "packageRules": [
      {
        "extends": "packages:unitTest",
        "groupName": "unit test packages",
      },
    ],
  },
  "unitTestNonMajor": {
    "description": "Group all unit test packages together for non-major updates.",
    "packageRules": [
      {
        "extends": "packages:unitTest",
        "groupName": "unit test packages",
        "matchUpdateTypes": [
          "minor",
          "patch",
        ],
      },
    ],
  },
  "uppyMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from uppy monorepo together.",
        "extends": "monorepo:uppy",
        "groupName": "uppy monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "vitestMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from vitest monorepo together.",
        "extends": "monorepo:vitest",
        "groupName": "vitest monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "vstestMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from vstest monorepo together.",
        "extends": "monorepo:vstest",
        "groupName": "vstest monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "vue-cliMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from vue-cli monorepo together.",
        "extends": "monorepo:vue-cli",
        "groupName": "vue-cli monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "vueMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from vue monorepo together.",
        "extends": "monorepo:vue",
        "groupName": "vue monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "vuepressMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from vuepress monorepo together.",
        "extends": "monorepo:vuepress",
        "groupName": "vuepress monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "webdriverioMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from webdriverio monorepo together.",
        "extends": "monorepo:webdriverio",
        "groupName": "webdriverio monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "wordpressMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from wordpress monorepo together.",
        "extends": "monorepo:wordpress",
        "groupName": "wordpress monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "workboxMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from workbox monorepo together.",
        "extends": "monorepo:workbox",
        "groupName": "workbox monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "xtermMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from xterm monorepo together.",
        "extends": "monorepo:xterm",
        "groupName": "xterm monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "xunit-dotnetMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from xunit-dotnet monorepo together.",
        "extends": "monorepo:xunit-dotnet",
        "groupName": "xunit-dotnet monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "yarnMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from yarn monorepo together.",
        "extends": "monorepo:yarn",
        "groupName": "yarn monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
  "zxing-netMonorepo": {
    "packageRules": [
      {
        "description": "Group packages from zxing-net monorepo together.",
        "extends": "monorepo:zxing-net",
        "groupName": "zxing-net monorepo",
        "matchUpdateTypes": [
          "digest",
          "patch",
          "minor",
          "major",
        ],
      },
    ],
  },
}
`;

exports[`config/presets/internal/index contains all helpers presets 1`] = `
{
  "disableTypesNodeMajor": {
    "description": "Disable \`major\` updates to \`@types/node\`.",
    "packageRules": [
      {
        "enabled": false,
        "matchPackageNames": [
          "@types/node",
        ],
        "matchUpdateTypes": [
          "major",
        ],
      },
    ],
  },
  "followTypescriptNext": {
    "description": "Keep \`typescript\` version in sync with the \`next\` tag.",
    "extends": [
      ":followTag(typescript, next)",
    ],
  },
  "followTypescriptRc": {
    "description": "Keep \`typescript\` version in sync with the \`rc\` tag.",
    "extends": [
      ":followTag(typescript, rc)",
    ],
  },
  "pinGitHubActionDigests": {
    "description": "Pin \`github-action\` digests.",
    "packageRules": [
      {
        "matchDepTypes": [
          "action",
        ],
        "pinDigests": true,
      },
    ],
  },
}
`;

exports[`config/presets/internal/index contains all monorepo presets 1`] = `
{
  "Hangfire": {
    "description": "Hangfire monorepo",
    "matchSourceUrls": [
      "https://github.com/HangfireIO/Hangfire",
    ],
  },
  "accounts": {
    "description": "accounts monorepo",
    "matchSourceUrls": [
      "https://github.com/accounts-js/accounts",
    ],
  },
  "acot": {
    "description": "acot monorepo",
    "matchSourceUrls": [
      "https://github.com/acot-a11y/acot",
    ],
  },
  "ag-grid": {
    "description": "ag-grid monorepo",
    "matchSourceUrls": [
      "https://github.com/ag-grid/ag-grid",
    ],
  },
  "algolia-react-instantsearch": {
    "description": "algolia-react-instantsearch monorepo",
    "matchSourceUrls": [
      "https://github.com/algolia/react-instantsearch",
    ],
  },
  "algoliasearch-autocomplete": {
    "description": "algoliasearch-autocomplete monorepo",
    "matchSourceUrls": [
      "https://github.com/algolia/autocomplete",
    ],
  },
  "algoliasearch-client-javascript": {
    "description": "algoliasearch-client-javascript monorepo",
    "matchSourceUrls": [
      "https://github.com/algolia/algoliasearch-client-javascript",
    ],
  },
  "angular": {
    "description": "angular monorepo",
    "matchSourceUrls": [
      "https://github.com/angular/angular",
    ],
  },
  "angular-cli": {
    "description": "angular-cli monorepo",
    "matchSourceUrls": [
      "https://github.com/angular/angular-cli",
    ],
  },
  "angular-eslint": {
    "description": "angular-eslint monorepo",
    "matchSourceUrls": [
      "https://github.com/angular-eslint/angular-eslint",
    ],
  },
  "angularfire": {
    "description": "angularfire monorepo",
    "matchSourceUrls": [
      "https://github.com/angular/angularfire",
    ],
  },
  "angularjs": {
    "description": "angularjs monorepo",
    "matchSourceUrls": [
      "https://github.com/angular/angular.js",
    ],
  },
  "angularmaterial": {
    "description": "angularmaterial monorepo",
    "matchPackagePatterns": [
      "^@angular/material",
      "^@angular/cdk",
    ],
  },
  "apache-camel": {
    "description": "apache-camel monorepo",
    "matchPackagePatterns": [
      "^org.apache.camel:",
    ],
  },
  "apollo-server": {
    "description": "apollo-server monorepo",
    "matchSourceUrls": [
      "https://github.com/apollographql/apollo-server",
    ],
  },
  "apolloclient": {
    "description": "apolloclient monorepo",
    "matchSourceUrls": [
      "https://github.com/apollographql/apollo-client",
    ],
  },
  "applicationinsights-dotnet": {
    "description": "applicationinsights-dotnet monorepo",
    "matchSourceUrls": [
      "https://github.com/Microsoft/ApplicationInsights-dotnet",
    ],
  },
  "arcus.background-jobs": {
    "description": "arcus.background-jobs monorepo",
    "matchSourceUrls": [
      "https://github.com/arcus-azure/arcus.backgroundjobs",
    ],
  },
  "arcus.event-grid": {
    "description": "arcus.event-grid monorepo",
    "matchSourceUrls": [
      "https://github.com/arcus-azure/arcus.eventgrid",
    ],
  },
  "arcus.messaging": {
    "description": "arcus.messaging monorepo",
    "matchSourceUrls": [
      "https://github.com/arcus-azure/arcus.messaging",
    ],
  },
  "arcus.observability": {
    "description": "arcus.observability monorepo",
    "matchSourceUrls": [
      "https://github.com/arcus-azure/arcus.observability",
    ],
  },
  "arcus.security": {
    "description": "arcus.security monorepo",
    "matchSourceUrls": [
      "https://github.com/arcus-azure/arcus.security",
    ],
  },
  "arcus.webapi": {
    "description": "arcus.webapi monorepo",
    "matchSourceUrls": [
      "https://github.com/arcus-azure/arcus.webapi",
    ],
  },
  "aspnet aspnetwebstack": {
    "description": "aspnet aspnetwebstack monorepo",
    "matchSourceUrls": [
      "https://github.com/aspnet/AspNetWebStack",
    ],
  },
  "aspnet extensions": {
    "description": "aspnet extensions monorepo",
    "matchSourceUrls": [
      "https://github.com/aspnet/Extensions",
    ],
  },
  "aspnet-api-versioning": {
    "description": "aspnet-api-versioning monorepo",
    "matchSourceUrls": [
      "https://github.com/Microsoft/aspnet-api-versioning",
    ],
  },
  "automapper-dotnet": {
    "description": "automapper-dotnet monorepo",
    "matchSourceUrls": [
      "https://github.com/AutoMapper/AutoMapper",
      "https://github.com/AutoMapper/AutoMapper.Extensions.Microsoft.DependencyInjection",
    ],
  },
  "aws-cdk": {
    "description": "aws-cdk monorepo",
    "matchSourceUrls": [
      "https://github.com/aws/aws-cdk",
    ],
  },
  "aws-java-sdk": {
    "description": "aws-java-sdk monorepo",
    "matchPackagePatterns": [
      "^com.amazonaws:aws-java-sdk-",
    ],
  },
  "aws-java-sdk-v2": {
    "description": "aws-java-sdk-v2 monorepo",
    "matchPackagePatterns": [
      "^software.amazon.awssdk:",
    ],
  },
  "aws-lambda-powertools-typescript": {
    "description": "aws-lambda-powertools-typescript monorepo",
    "matchSourceUrls": [
      "https://github.com/awslabs/aws-lambda-powertools-typescript",
    ],
  },
  "aws-sdk-js-v3": {
    "description": "aws-sdk-js-v3 monorepo",
    "matchSourceUrls": [
      "https://github.com/aws/aws-sdk-js-v3",
    ],
  },
  "aws-sdk-net": {
    "description": "aws-sdk-net monorepo",
    "matchSourceUrls": [
      "https://github.com/aws/aws-sdk-net",
    ],
  },
  "awsappsync": {
    "description": "awsappsync monorepo",
    "matchSourceUrls": [
      "https://github.com/awslabs/aws-mobile-appsync-sdk-js",
    ],
  },
  "azure azure-libraries-for-net": {
    "description": "azure azure-libraries-for-net monorepo",
    "matchSourceUrls": [
      "https://github.com/Azure/azure-libraries-for-net",
    ],
  },
  "azure azure-sdk-for-net": {
    "description": "azure azure-sdk-for-net monorepo",
    "matchSourceUrls": [
      "https://github.com/Azure/azure-sdk-for-net",
    ],
  },
  "azure azure-storage-net": {
    "description": "azure azure-storage-net monorepo",
    "matchSourceUrls": [
      "https://github.com/Azure/azure-storage-net",
    ],
  },
  "babel": {
    "description": "babel monorepo",
    "matchSourceUrls": [
      "https://github.com/babel/babel",
    ],
  },
  "babel6": {
    "description": "babel6 monorepo",
    "matchPackagePatterns": [
      "^babel6$",
    ],
  },
  "baset": {
    "description": "baset monorepo",
    "matchSourceUrls": [
      "https://github.com/igmat/baset",
    ],
  },
  "brave": {
    "description": "brave monorepo",
    "matchSourceUrls": [
      "https://github.com/openzipkin/brave",
    ],
  },
  "bugsnag-js": {
    "description": "bugsnag-js monorepo",
    "matchSourceUrls": [
      "https://github.com/bugsnag/bugsnag-js",
    ],
  },
  "capacitor": {
    "description": "capacitor monorepo",
    "matchSourceUrls": [
      "https://github.com/ionic-team/capacitor",
    ],
  },
  "chakra-ui": {
    "description": "chakra-ui monorepo",
    "matchSourceUrls": [
      "https://github.com/chakra-ui/chakra-ui",
    ],
  },
  "chromely": {
    "description": "chromely monorepo",
    "matchSourceUrls": [
      "https://github.com/chromelyapps/Chromely",
    ],
  },
  "clarity": {
    "description": "clarity monorepo",
    "matchPackagePatterns": [
      "^@cds/",
      "^@clr/",
    ],
  },
  "clearscript": {
    "description": "clearscript monorepo",
    "matchSourceUrls": [
      "https://github.com/microsoft/ClearScript",
      "https://github.com/Microsoft/ClearScript",
    ],
  },
  "commitlint": {
    "description": "commitlint monorepo",
    "matchSourceUrls": [
      "https://github.com/conventional-changelog/commitlint",
    ],
  },
  "contentful-rich-text": {
    "description": "contentful-rich-text monorepo",
    "matchSourceUrls": [
      "https://github.com/contentful/rich-text",
    ],
  },
  "datadog-browser-sdk": {
    "description": "datadog-browser-sdk monorepo",
    "matchSourceUrls": [
      "https://github.com/DataDog/browser-sdk",
    ],
  },
  "date-io": {
    "description": "date-io monorepo",
    "matchSourceUrls": [
      "https://github.com/dmtrKovalenko/date-io",
    ],
  },
  "deno": {
    "description": "deno monorepo",
    "matchSourceUrls": [
      "https://github.com/denoland/deno",
    ],
  },
  "devextreme-reactive": {
    "description": "devextreme-reactive monorepo",
    "matchSourceUrls": [
      "https://github.com/DevExpress/devextreme-reactive",
    ],
  },
  "dnd-kit": {
    "description": "dnd-kit monorepo",
    "matchSourceUrls": [
      "https://github.com/clauderic/dnd-kit",
    ],
  },
  "docusaurus": {
    "description": "docusaurus monorepo",
    "matchSourceUrls": [
      "https://github.com/facebook/docusaurus",
    ],
  },
  "dotnet": {
    "description": "dotnet monorepo",
    "matchSourceUrls": [
      "https://github.com/dotnet/aspnetcore",
      "https://github.com/dotnet/efcore",
      "https://github.com/dotnet/extensions",
      "https://github.com/dotnet/runtime",
    ],
  },
  "dotnet-azure-ad-identitymodel-extensions": {
    "description": "dotnet-azure-ad-identitymodel-extensions monorepo",
    "matchSourceUrls": [
      "https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet",
    ],
  },
  "dotnet-wcf": {
    "description": "dotnet-wcf monorepo",
    "matchSourceUrls": [
      "https://github.com/dotnet/wcf",
    ],
  },
  "dropwizard": {
    "description": "dropwizard monorepo",
    "matchSourceUrls": [
      "https://github.com/dropwizard/dropwizard",
    ],
  },
  "elastic-apm-agent-rum-js": {
    "description": "elastic-apm-agent-rum-js monorepo",
    "matchSourceUrls": [
      "https://github.com/elastic/apm-agent-rum-js",
    ],
  },
  "electron-forge": {
    "description": "electron-forge monorepo",
    "matchSourceUrls": [
      "https://github.com/electron-userland/electron-forge",
    ],
  },
  "ember-decorators": {
    "description": "ember-decorators monorepo",
    "matchSourceUrls": [
      "https://github.com/ember-decorators/ember-decorators",
    ],
  },
  "embroider": {
    "description": "embroider monorepo",
    "matchPackagePatterns": [
      "^@embroider/",
    ],
  },
  "emojibase": {
    "description": "emojibase monorepo",
    "matchSourceUrls": [
      "https://github.com/milesj/emojibase",
    ],
  },
  "emotion": {
    "description": "emotion monorepo",
    "matchSourceUrls": [
      "https://github.com/emotion-js/emotion",
    ],
  },
  "eslint-config-globex": {
    "description": "eslint-config-globex monorepo",
    "matchSourceUrls": [
      "https://github.com/GlobexDesignsInc/eslint-config-globex",
    ],
  },
  "expo": {
    "description": "expo monorepo",
    "matchSourceUrls": [
      "https://github.com/expo/expo",
    ],
  },
  "feathers": {
    "description": "feathers monorepo",
    "matchSourceUrls": [
      "https://github.com/feathersjs/feathers",
    ],
  },
  "feign": {
    "description": "feign monorepo",
    "matchSourceUrls": [
      "https://github.com/OpenFeign/feign",
    ],
  },
  "fela": {
    "description": "fela monorepo",
    "matchSourceUrls": [
      "https://github.com/robinweser/fela",
    ],
  },
  "fimbullinter": {
    "description": "fimbullinter monorepo",
    "matchSourceUrls": [
      "https://github.com/fimbullinter/wotan",
    ],
  },
  "flopflip": {
    "description": "flopflip monorepo",
    "matchSourceUrls": [
      "https://github.com/tdeekens/flopflip",
    ],
  },
  "fontsource": {
    "description": "fontsource monorepo",
    "matchSourceUrls": [
      "https://github.com/fontsource/fontsource",
    ],
  },
  "formatjs": {
    "description": "formatjs monorepo",
    "matchSourceUrls": [
      "https://github.com/formatjs/formatjs",
    ],
  },
  "framework7": {
    "description": "framework7 monorepo",
    "matchSourceUrls": [
      "https://github.com/framework7io/framework7",
    ],
  },
  "fullcalendar": {
    "description": "fullcalendar monorepo",
    "matchPackagePatterns": [
      "^@fullcalendar/",
    ],
  },
  "gatsby": {
    "description": "gatsby monorepo",
    "matchSourceUrls": [
      "https://github.com/gatsbyjs/gatsby",
    ],
  },
  "grafana": {
    "description": "grafana monorepo",
    "matchSourceUrls": [
      "https://github.com/grafana/grafana",
    ],
  },
  "graphql-mesh": {
    "description": "graphql-mesh monorepo",
    "matchSourceUrls": [
      "https://github.com/Urigo/graphql-mesh",
    ],
  },
  "graphql-modules": {
    "description": "graphql-modules monorepo",
    "matchSourceUrls": [
      "https://github.com/Urigo/graphql-modules",
    ],
  },
  "graphql-tools": {
    "description": "graphql-tools monorepo",
    "matchSourceUrls": [
      "https://github.com/ardatan/graphql-tools",
    ],
  },
  "graphqlcodegenerator": {
    "description": "graphqlcodegenerator monorepo",
    "matchSourceUrls": [
      "https://github.com/dotansimha/graphql-code-generator",
      "https://github.com/dotansimha/graphql-codegen",
    ],
  },
  "groovy": {
    "description": "groovy monorepo",
    "matchSourceUrls": [
      "https://github.com/apache/groovy",
    ],
  },
  "guava": {
    "description": "guava monorepo",
    "matchSourceUrls": [
      "https://github.com/google/guava",
    ],
  },
  "hapijs": {
    "description": "hapijs monorepo",
    "matchSourceUrlPrefixes": [
      "https://github.com/hapijs/",
    ],
  },
  "hotchocolate": {
    "description": "hotchocolate monorepo",
    "matchSourceUrls": [
      "https://github.com/ChilliCream/hotchocolate",
    ],
  },
  "infrastructure-ui": {
    "description": "infrastructure-ui monorepo",
    "matchSourceUrls": [
      "https://github.com/instructure/instructure-ui",
    ],
  },
  "ionic-native": {
    "description": "ionic-native monorepo",
    "matchSourceUrls": [
      "https://github.com/ionic-team/ionic-native",
    ],
  },
  "istanbuljs": {
    "description": "istanbuljs monorepo",
    "matchSourceUrls": [
      "https://github.com/istanbuljs/istanbuljs",
    ],
  },
  "jasmine": {
    "description": "jasmine monorepo",
    "matchSourceUrls": [
      "https://github.com/jasmine/jasmine",
    ],
  },
  "javahamcrest": {
    "description": "javahamcrest monorepo",
    "matchSourceUrls": [
      "https://github.com/hamcrest/JavaHamcrest",
    ],
  },
  "javascriptengineswitcher": {
    "description": "javascriptengineswitcher monorepo",
    "matchSourceUrls": [
      "https://github.com/Taritsyn/JavaScriptEngineSwitcher",
    ],
  },
  "jersey": {
    "description": "jersey monorepo",
    "matchSourceUrls": [
      "https://github.com/eclipse-ee4j/jersey",
    ],
  },
  "jest": {
    "description": "jest monorepo",
    "matchSourceUrls": [
      "https://github.com/facebook/jest",
    ],
  },
  "jsplumb": {
    "description": "jsplumb monorepo",
    "matchSourceUrls": [
      "https://github.com/jsplumb/jsplumb",
    ],
  },
  "junit5": {
    "description": "junit5 monorepo",
    "matchSourceUrls": [
      "https://github.com/junit-team/junit5",
    ],
  },
  "kotlin": {
    "description": "kotlin monorepo",
    "matchSourceUrls": [
      "https://github.com/JetBrains/kotlin",
    ],
  },
  "lerna": {
    "description": "lerna monorepo",
    "matchSourceUrls": [
      "https://github.com/lerna/lerna",
    ],
  },
  "linguijs": {
    "description": "linguijs monorepo",
    "matchSourceUrls": [
      "https://github.com/lingui/js-lingui",
    ],
  },
  "lodash": {
    "description": "lodash monorepo",
    "matchSourceUrlPrefixes": [
      "https://github.com/lodash/",
    ],
  },
  "loopback": {
    "description": "loopback monorepo",
    "matchSourceUrls": [
      "https://github.com/strongloop/loopback-next",
      "https://github.com/loopbackio/loopback-next",
    ],
  },
  "lrnwebcomponents": {
    "description": "lrnwebcomponents monorepo",
    "matchSourceUrls": [
      "https://github.com/elmsln/lrnwebcomponents",
    ],
  },
  "mailing": {
    "description": "mailing monorepo",
    "matchSourceUrls": [
      "https://github.com/sofn-xyz/mailing",
    ],
  },
  "mapstruct": {
    "description": "mapstruct monorepo",
    "matchSourceUrls": [
      "https://github.com/mapstruct/mapstruct",
    ],
  },
  "masstransit": {
    "description": "masstransit monorepo",
    "matchSourceUrls": [
      "https://github.com/MassTransit/MassTransit",
    ],
  },
  "material-components-web": {
    "description": "material-components-web monorepo",
    "matchSourceUrls": [
      "https://github.com/material-components/material-components-web",
    ],
  },
  "material-ui": {
    "description": "material-ui monorepo",
    "matchSourceUrls": [
      "https://github.com/mui-org/material-ui",
      "https://github.com/mui/material-ui",
    ],
  },
  "mdc-react": {
    "description": "mdc-react monorepo",
    "matchSourceUrls": [
      "material-components/material-components-web-react",
    ],
  },
  "mdx": {
    "description": "mdx monorepo",
    "matchSourceUrls": [
      "https://github.com/mdx-js/mdx",
    ],
  },
  "middy-js": {
    "description": "middy-js monorepo",
    "matchSourceUrls": [
      "https://github.com/middyjs/middy",
    ],
  },
  "mikro-orm": {
    "description": "mikro-orm monorepo",
    "matchSourceUrls": [
      "https://github.com/mikro-orm/mikro-orm",
    ],
  },
  "mockito": {
    "description": "mockito monorepo",
    "matchSourceUrls": [
      "https://github.com/mockito/mockito",
    ],
  },
  "mstest": {
    "description": "mstest monorepo",
    "matchSourceUrls": [
      "https://github.com/microsoft/testfx",
    ],
  },
  "nest": {
    "description": "nest monorepo",
    "matchSourceUrls": [
      "https://github.com/nestjs/nest",
      "https://github.com/nestjs/passport",
      "https://github.com/nestjs/schematics",
      "https://github.com/nestjs/terminus",
    ],
  },
  "netty": {
    "description": "netty monorepo",
    "matchSourceUrls": [
      "https://github.com/netty/netty",
    ],
  },
  "neutrino": {
    "description": "neutrino monorepo",
    "matchSourceUrls": [
      "https://github.com/neutrinojs/neutrino",
      "https://github.com/mozilla-neutrino/neutrino-dev",
    ],
  },
  "nexpect": {
    "description": "nexpect monorepo",
    "matchSourceUrls": [
      "https://github.com/fluffynuts/NExpect",
    ],
  },
  "nextjs": {
    "description": "nextjs monorepo",
    "matchSourceUrls": [
      "https://github.com/zeit/next.js",
      "https://github.com/vercel/next.js",
    ],
  },
  "ngrx": {
    "description": "ngrx monorepo",
    "matchSourceUrlPrefixes": [
      "https://github.com/ngrx/",
    ],
  },
  "ngx-formly": {
    "description": "ngx-formly monorepo",
    "matchSourceUrls": [
      "https://github.com/ngx-formly/ngx-formly",
    ],
  },
  "ngxs-store": {
    "description": "ngxs-store monorepo",
    "matchSourceUrls": [
      "https://github.com/ngxs/store",
    ],
  },
  "nivo": {
    "description": "nivo monorepo",
    "matchSourceUrls": [
      "https://github.com/plouc/nivo",
    ],
  },
  "nrwl": {
    "description": "nrwl monorepo",
    "matchSourceUrlPrefixes": [
      "https://github.com/nrwl/",
    ],
  },
  "nswag": {
    "description": "nswag monorepo",
    "matchSourceUrls": [
      "https://github.com/RicoSuter/NSwag",
    ],
  },
  "nuxtjs": {
    "description": "nuxtjs monorepo",
    "matchSourceUrls": [
      "https://github.com/nuxt/nuxt.js",
    ],
  },
  "opentelemetry-dotnet": {
    "description": "opentelemetry-dotnet monorepo",
    "matchSourceUrls": [
      "https://github.com/open-telemetry/opentelemetry-dotnet",
    ],
  },
  "opentelemetry-go": {
    "description": "opentelemetry-go monorepo",
    "matchSourceUrls": [
      "https://github.com/open-telemetry/opentelemetry-go",
    ],
  },
  "opentelemetry-js": {
    "description": "opentelemetry-js monorepo",
    "matchSourceUrls": [
      "https://github.com/open-telemetry/opentelemetry-js",
    ],
  },
  "orleans": {
    "description": "orleans monorepo",
    "matchSourceUrls": [
      "https://github.com/dotnet/orleans",
    ],
  },
  "parcel": {
    "description": "parcel monorepo",
    "matchSourceUrls": [
      "https://github.com/parcel-bundler/parcel",
    ],
  },
  "percy-cli": {
    "description": "percy-cli monorepo",
    "matchSourceUrls": [
      "https://github.com/percy/cli",
    ],
  },
  "picassojs": {
    "description": "picassojs monorepo",
    "matchSourceUrls": [
      "https://github.com/qlik-oss/picasso.js",
    ],
  },
  "pixijs": {
    "description": "pixijs monorepo",
    "matchSourceUrls": [
      "https://github.com/pixijs/pixi.js",
    ],
  },
  "playwright": {
    "description": "playwright monorepo",
    "matchSourceUrls": [
      "https://github.com/Microsoft/playwright",
    ],
  },
  "pnpjs": {
    "description": "pnpjs monorepo",
    "matchSourceUrls": [
      "https://github.com/pnp/pnpjs",
    ],
  },
  "pollyjs": {
    "description": "pollyjs monorepo",
    "matchSourceUrls": [
      "https://github.com/Netflix/pollyjs",
    ],
  },
  "pouchdb": {
    "description": "pouchdb monorepo",
    "matchSourceUrls": [
      "https://github.com/pouchdb/pouchdb",
    ],
  },
  "prisma": {
    "description": "prisma monorepo",
    "matchSourceUrls": [
      "https://github.com/prisma/prisma",
    ],
  },
  "quartznet": {
    "description": "quartznet monorepo",
    "matchSourceUrls": [
      "https://github.com/quartznet/quartznet",
    ],
  },
  "reach-ui": {
    "description": "reach-ui monorepo",
    "matchSourceUrls": [
      "https://github.com/reach/reach-ui",
    ],
  },
  "react": {
    "description": "react monorepo",
    "matchSourceUrls": [
      "https://github.com/facebook/react",
    ],
  },
  "react-admin": {
    "description": "react-admin monorepo",
    "matchSourceUrls": [
      "https://github.com/marmelab/react-admin",
    ],
  },
  "react-apollo": {
    "description": "react-apollo monorepo",
    "matchSourceUrls": [
      "https://github.com/apollographql/react-apollo",
    ],
  },
  "react-dnd": {
    "description": "react-dnd monorepo",
    "matchSourceUrls": [
      "https://github.com/react-dnd/react-dnd",
    ],
  },
  "react-navigation": {
    "description": "react-navigation monorepo",
    "matchSourceUrls": [
      "https://github.com/react-navigation/react-navigation",
    ],
  },
  "react-page": {
    "description": "react-page monorepo",
    "matchSourceUrls": [
      "https://github.com/react-page/react-page",
    ],
  },
  "react-router": {
    "description": "react-router monorepo",
    "matchSourceUrls": [
      "https://github.com/ReactTraining/react-router",
      "https://github.com/remix-run/react-router",
    ],
  },
  "reactivestack-cookies": {
    "description": "reactivestack-cookies monorepo",
    "matchSourceUrls": [
      "https://github.com/reactivestack/cookies",
    ],
  },
  "reakit": {
    "description": "reakit monorepo",
    "matchSourceUrls": [
      "https://github.com/reakit/reakit",
    ],
  },
  "redwood": {
    "description": "redwood monorepo",
    "matchSourceUrls": [
      "https://github.com/redwoodjs/redwood",
    ],
  },
  "reg-suit": {
    "description": "reg-suit monorepo",
    "matchSourceUrls": [
      "https://github.com/reg-viz/reg-suit",
    ],
  },
  "remark": {
    "description": "remark monorepo",
    "matchSourceUrls": [
      "https://github.com/remarkjs/remark",
    ],
  },
  "remix": {
    "description": "remix monorepo",
    "matchSourceUrls": [
      "https://github.com/remix-run/remix",
    ],
  },
  "router5": {
    "description": "router5 monorepo",
    "matchSourceUrls": [
      "https://github.com/router5/router5",
    ],
  },
  "rust-futures": {
    "description": "rust-futures monorepo",
    "matchSourceUrls": [
      "https://github.com/rust-lang/futures-rs",
    ],
  },
  "rust-wasm-bindgen": {
    "description": "rust-wasm-bindgen monorepo",
    "matchSourceUrls": [
      "https://github.com/rustwasm/wasm-bindgen",
    ],
  },
  "sanity": {
    "description": "sanity monorepo",
    "matchSourceUrls": [
      "https://github.com/sanity-io/sanity",
    ],
  },
  "semantic-release": {
    "description": "semantic-release monorepo",
    "matchSourceUrlPrefixes": [
      "https://github.com/semantic-release/",
    ],
  },
  "sendgrid-nodejs": {
    "description": "sendgrid-nodejs monorepo",
    "matchSourceUrls": [
      "https://github.com/sendgrid/sendgrid-nodejs",
    ],
  },
  "sentry-dotnet": {
    "description": "sentry-dotnet monorepo",
    "matchSourceUrls": [
      "https://github.com/getsentry/sentry-dotnet",
    ],
  },
  "sentry-javascript": {
    "description": "sentry-javascript monorepo",
    "matchSourceUrls": [
      "https://github.com/getsentry/sentry-javascript",
    ],
  },
  "sentry-ruby": {
    "description": "sentry-ruby monorepo",
    "matchSourceUrls": [
      "https://github.com/getsentry/sentry-ruby",
    ],
  },
  "shedlock": {
    "description": "shedlock monorepo",
    "matchSourceUrls": [
      "https://github.com/lukas-krecan/ShedLock",
    ],
  },
  "shopify-app-bridge": {
    "description": "shopify-app-bridge monorepo",
    "matchSourceUrls": [
      "https://github.com/Shopify/app-bridge",
    ],
  },
  "sitecore-jss": {
    "description": "sitecore-jss monorepo",
    "matchSourceUrls": [
      "https://github.com/Sitecore/jss",
    ],
  },
  "skiasharp": {
    "description": "skiasharp monorepo",
    "matchSourceUrls": [
      "https://github.com/mono/SkiaSharp",
    ],
  },
  "spfx": {
    "description": "spfx monorepo",
    "matchPackagePatterns": [
      "^@microsoft\\/sp-",
      "^@microsoft\\/eslint-.+-spfx$",
    ],
  },
  "springfox": {
    "description": "springfox monorepo",
    "matchSourceUrls": [
      "https://github.com/springfox/springfox",
    ],
  },
  "steeltoe": {
    "description": "steeltoe monorepo",
    "matchSourceUrls": [
      "https://github.com/SteeltoeOSS/steeltoe",
    ],
  },
  "storybook": {
    "description": "storybook monorepo",
    "matchSourceUrls": [
      "https://github.com/storybookjs/storybook",
    ],
  },
  "strapi": {
    "description": "strapi monorepo",
    "matchSourceUrls": [
      "https://github.com/strapi/strapi",
    ],
  },
  "stryker-js": {
    "description": "stryker-js monorepo",
    "matchSourceUrls": [
      "https://github.com/stryker-mutator/stryker-js",
    ],
  },
  "surveyjs": {
    "description": "surveyjs monorepo",
    "matchSourceUrls": [
      "https://github.com/surveyjs/surveyjs",
    ],
  },
  "swashbuckle-aspnetcore": {
    "description": "swashbuckle-aspnetcore monorepo",
    "matchSourceUrls": [
      "https://github.com/domaindrivendev/Swashbuckle.AspNetCore",
    ],
  },
  "system.io.abstractions": {
    "description": "system.io.abstractions monorepo",
    "matchSourceUrls": [
      "https://github.com/System-IO-Abstractions/System.IO.Abstractions/",
    ],
  },
  "tanstack-query": {
    "description": "tanstack-query monorepo",
    "matchSourceUrls": [
      "https://github.com/TanStack/query",
    ],
  },
  "tauri": {
    "description": "tauri monorepo",
    "matchSourceUrls": [
      "https://github.com/tauri-apps/tauri",
    ],
  },
  "telus-tds": {
    "description": "telus-tds monorepo",
    "matchSourceUrls": [
      "https://github.com/telusdigital/tds",
    ],
  },
  "telus-tds-core": {
    "description": "telus-tds-core monorepo",
    "matchSourceUrls": [
      "https://github.com/telus/tds-core",
    ],
  },
  "temporalio-ts": {
    "description": "temporalio-ts monorepo",
    "matchSourceUrls": [
      "https://github.com/temporalio/sdk-typescript",
    ],
  },
  "theme-ui": {
    "description": "theme-ui monorepo",
    "matchSourceUrls": [
      "https://github.com/system-ui/theme-ui",
    ],
  },
  "treat": {
    "description": "treat monorepo",
    "matchSourceUrls": [
      "https://github.com/seek-oss/treat",
    ],
  },
  "trpc": {
    "description": "trpc monorepo",
    "matchSourceUrls": [
      "https://github.com/trpc/trpc",
    ],
  },
  "tsoa": {
    "description": "tsoa monorepo",
    "matchSourceUrls": [
      "https://github.com/lukeautry/tsoa",
    ],
  },
  "typefaces": {
    "description": "typefaces monorepo",
    "matchSourceUrls": [
      "https://github.com/KyleAMathews/typefaces",
    ],
  },
  "typescript-eslint": {
    "description": "typescript-eslint monorepo",
    "matchSourceUrls": [
      "https://github.com/typescript-eslint/typescript-eslint",
    ],
  },
  "typography-js": {
    "description": "typography-js monorepo",
    "matchSourceUrls": [
      "https://github.com/KyleAMathews/typography.js",
    ],
  },
  "uppy": {
    "description": "uppy monorepo",
    "matchSourceUrls": [
      "https://github.com/transloadit/uppy",
    ],
  },
  "vitest": {
    "description": "vitest monorepo",
    "matchSourceUrls": [
      "https://github.com/vitest-dev/vitest",
    ],
  },
  "vstest": {
    "description": "vstest monorepo",
    "matchSourceUrls": [
      "https://github.com/microsoft/vstest",
    ],
  },
  "vue": {
    "description": "vue monorepo",
    "matchSourceUrls": [
      "https://github.com/vuejs/vue",
      "https://github.com/vuejs/core",
    ],
  },
  "vue-cli": {
    "description": "vue-cli monorepo",
    "matchSourceUrls": [
      "https://github.com/vuejs/vue-cli",
    ],
  },
  "vuepress": {
    "description": "vuepress monorepo",
    "matchSourceUrls": [
      "https://github.com/vuejs/vuepress",
    ],
  },
  "webdriverio": {
    "description": "webdriverio monorepo",
    "matchSourceUrls": [
      "https://github.com/webdriverio/webdriverio",
    ],
  },
  "wordpress": {
    "description": "wordpress monorepo",
    "matchPackagePatterns": [
      "^@wordpress/",
    ],
  },
  "workbox": {
    "description": "workbox monorepo",
    "matchSourceUrls": [
      "https://github.com/googlechrome/workbox",
    ],
  },
  "xterm": {
    "description": "xterm monorepo",
    "matchSourceUrls": [
      "https://github.com/xtermjs/xterm.js",
    ],
  },
  "xunit-dotnet": {
    "description": "xunit-dotnet monorepo",
    "matchSourceUrls": [
      "https://github.com/xunit/xunit",
    ],
  },
  "yarn": {
    "description": "yarn monorepo",
    "matchSourceUrls": [
      "https://github.com/yarnpkg/berry",
    ],
  },
  "zxing-net": {
    "description": "zxing-net monorepo",
    "matchSourceUrls": [
      "https://github.com/micjahn/ZXing.Net",
    ],
  },
}
`;

exports[`config/presets/internal/index contains all npm presets 1`] = `
{
  "unpublishSafe": {
    "description": "Wait until the npm package is three days old before raising the update, this prevents npm unpublishing a package you already upgraded to.",
    "npm": {
      "stabilityDays": 3,
    },
  },
}
`;

exports[`config/presets/internal/index contains all packages presets 1`] = `
{
  "angularJs": {
    "description": "All AngularJS packages.",
    "matchPackageNames": [
      "angular",
      "angular-animate",
      "angular-scroll",
      "angular-sanitize",
    ],
  },
  "apollographql": {
    "description": "All packages published by Apollo GraphQL.",
    "matchSourceUrlPrefixes": [
      "https://github.com/apollographql/",
    ],
  },
  "emberTemplateLint": {
    "description": "All ember-template-lint packages.",
    "matchPackagePrefixes": [
      "ember-template-lint",
    ],
  },
  "eslint": {
    "description": "All ESLint packages.",
    "matchPackageNames": [
      "@types/eslint",
      "babel-eslint",
    ],
    "matchPackagePrefixes": [
      "@typescript-eslint/",
      "eslint",
    ],
  },
  "gatsby": {
    "description": "All packages published by Gatsby.",
    "extends": [
      "monorepo:gatsby",
    ],
  },
  "googleapis": {
    "description": "All \`googleapis\` packages.",
    "matchDatasources": [
      "npm",
    ],
    "matchPackagePrefixes": [
      "@google-cloud/",
    ],
  },
  "jsTest": {
    "description": "JavaScript test packages.",
    "extends": [
      "packages:jsUnitTest",
    ],
  },
  "jsUnitTest": {
    "description": "Unit test packages for JavaScript.",
    "matchPackageNames": [
      "@types/chai",
      "@types/ember-mocha",
      "@types/ember-qunit",
      "@types/enzyme",
      "@types/istanbul",
      "@types/jest",
      "@types/mocha",
      "@types/mock-fs",
      "@types/proxyquire",
      "@types/sinon",
      "@types/supertest",
      "coveralls",
      "ember-exam",
      "ember-mocha",
      "ember-qunit",
      "enzyme",
      "istanbul",
      "mock-fs",
      "nock",
      "nyc",
      "proxyquire",
      "supertest",
      "ts-auto-mock",
      "ts-jest",
    ],
    "matchPackagePrefixes": [
      "@testing-library",
      "chai",
      "jest",
      "mocha",
      "qunit",
      "should",
      "sinon",
    ],
  },
  "linters": {
    "description": "All lint-related packages.",
    "extends": [
      "packages:emberTemplateLint",
      "packages:eslint",
      "packages:stylelint",
      "packages:tslint",
    ],
    "matchPackageNames": [
      "remark-lint",
    ],
  },
  "mapbox": {
    "description": "All Mapbox-related packages.",
    "matchPackagePrefixes": [
      "leaflet",
      "mapbox",
    ],
  },
  "postcss": {
    "description": "All PostCSS packages.",
    "matchPackageNames": [
      "postcss",
    ],
    "matchPackagePrefixes": [
      "postcss-",
    ],
  },
  "react": {
    "description": "All React packages.",
    "matchPackageNames": [
      "@types/react",
    ],
    "matchPackagePrefixes": [
      "react",
    ],
  },
  "stylelint": {
    "description": "All Stylelint packages.",
    "matchPackagePrefixes": [
      "stylelint",
    ],
  },
  "test": {
    "description": "Test packages.",
    "extends": [
      "packages:unitTest",
    ],
  },
  "tslint": {
    "description": "All TSLint packages.",
    "matchPackageNames": [
      "codelyzer",
    ],
    "matchPackagePatterns": [
      "\\btslint\\b",
    ],
  },
  "unitTest": {
    "description": "All unit test packages.",
    "extends": [
      "packages:jsUnitTest",
    ],
  },
}
`;

exports[`config/presets/internal/index contains all preview presets 1`] = `
{
  "buildkite": {
    "buildkite": {
      "enabled": true,
    },
    "description": "Enable Buildkite functionality.",
  },
  "dockerCompose": {
    "description": "Enable Docker Compose image updating.",
    "docker-compose": {
      "enabled": true,
    },
  },
  "dockerVersions": {
    "description": "Upgrade Docker tags to newer versions.",
    "docker": {
      "major": {
        "enabled": true,
      },
      "minor": {
        "enabled": true,
      },
    },
  },
}
`;

exports[`config/presets/internal/index contains all regex-managers presets 1`] = `
{
  "dockerfileVersions": {
    "description": "Update \`_VERSION\` variables in Dockerfiles.",
    "regexManagers": [
      {
        "fileMatch": [
          "(^|/|\\.)Dockerfile$",
          "(^|/)Dockerfile[^/]*$",
        ],
        "matchStrings": [
          "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[a-z-0-9]+?))?\\s(?:ENV|ARG) .+?_VERSION[ =]"?(?<currentValue>.+?)"?\\s",
        ],
      },
    ],
  },
}
`;

exports[`config/presets/internal/index contains all schedule presets 1`] = `
{
  "daily": {
    "description": "Schedule daily.",
    "schedule": [
      "before 2am",
    ],
  },
  "earlyMondays": {
    "description": "Weekly schedule on early Monday mornings.",
    "schedule": [
      "before 3am on Monday",
    ],
  },
  "monthly": {
    "description": "Schedule monthly.",
    "schedule": [
      "before 3am on the first day of the month",
    ],
  },
  "nonOfficeHours": {
    "description": "Schedule for typical non-office hours (night time and weekends).",
    "schedule": [
      "after 10pm every weekday",
      "before 5am every weekday",
      "every weekend",
    ],
  },
  "quarterly": {
    "description": "Schedule quarterly.",
    "schedule": [
      "every 3 months on the first day of the month",
    ],
  },
  "weekdays": {
    "description": "Schedule for weekdays.",
    "schedule": [
      "every weekday",
    ],
  },
  "weekends": {
    "description": "Schedule for weekends.",
    "schedule": [
      "every weekend",
    ],
  },
  "weekly": {
    "description": "Schedule weekly.",
    "extends": [
      "schedule:earlyMondays",
    ],
  },
  "yearly": {
    "description": "Schedule once a year (not recommended).",
    "schedule": [
      "every 12 months on the first day of the month",
    ],
  },
}
`;

exports[`config/presets/internal/index contains all workarounds presets 1`] = `
{
  "all": {
    "description": [
      "A collection of workarounds for known problems with packages.",
    ],
    "extends": [
      "workarounds:mavenCommonsAncientVersion",
      "workarounds:ignoreSpringCloudNumeric",
      "workarounds:ignoreWeb3jCoreWithOldReleaseTimestamp",
      "workarounds:ignoreHttp4sDigestMilestones",
      "workarounds:typesNodeVersioning",
      "workarounds:reduceRepologyServerLoad",
      "workarounds:doNotUpgradeFromAlpineStableToEdge",
      "workarounds:supportRedHatImageVersion",
      "workarounds:javaLTSVersions",
      "workarounds:disableMavenParentRoot",
    ],
    "ignoreDeps": [],
  },
  "disableMavenParentRoot": {
    "description": "Avoid version fetching for Maven packages detected as project root.",
    "packageRules": [
      {
        "enabled": false,
        "matchDepTypes": [
          "parent-root",
        ],
        "matchManagers": [
          "maven",
        ],
      },
    ],
  },
  "doNotUpgradeFromAlpineStableToEdge": {
    "description": "Do not upgrade from Alpine stable to edge.",
    "packageRules": [
      {
        "allowedVersions": "<20000000",
        "matchCurrentVersion": "<20000000",
        "matchDatasources": [
          "docker",
        ],
        "matchPackageNames": [
          "alpine",
        ],
      },
    ],
  },
  "ignoreHttp4sDigestMilestones": {
    "description": "Ignore \`http4s\` digest-based \`1.x\` milestones.",
    "packageRules": [
      {
        "allowedVersions": "!/^1\\.0-\\d+-[a-fA-F0-9]{7}$/",
        "matchManagers": [
          "sbt",
        ],
        "matchPackagePrefixes": [
          "org.http4s:",
        ],
      },
    ],
  },
  "ignoreSpringCloudNumeric": {
    "description": "Ignore spring cloud \`1.x\` releases.",
    "packageRules": [
      {
        "allowedVersions": "/^[A-Z]/",
        "matchDatasources": [
          "maven",
        ],
        "matchPackageNames": [
          "org.springframework.cloud:spring-cloud-starter-parent",
        ],
      },
    ],
  },
  "ignoreWeb3jCoreWithOldReleaseTimestamp": {
    "description": "Ignore \`web3j\` \`5.0.0\` release.",
    "packageRules": [
      {
        "allowedVersions": "!/^5\\.0\\.0/",
        "matchDatasources": [
          "maven",
        ],
        "matchPackageNames": [
          "org.web3j:core",
        ],
      },
    ],
  },
  "javaLTSVersions": {
    "description": "Limit Java runtime versions to LTS releases",
    "packageRules": [
      {
        "allowedVersions": "/^(?:8|11|17|21|25|29)(?:\\.|$)/",
        "description": "Limit Java runtime versions to LTS releases. To receive all major releases add \`workarounds:javaLTSVersions\` to the \`ignorePresets\` array.",
        "matchDatasources": [
          "docker",
          "adoptium-java",
        ],
        "matchPackageNames": [
          "eclipse-temurin",
          "amazoncorretto",
          "adoptopenjdk",
          "openjdk",
          "java",
          "java-jre",
          "sapmachine",
        ],
        "versioning": "regex:^(?<major>\\d+)?(\\.(?<minor>\\d+))?(\\.(?<patch>\\d+))?([\\._+](?<build>\\d+))?(-(?<compatibility>.*))?$",
      },
    ],
  },
  "mavenCommonsAncientVersion": {
    "description": "Fix some problems with very old Maven commons versions.",
    "packageRules": [
      {
        "allowedVersions": "!/^200\\d{5}(\\.\\d+)?/",
        "matchDatasources": [
          "maven",
          "sbt-package",
        ],
        "matchPackagePrefixes": [
          "commons-",
        ],
      },
    ],
  },
  "reduceRepologyServerLoad": {
    "description": "Limit concurrent requests to reduce load on Repology servers until we can fix this properly, see issue \`#10133\`.",
    "hostRules": [
      {
        "concurrentRequestLimit": 1,
        "matchHost": "repology.org",
      },
    ],
  },
  "supportRedHatImageVersion": {
    "description": "Use specific versioning for Red Hat-maintained container images",
    "packageRules": [
      {
        "matchDatasources": [
          "docker",
        ],
        "matchPackageNames": [
          "registry.access.redhat.com/rhel",
          "registry.access.redhat.com/rhel-atomic",
          "registry.access.redhat.com/rhel-init",
          "registry.access.redhat.com/rhel-minimal",
        ],
        "matchPackagePrefixes": [
          "registry.access.redhat.com/rhceph/",
          "registry.access.redhat.com/rhgs3/",
          "registry.access.redhat.com/rhel7",
          "registry.access.redhat.com/rhel8/",
          "registry.access.redhat.com/rhel9/",
          "registry.access.redhat.com/rhscl/",
          "registry.access.redhat.com/ubi7",
          "registry.access.redhat.com/ubi8",
          "registry.access.redhat.com/ubi9",
          "redhat/",
        ],
        "versioning": "redhat",
      },
    ],
  },
  "typesNodeVersioning": {
    "description": "Use node versioning for \`@types/node\`.",
    "packageRules": [
      {
        "matchManagers": [
          "npm",
        ],
        "matchPackageNames": [
          "@types/node",
        ],
        "versioning": "node",
      },
    ],
  },
}
`;
