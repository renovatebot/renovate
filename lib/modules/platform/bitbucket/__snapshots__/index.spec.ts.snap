// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`modules/platform/bitbucket/index addAssignees() does not throw 1`] = `undefined`;

exports[`modules/platform/bitbucket/index ensureComment() does not throw 1`] = `false`;

exports[`modules/platform/bitbucket/index ensureCommentRemoval() does not throw 1`] = `undefined`;

exports[`modules/platform/bitbucket/index findIssue() does not throw 1`] = `
{
  "body": "content",
  "number": 25,
}
`;

exports[`modules/platform/bitbucket/index findPr() finds pr 1`] = `
{
  "bodyStruct": {
    "hash": "761b7ad8ad439b2855fcbb611331c646ef0870b0631247bba3f3025cb6df5a53",
  },
  "createdAt": "2018-07-02T07:02:25.275030+00:00",
  "displayNumber": "Pull Request #5",
  "number": 5,
  "sourceBranch": "branch",
  "state": "open",
  "targetBranch": "master",
  "title": "title",
}
`;

exports[`modules/platform/bitbucket/index getBranchPr() bitbucket finds PR for branch 1`] = `
{
  "bodyStruct": {
    "hash": "761b7ad8ad439b2855fcbb611331c646ef0870b0631247bba3f3025cb6df5a53",
  },
  "createdAt": "2018-07-02T07:02:25.275030+00:00",
  "displayNumber": "Pull Request #5",
  "hasReviewers": false,
  "number": 5,
  "sourceBranch": "branch",
  "state": "open",
  "targetBranch": "master",
  "title": "title",
}
`;

exports[`modules/platform/bitbucket/index getIssueList() get issues 1`] = `
[
  {
    "content": {
      "raw": "content",
    },
    "id": 25,
    "title": "title",
  },
  {
    "content": {
      "raw": "content",
    },
    "id": 26,
    "title": "title",
  },
]
`;

exports[`modules/platform/bitbucket/index getPr() canRebase 1`] = `
{
  "bodyStruct": {
    "hash": "761b7ad8ad439b2855fcbb611331c646ef0870b0631247bba3f3025cb6df5a53",
  },
  "createdAt": "2018-07-02T07:02:25.275030+00:00",
  "displayNumber": "Pull Request #3",
  "hasReviewers": false,
  "number": 3,
  "sourceBranch": "branch",
  "state": "open",
  "targetBranch": "master",
  "title": "title",
}
`;

exports[`modules/platform/bitbucket/index getPr() canRebase 2`] = `
{
  "bodyStruct": {
    "hash": "761b7ad8ad439b2855fcbb611331c646ef0870b0631247bba3f3025cb6df5a53",
  },
  "createdAt": "2018-07-02T07:02:25.275030+00:00",
  "displayNumber": "Pull Request #5",
  "hasReviewers": false,
  "number": 5,
  "sourceBranch": "branch",
  "state": "open",
  "targetBranch": "master",
  "title": "title",
}
`;

exports[`modules/platform/bitbucket/index getPr() canRebase 3`] = `
{
  "bodyStruct": {
    "hash": "761b7ad8ad439b2855fcbb611331c646ef0870b0631247bba3f3025cb6df5a53",
  },
  "createdAt": "2018-07-02T07:02:25.275030+00:00",
  "displayNumber": "Pull Request #5",
  "hasReviewers": false,
  "number": 5,
  "sourceBranch": "branch",
  "state": "open",
  "targetBranch": "master",
  "title": "title",
}
`;

exports[`modules/platform/bitbucket/index getPr() exists 1`] = `
{
  "bodyStruct": {
    "hash": "761b7ad8ad439b2855fcbb611331c646ef0870b0631247bba3f3025cb6df5a53",
  },
  "createdAt": "2018-07-02T07:02:25.275030+00:00",
  "displayNumber": "Pull Request #5",
  "hasReviewers": false,
  "number": 5,
  "sourceBranch": "branch",
  "state": "open",
  "targetBranch": "master",
  "title": "title",
}
`;

exports[`modules/platform/bitbucket/index getPrList() filters PR list by author 1`] = `
[
  {
    "bodyStruct": {
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
    },
    "createdAt": undefined,
    "displayNumber": "Pull Request #1",
    "number": 1,
    "sourceBranch": "branch-a",
    "state": "open",
    "targetBranch": "branch-b",
    "title": undefined,
  },
]
`;

exports[`modules/platform/bitbucket/index initRepo() works with username and password 1`] = `
{
  "defaultBranch": "master",
  "isFork": false,
  "repoFingerprint": "56653db0e9341ef4957c92bb78ee668b0a3f03c75b77db94d520230557385fca344cc1f593191e3594183b5b050909d29996c040045e8852f21774617b240642",
}
`;

exports[`modules/platform/bitbucket/index massageMarkdown() returns diff files 1`] = `"**foo**bartext"`;

exports[`modules/platform/bitbucket/index updatePr() rethrows exception when PR update error due to unknown reviewers error 1`] = `"Response code 400 (Bad Request)"`;

exports[`modules/platform/bitbucket/index updatePr() throws an error on failure to get current list of reviewers 1`] = `"Response code 500 (Internal Server Error)"`;
