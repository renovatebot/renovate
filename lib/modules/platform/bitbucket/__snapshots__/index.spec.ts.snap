// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`modules/platform/bitbucket/index addAssignees() does not throw 1`] = `undefined`;

exports[`modules/platform/bitbucket/index ensureComment() does not throw 1`] = `false`;

exports[`modules/platform/bitbucket/index ensureCommentRemoval() does not throw 1`] = `undefined`;

exports[`modules/platform/bitbucket/index findIssue() does not throw 1`] = `
Object {
  "body": "content",
  "number": 25,
}
`;

exports[`modules/platform/bitbucket/index findPr() finds pr 1`] = `
Object {
  "body": "summary",
  "createdAt": "2018-07-02T07:02:25.275030+00:00",
  "displayNumber": "Pull Request #5",
  "number": 5,
  "sourceBranch": "branch",
  "state": "open",
  "targetBranch": "master",
  "title": "title",
}
`;

exports[`modules/platform/bitbucket/index getBranchPr() bitbucket finds PR for branch 1`] = `
Object {
  "body": "summary",
  "createdAt": "2018-07-02T07:02:25.275030+00:00",
  "displayNumber": "Pull Request #5",
  "hasReviewers": false,
  "number": 5,
  "sourceBranch": "branch",
  "state": "open",
  "targetBranch": "master",
  "title": "title",
}
`;

exports[`modules/platform/bitbucket/index getIssueList() get issues 1`] = `
Array [
  Object {
    "content": Object {
      "raw": "content",
    },
    "id": 25,
    "title": "title",
  },
  Object {
    "content": Object {
      "raw": "content",
    },
    "id": 26,
    "title": "title",
  },
]
`;

exports[`modules/platform/bitbucket/index getPr() canRebase 1`] = `
Object {
  "body": "summary",
  "createdAt": "2018-07-02T07:02:25.275030+00:00",
  "displayNumber": "Pull Request #3",
  "hasReviewers": false,
  "number": 3,
  "sourceBranch": "branch",
  "state": "open",
  "targetBranch": "master",
  "title": "title",
}
`;

exports[`modules/platform/bitbucket/index getPr() canRebase 2`] = `
Object {
  "body": "summary",
  "createdAt": "2018-07-02T07:02:25.275030+00:00",
  "displayNumber": "Pull Request #5",
  "hasReviewers": false,
  "number": 5,
  "sourceBranch": "branch",
  "state": "open",
  "targetBranch": "master",
  "title": "title",
}
`;

exports[`modules/platform/bitbucket/index getPr() canRebase 3`] = `
Object {
  "body": "summary",
  "createdAt": "2018-07-02T07:02:25.275030+00:00",
  "displayNumber": "Pull Request #5",
  "hasReviewers": false,
  "number": 5,
  "sourceBranch": "branch",
  "state": "open",
  "targetBranch": "master",
  "title": "title",
}
`;

exports[`modules/platform/bitbucket/index getPr() exists 1`] = `
Object {
  "body": "summary",
  "createdAt": "2018-07-02T07:02:25.275030+00:00",
  "displayNumber": "Pull Request #5",
  "hasReviewers": false,
  "number": 5,
  "sourceBranch": "branch",
  "state": "open",
  "targetBranch": "master",
  "title": "title",
}
`;

exports[`modules/platform/bitbucket/index getPrList() filters PR list by author 1`] = `
Array [
  Object {
    "body": undefined,
    "createdAt": undefined,
    "displayNumber": "Pull Request #1",
    "number": 1,
    "sourceBranch": "branch-a",
    "state": "open",
    "targetBranch": "branch-b",
    "title": undefined,
  },
]
`;

exports[`modules/platform/bitbucket/index initPlatform() should init 1`] = `
Object {
  "endpoint": "https://api.bitbucket.org/",
}
`;

exports[`modules/platform/bitbucket/index initRepo() works 1`] = `
Object {
  "defaultBranch": "master",
  "isFork": false,
}
`;

exports[`modules/platform/bitbucket/index massageMarkdown() returns diff files 1`] = `"**foo**bartext"`;

exports[`modules/platform/bitbucket/index updatePr() rethrows exception when PR update error due to unknown reviewers error 1`] = `"Response code 400 (Bad Request)"`;

exports[`modules/platform/bitbucket/index updatePr() throws an error on failure to get current list of reviewers 1`] = `"Response code 500 (Internal Server Error)"`;
