{"_id":"com.unity.xr.openxr","name":"com.unity.xr.openxr","description":"OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.","provider":"upm","versions":{"1.14.2":{"_upm":{"changelog":"### Added\n\n* Added a validation rule about the minimum Android API level is 24.\n* Added support for visible triangle mesh to be available for use in post processing.\n\n### Changed\n\n* Modified the Meta Quest Support feature to use the updated Khronos OpenXR loader library.\n* Changed OpenXR loader version to 1.1.45.\n\n### Fixed\n\n* Fixed an issue that enabled interaction profiles setting not being saved after reopened the project.\n* Fixed a bug that depth submission mode corrupting the spacewarp depth texture.\n* Fixed a bug that wrong view configuration type being selected as primary view and causing rendering issues.\n* Fixed an issue on Android platforms where `xrCreateSwapchainAndroidSurfaceKHR` was attempted to be used even when the XR Composition Layers package wasn't installed.\n* Fixed an issue that Meta XR simulator can't launch properly on Mac."},"unity":"2021.3","samples":[{"path":"Samples~/Controller","description":"Basic sample showing how to create and reference OpenXR action maps with the new input system.","displayName":"Controller"},{"path":"Samples~/ControllerXRInput","description":"Basic sample showing how to query OpenXR input with the XR Input APIs.","displayName":"Controller XRInput"},{"path":"Samples~/MeshingFeature","description":"Shows a teapot mesh generated from native mesh subsystem with physics baked in background.","displayName":"Meshing Subsystem Feature"},{"path":"Samples~/InterceptFeature","description":"Demonstrates how to intercept an OpenXR method.","displayName":"Intercept Feature"},{"path":"Samples~/CustomCompositionLayerFeature","description":"Demonstrates how to add support for a custom composition layer type.","displayName":"Custom Composition Layer Feature"}],"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.openxr@1.14/manual/index.html","name":"com.unity.xr.openxr","version":"1.14.2","displayName":"OpenXR Plugin","description":"OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.","keywords":["openxr","xr","reality","xreditorsubsystem"],"dependencies":{"com.unity.inputsystem":"1.6.3","com.unity.xr.core-utils":"2.3.0","com.unity.xr.management":"4.4.0","com.unity.xr.legacyinputhelpers":"2.1.2"},"dist":{"shasum":"9f2923682e68d941b400fc4be76aaa2615446279","tarball":"https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.14.2.tgz"}},"1.12.0-exp.1":{"_upm":{"changelog":"### Fixed\n* Fixed Custom Composition Layer Feature not showing up in the OpenXR feature setting UI after importing into project.\n* Fixed a crash with composition layers in scene due to race condition.\n\n### Changed\n* Implements the construction and maintenance of native composition layers in C# via our LayerProvider classes inheriting from OpenXRCustomLayerHandler."},"type":"assets","unity":"2021.3","upmCi":{"footprint":"790ca1c5646f9e4d7babb1c3bdaa6890793fda3a"},"samples":[{"path":"Samples~/Controller","description":"Basic sample showing how to create and reference OpenXR action maps with the new input system.","displayName":"Controller"},{"path":"Samples~/MeshingFeature","description":"Shows a teapot mesh generated from native mesh subsystem with physics baked in background.","displayName":"Meshing Subsystem Feature"},{"path":"Samples~/InterceptFeature","description":"Demonstrates how to intercept an OpenXR method.","displayName":"Intercept Feature"},{"path":"Samples~/CustomCompositionLayerFeature","description":"Demonstrates how to add support for a custom composition layer type.","displayName":"Custom Composition Layer Feature"}],"repository":{"url":"https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git","type":"git","revision":"19af61c304a088cedf43714559d21c264e6fe010"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.openxr@1.12/manual/index.html","name":"com.unity.xr.openxr","version":"1.12.0-exp.1","displayName":"OpenXR Plugin","description":"OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management. This experimental version added Composition Layer support (Pair with com.unity.xr.compositionlayers package)","keywords":["openxr","xr","reality","xreditorsubsystem"],"dependencies":{"com.unity.inputsystem":"1.6.3","com.unity.xr.core-utils":"2.1.1","com.unity.xr.management":"4.4.0","com.unity.xr.legacyinputhelpers":"2.1.2"},"dist":{"shasum":"b558f7b3a8f09c37ae861ab3dddf5458298423ac","tarball":"https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.12.0-exp.1.tgz"}},"1.0.0-pre.1":{"_id":"com.unity.xr.openxr@1.0.0-pre.1","type":"asset","unity":"2021.1","upmCi":{"footprint":"cc31aaf1bfa4feb228f3486786c1e637f5b7f388"},"readme":"ERROR: No README data found!","samples":[{"path":"Samples~/Controller","description":"Basic sample showing how to create and reference OpenXR action maps with the new input system.","displayName":"Controller"},{"path":"Samples~/MeshingFeature","description":"Shows a teapot mesh generated from native mesh subsystem with physics baked in background.","displayName":"Meshing Subsystem Feature"},{"path":"Samples~/InterceptFeature","description":"Demonstrates how to intercept an OpenXR method.","displayName":"Intercept Feature"}],"_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git","type":"git","revision":"735e27dcbedfd1682ca7b9c40bb48a34f9d215c2"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","unityRelease":"0b3","name":"com.unity.xr.openxr","version":"1.0.0-pre.1","displayName":"OpenXR Plugin","description":"OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.","keywords":["openxr","xr","reality","xreditorsubsystem"],"dependencies":{"com.unity.inputsystem":"1.0.2","com.unity.xr.management":"4.0.1","com.unity.xr.legacyinputhelpers":"2.1.2"},"dist":{"shasum":"0f0db0198a621ebe951f8da1658d96702511af34","tarball":"https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.0.0-pre.1.tgz"}},"0.1.2-preview.2":{"_id":"com.unity.xr.openxr@0.1.2-preview.2","type":"asset","_from":"file:com.unity.xr.openxr-0.1.2-preview.2.tgz","unity":"2020.2","upmCi":{"footprint":"b17d42b750df3eded68075dede5663f1be36efee"},"readme":"ERROR: No README data found!","samples":[{"path":"Samples~/Controller","description":"Basic sample showing how to create and reference OpenXR action maps with the new input system.","displayName":"Controller"},{"path":"Samples~/MeshingFeature","description":"Shows a teapot mesh generated from native mesh subsystem with physics baked in background.","displayName":"Meshing Subsystem Feature"},{"path":"Samples~/InterceptFeature","description":"Demonstrates how to intercept an OpenXR method.","displayName":"Intercept Feature"}],"_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git","type":"git","revision":"8621e12ff34382c8a02cf25e5728c4c2ef41b474"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","unityRelease":"0b14","name":"com.unity.xr.openxr","version":"0.1.2-preview.2","displayName":"OpenXR Plugin","description":"OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.","keywords":["openxr","xr","reality","xreditorsubsystem"],"dependencies":{"com.unity.inputsystem":"1.1.0-preview.1","com.unity.xr.management":"4.0.0-pre.2","com.unity.xr.legacyinputhelpers":"2.1.2"},"dist":{"shasum":"3474aacfc03793835869daf0381884795bec1933","tarball":"https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-0.1.2-preview.2.tgz"}}},"time":{"1.14.2":"2025-03-27T10:54:45.412Z","1.12.0-exp.1":"2024-07-03T15:24:28.000Z","1.0.0-pre.1":"2021-02-11T19:26:19.000Z","0.1.2-preview.2":"2021-01-05T17:57:41.000Z"},"dist-tags":{"latest":"1.14.2"},"etag":"\"18855-eQZPc3Nb+IhUvhXerfZyyDG0KZc\""}
