// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`datasource/aws-machine-image/index getSortedAwsMachineImages() with 1 returned image 1`] = `
Array [
  Object {
    "args": Array [
      DescribeImagesCommand {
        "input": Object {
          "Filters": Array [
            Object {
              "Name": "owner-id",
              "Values": Array [
                "602401143452",
              ],
            },
            Object {
              "Name": "name",
              "Values": Array [
                "1image",
              ],
            },
          ],
        },
        "middlewareStack": Object {
          "add": [Function],
          "addRelativeTo": [Function],
          "applyToStack": [Function],
          "clone": [Function],
          "concat": [Function],
          "remove": [Function],
          "removeByTag": [Function],
          "resolve": [Function],
          "use": [Function],
        },
      },
    ],
    "callId": 1,
    "callback": undefined,
    "errorWithCallStack": [Error],
    "exception": undefined,
    "firstArg": DescribeImagesCommand {
      "input": Object {
        "Filters": Array [
          Object {
            "Name": "owner-id",
            "Values": Array [
              "602401143452",
            ],
          },
          Object {
            "Name": "name",
            "Values": Array [
              "1image",
            ],
          },
        ],
      },
      "middlewareStack": Object {
        "add": [Function],
        "addRelativeTo": [Function],
        "applyToStack": [Function],
        "clone": [Function],
        "concat": [Function],
        "remove": [Function],
        "removeByTag": [Function],
        "resolve": [Function],
        "use": [Function],
      },
    },
    "lastArg": DescribeImagesCommand {
      "input": Object {
        "Filters": Array [
          Object {
            "Name": "owner-id",
            "Values": Array [
              "602401143452",
            ],
          },
          Object {
            "Name": "name",
            "Values": Array [
              "1image",
            ],
          },
        ],
      },
      "middlewareStack": Object {
        "add": [Function],
        "addRelativeTo": [Function],
        "applyToStack": [Function],
        "clone": [Function],
        "concat": [Function],
        "remove": [Function],
        "removeByTag": [Function],
        "resolve": [Function],
        "use": [Function],
      },
    },
    "proxy": [Function],
    "returnValue": Promise {},
    "thisValue": EC2Client {
      "config": Object {
        "apiVersion": "2016-11-15",
        "base64Decoder": [Function],
        "base64Encoder": [Function],
        "bodyLengthChecker": [Function],
        "credentialDefaultProvider": [Function],
        "credentials": [Function],
        "customUserAgent": undefined,
        "defaultUserAgentProvider": [Function],
        "disableHostPrefix": false,
        "endpoint": [Function],
        "isCustomEndpoint": false,
        "logger": Object {},
        "maxAttempts": [Function],
        "region": [Function],
        "regionInfoProvider": [Function],
        "requestHandler": NodeHttpHandler {
          "connectionTimeout": undefined,
          "httpAgent": Agent {
            "_events": Object {
              "free": [Function],
              "newListener": [Function],
            },
            "_eventsCount": 2,
            "_maxListeners": undefined,
            "defaultPort": 80,
            "freeSockets": Object {},
            "keepAlive": true,
            "keepAliveMsecs": 1000,
            "maxFreeSockets": 256,
            "maxSockets": 50,
            "maxTotalSockets": Infinity,
            "options": Object {
              "keepAlive": true,
              "maxSockets": 50,
              "path": null,
            },
            "protocol": "http:",
            "requests": Object {},
            "scheduling": "lifo",
            "sockets": Object {},
            "totalSocketCount": 0,
            Symbol(kCapture): false,
          },
          "httpsAgent": Agent {
            "_events": Object {
              "free": [Function],
              "newListener": [Function],
            },
            "_eventsCount": 2,
            "_maxListeners": undefined,
            "_sessionCache": Object {
              "list": Array [],
              "map": Object {},
            },
            "defaultPort": 443,
            "freeSockets": Object {},
            "keepAlive": true,
            "keepAliveMsecs": 1000,
            "maxCachedSessions": 100,
            "maxFreeSockets": 256,
            "maxSockets": 50,
            "maxTotalSockets": Infinity,
            "options": Object {
              "keepAlive": true,
              "maxSockets": 50,
              "path": null,
            },
            "protocol": "https:",
            "requests": Object {},
            "scheduling": "lifo",
            "sockets": Object {},
            "totalSocketCount": 0,
            Symbol(kCapture): false,
          },
          "metadata": Object {
            "handlerProtocol": "http/1.1",
          },
          "socketTimeout": undefined,
        },
        "retryMode": [Function],
        "retryStrategy": [Function],
        "runtime": "node",
        "serviceId": "EC2",
        "sha256": [Function],
        "signer": [Function],
        "signingEscapePath": true,
        "streamCollector": [Function],
        "systemClockOffset": 0,
        "tls": true,
        "urlParser": [Function],
        "useDualstackEndpoint": [Function],
        "useFipsEndpoint": [Function],
        "utf8Decoder": [Function],
        "utf8Encoder": [Function],
      },
      "middlewareStack": Object {
        "add": [Function],
        "addRelativeTo": [Function],
        "applyToStack": [Function],
        "clone": [Function],
        "concat": [Function],
        "remove": [Function],
        "removeByTag": [Function],
        "resolve": [Function],
        "use": [Function],
      },
    },
  },
]
`;

exports[`datasource/aws-machine-image/index getSortedAwsMachineImages() with 3 returned images 1`] = `
Array [
  Object {
    "args": Array [
      DescribeImagesCommand {
        "input": Object {
          "Filters": Array [
            Object {
              "Name": "owner-id",
              "Values": Array [
                "602401143452",
              ],
            },
            Object {
              "Name": "name",
              "Values": Array [
                "3images",
              ],
            },
          ],
        },
        "middlewareStack": Object {
          "add": [Function],
          "addRelativeTo": [Function],
          "applyToStack": [Function],
          "clone": [Function],
          "concat": [Function],
          "remove": [Function],
          "removeByTag": [Function],
          "resolve": [Function],
          "use": [Function],
        },
      },
    ],
    "callId": 0,
    "callback": undefined,
    "errorWithCallStack": [Error],
    "exception": undefined,
    "firstArg": DescribeImagesCommand {
      "input": Object {
        "Filters": Array [
          Object {
            "Name": "owner-id",
            "Values": Array [
              "602401143452",
            ],
          },
          Object {
            "Name": "name",
            "Values": Array [
              "3images",
            ],
          },
        ],
      },
      "middlewareStack": Object {
        "add": [Function],
        "addRelativeTo": [Function],
        "applyToStack": [Function],
        "clone": [Function],
        "concat": [Function],
        "remove": [Function],
        "removeByTag": [Function],
        "resolve": [Function],
        "use": [Function],
      },
    },
    "lastArg": DescribeImagesCommand {
      "input": Object {
        "Filters": Array [
          Object {
            "Name": "owner-id",
            "Values": Array [
              "602401143452",
            ],
          },
          Object {
            "Name": "name",
            "Values": Array [
              "3images",
            ],
          },
        ],
      },
      "middlewareStack": Object {
        "add": [Function],
        "addRelativeTo": [Function],
        "applyToStack": [Function],
        "clone": [Function],
        "concat": [Function],
        "remove": [Function],
        "removeByTag": [Function],
        "resolve": [Function],
        "use": [Function],
      },
    },
    "proxy": [Function],
    "returnValue": Promise {},
    "thisValue": EC2Client {
      "config": Object {
        "apiVersion": "2016-11-15",
        "base64Decoder": [Function],
        "base64Encoder": [Function],
        "bodyLengthChecker": [Function],
        "credentialDefaultProvider": [Function],
        "credentials": [Function],
        "customUserAgent": undefined,
        "defaultUserAgentProvider": [Function],
        "disableHostPrefix": false,
        "endpoint": [Function],
        "isCustomEndpoint": false,
        "logger": Object {},
        "maxAttempts": [Function],
        "region": [Function],
        "regionInfoProvider": [Function],
        "requestHandler": NodeHttpHandler {
          "connectionTimeout": undefined,
          "httpAgent": Agent {
            "_events": Object {
              "free": [Function],
              "newListener": [Function],
            },
            "_eventsCount": 2,
            "_maxListeners": undefined,
            "defaultPort": 80,
            "freeSockets": Object {},
            "keepAlive": true,
            "keepAliveMsecs": 1000,
            "maxFreeSockets": 256,
            "maxSockets": 50,
            "maxTotalSockets": Infinity,
            "options": Object {
              "keepAlive": true,
              "maxSockets": 50,
              "path": null,
            },
            "protocol": "http:",
            "requests": Object {},
            "scheduling": "lifo",
            "sockets": Object {},
            "totalSocketCount": 0,
            Symbol(kCapture): false,
          },
          "httpsAgent": Agent {
            "_events": Object {
              "free": [Function],
              "newListener": [Function],
            },
            "_eventsCount": 2,
            "_maxListeners": undefined,
            "_sessionCache": Object {
              "list": Array [],
              "map": Object {},
            },
            "defaultPort": 443,
            "freeSockets": Object {},
            "keepAlive": true,
            "keepAliveMsecs": 1000,
            "maxCachedSessions": 100,
            "maxFreeSockets": 256,
            "maxSockets": 50,
            "maxTotalSockets": Infinity,
            "options": Object {
              "keepAlive": true,
              "maxSockets": 50,
              "path": null,
            },
            "protocol": "https:",
            "requests": Object {},
            "scheduling": "lifo",
            "sockets": Object {},
            "totalSocketCount": 0,
            Symbol(kCapture): false,
          },
          "metadata": Object {
            "handlerProtocol": "http/1.1",
          },
          "socketTimeout": undefined,
        },
        "retryMode": [Function],
        "retryStrategy": [Function],
        "runtime": "node",
        "serviceId": "EC2",
        "sha256": [Function],
        "signer": [Function],
        "signingEscapePath": true,
        "streamCollector": [Function],
        "systemClockOffset": 0,
        "tls": true,
        "urlParser": [Function],
        "useDualstackEndpoint": [Function],
        "useFipsEndpoint": [Function],
        "utf8Decoder": [Function],
        "utf8Encoder": [Function],
      },
      "middlewareStack": Object {
        "add": [Function],
        "addRelativeTo": [Function],
        "applyToStack": [Function],
        "clone": [Function],
        "concat": [Function],
        "remove": [Function],
        "removeByTag": [Function],
        "resolve": [Function],
        "use": [Function],
      },
    },
  },
]
`;

exports[`datasource/aws-machine-image/index getSortedAwsMachineImages() without returned images 1`] = `
Array [
  Object {
    "args": Array [
      DescribeImagesCommand {
        "input": Object {
          "Filters": Array [
            Object {
              "Name": "owner-id",
              "Values": Array [
                "602401143452",
              ],
            },
            Object {
              "Name": "name",
              "Values": Array [
                "noiamge",
              ],
            },
          ],
        },
        "middlewareStack": Object {
          "add": [Function],
          "addRelativeTo": [Function],
          "applyToStack": [Function],
          "clone": [Function],
          "concat": [Function],
          "remove": [Function],
          "removeByTag": [Function],
          "resolve": [Function],
          "use": [Function],
        },
      },
    ],
    "callId": 2,
    "callback": undefined,
    "errorWithCallStack": [Error],
    "exception": undefined,
    "firstArg": DescribeImagesCommand {
      "input": Object {
        "Filters": Array [
          Object {
            "Name": "owner-id",
            "Values": Array [
              "602401143452",
            ],
          },
          Object {
            "Name": "name",
            "Values": Array [
              "noiamge",
            ],
          },
        ],
      },
      "middlewareStack": Object {
        "add": [Function],
        "addRelativeTo": [Function],
        "applyToStack": [Function],
        "clone": [Function],
        "concat": [Function],
        "remove": [Function],
        "removeByTag": [Function],
        "resolve": [Function],
        "use": [Function],
      },
    },
    "lastArg": DescribeImagesCommand {
      "input": Object {
        "Filters": Array [
          Object {
            "Name": "owner-id",
            "Values": Array [
              "602401143452",
            ],
          },
          Object {
            "Name": "name",
            "Values": Array [
              "noiamge",
            ],
          },
        ],
      },
      "middlewareStack": Object {
        "add": [Function],
        "addRelativeTo": [Function],
        "applyToStack": [Function],
        "clone": [Function],
        "concat": [Function],
        "remove": [Function],
        "removeByTag": [Function],
        "resolve": [Function],
        "use": [Function],
      },
    },
    "proxy": [Function],
    "returnValue": Promise {},
    "thisValue": EC2Client {
      "config": Object {
        "apiVersion": "2016-11-15",
        "base64Decoder": [Function],
        "base64Encoder": [Function],
        "bodyLengthChecker": [Function],
        "credentialDefaultProvider": [Function],
        "credentials": [Function],
        "customUserAgent": undefined,
        "defaultUserAgentProvider": [Function],
        "disableHostPrefix": false,
        "endpoint": [Function],
        "isCustomEndpoint": false,
        "logger": Object {},
        "maxAttempts": [Function],
        "region": [Function],
        "regionInfoProvider": [Function],
        "requestHandler": NodeHttpHandler {
          "connectionTimeout": undefined,
          "httpAgent": Agent {
            "_events": Object {
              "free": [Function],
              "newListener": [Function],
            },
            "_eventsCount": 2,
            "_maxListeners": undefined,
            "defaultPort": 80,
            "freeSockets": Object {},
            "keepAlive": true,
            "keepAliveMsecs": 1000,
            "maxFreeSockets": 256,
            "maxSockets": 50,
            "maxTotalSockets": Infinity,
            "options": Object {
              "keepAlive": true,
              "maxSockets": 50,
              "path": null,
            },
            "protocol": "http:",
            "requests": Object {},
            "scheduling": "lifo",
            "sockets": Object {},
            "totalSocketCount": 0,
            Symbol(kCapture): false,
          },
          "httpsAgent": Agent {
            "_events": Object {
              "free": [Function],
              "newListener": [Function],
            },
            "_eventsCount": 2,
            "_maxListeners": undefined,
            "_sessionCache": Object {
              "list": Array [],
              "map": Object {},
            },
            "defaultPort": 443,
            "freeSockets": Object {},
            "keepAlive": true,
            "keepAliveMsecs": 1000,
            "maxCachedSessions": 100,
            "maxFreeSockets": 256,
            "maxSockets": 50,
            "maxTotalSockets": Infinity,
            "options": Object {
              "keepAlive": true,
              "maxSockets": 50,
              "path": null,
            },
            "protocol": "https:",
            "requests": Object {},
            "scheduling": "lifo",
            "sockets": Object {},
            "totalSocketCount": 0,
            Symbol(kCapture): false,
          },
          "metadata": Object {
            "handlerProtocol": "http/1.1",
          },
          "socketTimeout": undefined,
        },
        "retryMode": [Function],
        "retryStrategy": [Function],
        "runtime": "node",
        "serviceId": "EC2",
        "sha256": [Function],
        "signer": [Function],
        "signingEscapePath": true,
        "streamCollector": [Function],
        "systemClockOffset": 0,
        "tls": true,
        "urlParser": [Function],
        "useDualstackEndpoint": [Function],
        "useFipsEndpoint": [Function],
        "utf8Decoder": [Function],
        "utf8Encoder": [Function],
      },
      "middlewareStack": Object {
        "add": [Function],
        "addRelativeTo": [Function],
        "applyToStack": [Function],
        "clone": [Function],
        "concat": [Function],
        "remove": [Function],
        "removeByTag": [Function],
        "resolve": [Function],
        "use": [Function],
      },
    },
  },
]
`;
