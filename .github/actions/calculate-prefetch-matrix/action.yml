# This is the composite action:
#   https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
#
# Composite actions have some limitations:
#   - many contexts are unavailable, e.g. `runner`
#   - `env` can be specified per-step only
#   - if `run` is used, `shell` must be explicitly specified
name: 'Calculate matrix for `node_modules` prefetch'
inputs:
  repo:
    description: 'Repository name'
    required: true
  token:
    description: 'GitHub token'
    required: true
  node-version:
    description: 'Node version'
    required: true
  hash:
    description: 'Yarn lock hash'
    required: true
outputs:
  matrix:
    description: 'Matrix of OSes to prefetch `node_modules` for'
    value: ${{ steps.os-matrix-prefetch.outputs.os-matrix-prefetch }}
runs:
  using: 'composite'
  steps:
    - name: Calculate cache keys
      id: cache-keys
      env:
        LOCK_HASH: ${{ steps.yarn-lock-hash.outputs.yarn-lock-hash }}
      shell: bash
      run: |
        echo 'macos-cache-key=node-modules-macOS-${{ inputs.node-version }}-${{ inputs.hash }}' >> "$GITHUB_OUTPUT"
        echo 'windows-cache-key=node-modules-Windows-${{ inputs.node-version }}-${{ inputs.hash }}' >> "$GITHUB_OUTPUT"

    - name: Fetch available cache keys
      id: caches-list
      env:
        GH_TOKEN: ${{ inputs.token }}
        GH_REPO: ${{ inputs.repo }}
        CACHES_URL: /repos/{owner}/{repo}/actions/caches
        JQ_FILTER: >-
          "keys=" + ([.[].actions_caches[].key] | tostring)
      shell: bash
      run: |
        gh api ${{ env.CACHES_URL }} --paginate | jq -rcs '${{ env.JQ_FILTER }}' >> "$GITHUB_OUTPUT"

    - name: Calculate cache misses for Windows and MacOS
      id: modules-caches
      env:
        ACTIONS_CACHE_KEYS: ${{ steps.caches-list.outputs.keys }}
        MACOS_CACHE_KEY: ${{ steps.cache-keys.outputs.macos-cache-key }}
        WINDOWS_CACHE_KEY: ${{ steps.cache-keys.outputs.windows-cache-key }}
      shell: bash
      run: |
        echo 'macos=${{
          !contains(fromJSON(env.ACTIONS_CACHE_KEYS), env.MACOS_CACHE_KEY) && 'true' || ''
        }}' >> "$GITHUB_OUTPUT"
        echo 'windows=${{
          !contains(fromJSON(env.ACTIONS_CACHE_KEYS), env.WINDOWS_CACHE_KEY) && 'true' || ''
        }}' >> "$GITHUB_OUTPUT"

    - name: Dispatch `node_modules` prefetch for MacOS and Windows
      id: os-matrix-prefetch
      env:
        MACOS_MISS: ${{ steps.modules-caches.outputs.macos }}
        WINDOWS_MISS: ${{ steps.modules-caches.outputs.windows }}
        PREFETCH_MAC_ONLY: '["macos-latest"]'
        PREFETCH_WINDOWS_ONLY: '["windows-latest"]'
        PREFETCH_BOTH: '["macos-latest", "windows-latest"]'
        PREFETCH_FALLBACK: '["ubuntu-latest"]'
      shell: bash
      run: |
        echo 'os-matrix-prefetch=${{
          (env.OS_MATRIX_IS_FULL && env.WINDOWS_MISS && env.MACOS_MISS && env.PREFETCH_BOTH) ||
          (env.OS_MATRIX_IS_FULL && env.MACOS_MISS && env.PREFETCH_MAC_ONLY) ||
          (env.OS_MATRIX_IS_FULL && env.WINDOWS_MISS && env.PREFETCH_WINDOWS_ONLY) ||
          env.PREFETCH_FALLBACK
        }}' >> "$GITHUB_OUTPUT"
