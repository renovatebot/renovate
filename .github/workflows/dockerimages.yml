name: Docker Images CI

on:
  push:
    branches:
      - master

  pull_request:

env:
  PLATFORM: linux/amd64
  DOCKER_CACHE_TAG: _cache
  DOCKER_REPO: renovate/renovate

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    timeout-minutes: 20

    strategy:
      matrix:
        tag: [latest, slim]

    env:
      DOCKER_FILE: Dockerfile.${{ matrix.tag }}
      DOCKER_TAG: ${{ matrix.tag }}

    steps:
      - name: Overwrite env for latest tag
        if: matrix.tag == 'latest'
        run: |
          echo "::set-env name=DOCKER_FILE::Dockerfile"

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - uses: actions/checkout@v2

      - name: Build the Docker image
        run: |
          docker buildx build \
            --platform ${PLATFORM} \
            --output=type=docker \
            --cache-from=${DOCKER_REPO}:${DOCKER_CACHE_TAG}-${DOCKER_TAG} \
            --tag=renovate \
            --file=./${DOCKER_FILE} .

      - name: Test the Docker image
        run: |
          docker run --rm -t renovate --version

      - name: Image history
        run: docker history renovate
      - name: Image size
        run: docker image ls | grep renovate

      - name: Push the Docker image cache
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          echo "${{ secrets.DOCKER_RENOVATERELEASE_TOKEN }}" | docker login -u renovaterelease --password-stdin
          docker buildx build \
            --platform ${PLATFORM} \
            --output=type=docker \
            --cache-from=${DOCKER_REPO}:${DOCKER_CACHE_TAG}-${DOCKER_TAG} \
            --cache-to=${DOCKER_REPO}:${DOCKER_CACHE_TAG}-${DOCKER_TAG} \
            --tag=renovate \
            --file=./${DOCKER_FILE} .
