name: Docker Images CI

on:
  push:
    branches:
      - master
      - chore/docker-cache

  pull_request:

env:
  PLATFORM: linux/amd64
  CACHE_IMAGE: renovate/cache-test

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    timeout-minutes: 20

    strategy:
      matrix:
        tag: [latest, slim]

    env:
      DOCKERFILE: Dockerfile.${{ matrix.tag }}

    steps:
      - name: Init env for other tags
        if: matrix.tag == 'latest'
        run: |
          echo "::set-env name=DOCKERFILE::Dockerfile"

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - uses: actions/checkout@v2

      - name: Build the Docker image
        run: |
          docker buildx build \
            --platform ${PLATFORM} \
            --output "type=docker" \
            --cache-from $(CACHE_IMAGE):cache-${{ matrix.tag }} \
            --tag renovate \
            --file ./$(DOCKERFILE) .

      - name: Test the Docker image
        run: |
          docker run --rm -t renovate --version

      - name: Image history
        run: docker history renovate

      - name: Image size
        run: docker image ls | grep renovate

  push:
    name: Release push
    runs-on: ubuntu-latest

    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/chore/docker-cache'

    timeout-minutes: 10

    strategy:
      matrix:
        tag: [latest, slim]

    env:
      DOCKERFILE: Dockerfile.${{ matrix.tag }}

    steps:
      - name: Init env for other tags
        if: matrix.tag == 'latest'
        run: |
          echo "::set-env name=DOCKERFILE::Dockerfile"

      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_RENOVATERELEASE_TOKEN }}" | docker login -u renovaterelease --password-stdin

      - name: Build the Docker image
        run: |
          docker buildx build \
            --platform ${PLATFORM} \
            --cache-from $(CACHE_IMAGE):cache-${{ matrix.tag }} \
            --cache-to $(CACHE_IMAGE):cache-${{ matrix.tag }} \
            --file ./$(DOCKERFILE) .
