name: release

on:
  repository_dispatch:
    types: [renovate-release]

  workflow_dispatch:
    inputs:
      sha:
        description: 'Git sha to checkout'
        required: true
      version:
        description: 'Version to release'
        required: true
      tag:
        description: 'Npm dist-tag'
        default: 'latest'
        required: false

env:
  NODE_VERSION: 18
  GIT_SHA: ${{ github.event.client_payload.sha }}
  VERSION: ${{ github.event.client_payload.version }}
  BUILDKIT_PROGRESS: plain
  BUILDX_NO_DEFAULT_LOAD: 1
  DOCKER_PLATFORMS: linux/amd64,linux/arm64
  OWNER: ${{ github.repository_owner }}
  FILE: renovate

permissions:
  contents: read
  id-token: write

jobs:
  mutex:
    runs-on: ubuntu-latest

    permissions:
      contents: write # pushes a branch

    steps:
      - name: Set up mutex
        uses: ben-z/gh-action-mutex@v1.0-alpha-8
        with:
          branch: mutex-rel

  release-docker:
    runs-on: ubuntu-latest
    needs:
      - mutex

    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - name: Prepare env
        run: |
          if [[ "${{github.event_name}}" == "workflow_dispatch" ]]; then
            echo "GIT_SHA=${{ github.event.inputs.sha }}" >> "$GITHUB_ENV"
            echo "VERSION=${{ github.event.inputs.version }}" >> "$GITHUB_ENV"
          fi
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}

      - name: docker-config
        uses: containerbase/internal-tools@a12a7d23492f0805ce2237f46c9b69d9c3ba5f01 # v3.0.54
        with:
          command: docker-config

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ env.GIT_SHA }}
          show-progress: false

      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}
          os: ${{ runner.os }}

      - uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 # v3.4.0

      - name: Docker registry login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Build docker images ${{ env.VERSION }}
        run: pnpm build:docker build --platform=${{ env.DOCKER_PLATFORMS }} --version ${{ env.VERSION }} --tries 3

      - name: Publish docker images ${{ env.VERSION }}
        if: false
        run: pnpm build:docker push --platform=${{ env.DOCKER_PLATFORMS }} --version ${{ env.VERSION }}

      - name: Sign images
        if: false
        run: |
          cosign sign --yes ghcr.io/${{ env.OWNER }}/${{ env.FILE }}:${{ env.VERSION }}
          cosign sign --yes ghcr.io/${{ env.OWNER }}/${{ env.FILE }}:${{ env.VERSION }}-full
          cosign sign --yes ${{ env.FILE }}/${{ env.FILE }}:${{ env.VERSION }}
          cosign sign --yes ${{ env.FILE }}/${{ env.FILE }}:${{ env.VERSION }}-full
