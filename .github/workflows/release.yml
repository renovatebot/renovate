name: release

on:
  repository_dispatch:
    types: [renovate-release]

  workflow_dispatch:
    inputs:
      sha:
        description: 'Git sha to checkout'
        required: true
      version:
        description: 'Version to release'
        required: true
      tag:
        description: 'Npm dist-tag'
        default: 'latest'
        required: false

env:
  NODE_VERSION: 18
  GIT_SHA: ${{ github.event.client_payload.sha }}
  NPM_VERSION: ${{ github.event.client_payload.version }}
  NPM_TAG: ${{ github.event.client_payload.tag }}
  RENOVATE_VERSION: ${{ github.event.client_payload.version }}
  BUILDKIT_PROGRESS: plain
  BUILDX_NO_DEFAULT_LOAD: 1
  DOCKER_PLATFORMS: linux/amd64,linux/arm64
  OWNER: ${{ github.repository_owner }}
  FILE: renovate

permissions:
  contents: read
  id-token: write

jobs:
  release-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare env
        run: |
          if [[ "${{github.event_name}}" == "workflow_dispatch" ]]; then
            echo "GIT_SHA=${{ github.event.inputs.sha }}" >> "$GITHUB_ENV"
            echo "NPM_VERSION=${{ github.event.inputs.version }}" >> "$GITHUB_ENV"
            echo "NPM_TAG=${{ github.event.inputs.tag }}" >> "$GITHUB_ENV"
          fi

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ env.GIT_SHA }}
          show-progress: false

      - name: Enable corepack
        shell: bash
        run: corepack enable

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'renovate@whitesourcesoftware.com'
          git config --global user.name  'Renovate Bot'

      - name: Installing dependencies
        uses: nick-fields/retry@14672906e672a08bd6eeb15720e9ed3ce869cdd4 # v2.9.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: pnpm install --frozen-lockfile

      - name: Build ${{ env.NPM_VERSION }}
        run: pnpm build

      - name: Prepare  ${{ env.NPM_VERSION }}
        run: |
          npm --no-git-tag-version version ${{ env.NPM_VERSION }}

      - name: Publish ${{ env.NPM_VERSION }}
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' >> ./.npmrc
          npm publish --tag ${{ env.NPM_TAG }}
          git checkout -- .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  release-docker:
    runs-on: ubuntu-latest
    needs:
      - release-npm

    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - name: Prepare env
        run: |
          if [[ "${{github.event_name}}" == "workflow_dispatch" ]]; then
            echo "GIT_SHA=${{ github.event.inputs.sha }}" >> "$GITHUB_ENV"
            echo "RENOVATE_VERSION=${{ github.event.inputs.version }}" >> "$GITHUB_ENV"
          fi
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}

      - name: docker-config
        uses: containerbase/internal-tools@a12a7d23492f0805ce2237f46c9b69d9c3ba5f01 # v3.0.54
        with:
          command: docker-config

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ env.GIT_SHA }}
          show-progress: false

      - uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 # v3.4.0

      - name: Docker registry login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Build docker images ${{ env.RENOVATE_VERSION }}
        run: docker buildx bake --set settings.platform=${{ env.DOCKER_PLATFORMS }} --file tools/docker/bake.hcl build

      - name: Publish docker images ${{ env.RENOVATE_VERSION }}
        if: false
        run: docker buildx bake --set settings.platform=${{ env.DOCKER_PLATFORMS }} --file tools/docker/bake.hcl push

      - name: Sign images
        if: false
        run: |
          cosign sign --yes ghcr.io/${{ env.OWNER }}/${{ env.FILE }}:${{ env.RENOVATE_VERSION }}
          cosign sign --yes ghcr.io/${{ env.OWNER }}/${{ env.FILE }}:${{ env.RENOVATE_VERSION }}-full
          cosign sign --yes ${{ env.FILE }}/${{ env.FILE }}:${{ env.RENOVATE_VERSION }}
          cosign sign --yes ${{ env.FILE }}/${{ env.FILE }}:${{ env.RENOVATE_VERSION }}-full
