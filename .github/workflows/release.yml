name: Release CI

on:
  push:
    branches:
      - master

env:
  PLATFORM: linux/amd64
  DOCKER_CACHE_TAG: _cache
  DOCKER_REPO: renovate/renovate
  SKIP_JAVA_TESTS: true

jobs:
  semantic-release:
    name: semantic-release
    runs-on: ubuntu-latest

    # release shouldn't need more than 30 min
    timeout-minutes: 30

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Init platform
        id: init
        shell: bash
        run: |
          echo "::set-output name=yarn_cache::$(yarn cache dir)"
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'bot@renovateapp.com'
          git config --global user.name  'Renovate Bot'
          node --version
          python --version
          yarn --version
          pip --version

      - uses: actions/checkout@v2

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@v1
        with:
          path: ${{ steps.init.outputs.yarn_cache }}
          key: v1-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}

      - name: Installing dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          yarn install --frozen-lockfile --link-duplicates
          pip install --user -r requirements.txt

      - name: Lint
        run: yarn lint

      - name: Test schema
        run: yarn test-schema

      - name: Type check
        run: yarn type-check

      - name: Build
        run: yarn build

      - name: Unit tests
        run: yarn jest --maxWorkers=2 --ci --coverageReporters=text-summary

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - name: Docker registry login
        run: echo "${{ secrets.DOCKER_RENOVATERELEASE_TOKEN }}" | docker login -u renovaterelease --password-stdin

      - name: Build the Docker images cache
        run: |
          docker buildx bake \
            --file docker/bake.hcl \
            --set latest.cache-to=renovate/renovate:_cache-latest \
            --set slim.cache-to=renovate/renovate:_cache-slim \
            default

      - run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          SHA: ${{github.sha}}
