// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`worker assignDepConfigs(inputConfig, deps) handles depType config with override 1`] = `
Array [
  Object {
    "config": Object {
      "foo": "beta",
    },
    "depName": "a",
    "depType": "dependencies",
  },
]
`;

exports[`worker assignDepConfigs(inputConfig, deps) handles depType config without override 1`] = `
Array [
  Object {
    "config": Object {
      "alpha": "beta",
      "foo": "bar",
    },
    "depName": "a",
    "depType": "dependencies",
  },
]
`;

exports[`worker assignDepConfigs(inputConfig, deps) handles multiple deps 1`] = `
Array [
  Object {
    "config": Object {
      "foo": "bar",
    },
    "depName": "a",
  },
  Object {
    "config": Object {
      "foo": "bar",
    },
    "depName": "b",
  },
]
`;

exports[`worker assignDepConfigs(inputConfig, deps) handles non-regex package name 1`] = `
Array [
  Object {
    "config": Object {
      "foo": "bar",
      "labels": Array [
        "eslint",
      ],
    },
    "depName": "eslint",
  },
  Object {
    "config": Object {
      "foo": "bar",
    },
    "depName": "eslint-foo",
  },
  Object {
    "config": Object {
      "foo": "bar",
    },
    "depName": "a",
  },
  Object {
    "config": Object {
      "foo": "bar",
    },
    "depName": "also-eslint",
  },
]
`;

exports[`worker assignDepConfigs(inputConfig, deps) handles package config 1`] = `
Array [
  Object {
    "config": Object {
      "foo": "bar",
      "labels": Array [
        "renovate",
      ],
    },
    "depName": "a",
  },
]
`;

exports[`worker assignDepConfigs(inputConfig, deps) handles regex package pattern 1`] = `
Array [
  Object {
    "config": Object {
      "foo": "bar",
      "labels": Array [
        "eslint",
      ],
    },
    "depName": "eslint",
  },
  Object {
    "config": Object {
      "foo": "bar",
      "labels": Array [
        "eslint",
      ],
    },
    "depName": "eslint-foo",
  },
  Object {
    "config": Object {
      "foo": "bar",
    },
    "depName": "a",
  },
  Object {
    "config": Object {
      "foo": "bar",
      "labels": Array [
        "eslint",
      ],
    },
    "depName": "also-eslint",
  },
]
`;

exports[`worker assignDepConfigs(inputConfig, deps) handles regex wildcard package pattern 1`] = `
Array [
  Object {
    "config": Object {
      "foo": "bar",
      "labels": Array [
        "eslint",
      ],
    },
    "depName": "eslint",
  },
  Object {
    "config": Object {
      "foo": "bar",
      "labels": Array [
        "eslint",
      ],
    },
    "depName": "eslint-foo",
  },
  Object {
    "config": Object {
      "foo": "bar",
    },
    "depName": "a",
  },
  Object {
    "config": Object {
      "foo": "bar",
    },
    "depName": "also-eslint",
  },
]
`;

exports[`worker assignDepConfigs(inputConfig, deps) handles string deps 1`] = `
Array [
  Object {
    "config": Object {
      "foo": "bar",
    },
    "depName": "a",
  },
]
`;

exports[`worker assignDepConfigs(inputConfig, deps) nested package config overrides depType and general config 1`] = `
Array [
  Object {
    "config": Object {
      "foo": "gamma",
    },
    "depName": "a",
    "depType": "dependencies",
  },
]
`;

exports[`worker assignDepConfigs(inputConfig, deps) package config overrides depType and general config 1`] = `
Array [
  Object {
    "config": Object {
      "foo": "gamma",
    },
    "depName": "a",
    "depType": "dependencies",
  },
]
`;
