// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`workers/repository/upgrades generateConfig(branchUpgrades) does not group single upgrade 1`] = `
Object {
  "depName": "some-dep",
  "foo": 1,
  "upgrades": Array [
    Object {
      "depName": "some-dep",
      "foo": 1,
    },
  ],
}
`;

exports[`workers/repository/upgrades generateConfig(branchUpgrades) groups single upgrade if not lazyGrouping 1`] = `
Object {
  "depName": "some-dep",
  "foo": 2,
  "groupName": "some-group",
  "upgrades": Array [
    Object {
      "depName": "some-dep",
      "foo": 2,
      "groupName": "some-group",
    },
  ],
}
`;

exports[`workers/repository/upgrades groupByBranch(upgrades) does not group if different compiled branch names 1`] = `
Object {
  "branchUpgrades": Object {
    "bar-1.1.0": Array [
      Object {
        "branchName": "bar-{{version}}",
        "version": "1.1.0",
      },
    ],
    "foo-1.1.0": Array [
      Object {
        "branchName": "foo-{{version}}",
        "version": "1.1.0",
      },
    ],
    "foo-2.0.0": Array [
      Object {
        "branchName": "foo-{{version}}",
        "version": "2.0.0",
      },
    ],
  },
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`workers/repository/upgrades groupByBranch(upgrades) groups if same compiled branch names 1`] = `
Object {
  "branchUpgrades": Object {
    "bar-1.1.0": Array [
      Object {
        "branchName": "bar-{{version}}",
        "version": "1.1.0",
      },
    ],
    "foo": Array [
      Object {
        "branchName": "foo",
        "version": "2.0.0",
      },
      Object {
        "branchName": "foo",
        "version": "1.1.0",
      },
    ],
  },
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`workers/repository/upgrades groupByBranch(upgrades) groups if same compiled group name 1`] = `
Object {
  "branchUpgrades": Object {
    "foo": Array [
      Object {
        "branchName": "foo",
        "version": "2.0.0",
      },
    ],
    "renovate/my-group": Array [
      Object {
        "branchName": "bar-{{version}}",
        "group": Object {
          "branchName": "renovate/my-group",
        },
        "groupName": "My Group",
        "groupSlug": "my-group",
        "version": "1.1.0",
      },
      Object {
        "branchName": "foo",
        "group": Object {
          "branchName": "renovate/{{groupSlug}}",
        },
        "groupName": "My Group",
        "groupSlug": "my-group",
        "version": "1.1.0",
      },
    ],
  },
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`workers/repository/upgrades groupByBranch(upgrades) mixes errors and warnings 1`] = `
Object {
  "branchUpgrades": Object {
    "bar-1.1.0": Array [
      Object {
        "branchName": "bar-{{version}}",
        "version": "1.1.0",
      },
    ],
    "foo-1.1.0": Array [
      Object {
        "branchName": "foo-{{version}}",
        "version": "1.1.0",
      },
    ],
  },
  "errors": Array [
    Object {
      "type": "error",
    },
  ],
  "warnings": Array [
    Object {
      "branchName": "foo-{{version}}",
      "type": "warning",
      "version": "2.0.0",
    },
  ],
}
`;

exports[`workers/repository/upgrades groupByBranch(upgrades) returns empty object if no input array 1`] = `
Object {
  "branchUpgrades": Object {},
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`workers/repository/upgrades groupByBranch(upgrades) returns one branch if one input 1`] = `
Object {
  "branchUpgrades": Object {
    "foo-1.1.0": Array [
      Object {
        "branchName": "foo-{{version}}",
        "version": "1.1.0",
      },
    ],
  },
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`workers/repository/upgrades groups multiple upgrades 1`] = `
Object {
  "depName": "some-dep",
  "foo": 2,
  "groupName": "some-group",
  "upgrades": Array [
    Object {
      "depName": "some-dep",
      "foo": 2,
      "groupName": "some-group",
    },
    Object {
      "depName": "some-other-dep",
      "foo": 2,
      "groupName": "some-group",
    },
  ],
}
`;
