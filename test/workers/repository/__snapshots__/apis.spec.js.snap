// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`migrateAndValidate returns empty config 1`] = `
Object {
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`workers/repository/apis checkForLerna(config) ignores zero length lerna 1`] = `Object {}`;

exports[`workers/repository/apis checkForLerna(config) implies lerna package path 1`] = `
Object {
  "lernaPackages": Array [
    "a",
    "b",
  ],
}
`;

exports[`workers/repository/apis checkForLerna(config) returns lerna package names 1`] = `
Object {
  "lernaPackages": Array [
    "a",
    "b",
  ],
}
`;

exports[`workers/repository/apis checkForLerna(config) swallows lerna 404 1`] = `Object {}`;

exports[`workers/repository/apis detectPackageFiles(config) adds package files to object 1`] = `
Array [
  "package.json",
  "backend/package.json",
]
`;

exports[`workers/repository/apis detectPackageFiles(config) defaults to package.json if found 1`] = `
Array [
  "package.json",
]
`;

exports[`workers/repository/apis detectPackageFiles(config) ignores node modules 1`] = `
Array [
  "package.json",
]
`;

exports[`workers/repository/apis detectPackageFiles(config) ignores node modules 2`] = `true`;

exports[`workers/repository/apis detectPackageFiles(config) ignores node modules 3`] = `
Array [
  Object {
    "depName": "packageFiles",
    "message": "Skipped package.json files found within node_modules subfolders: \`node_modules/backend/package.json\`",
  },
]
`;

exports[`workers/repository/apis initApis(config) throws if unknown platform 1`] = `"Unknown platform: foo"`;

exports[`workers/repository/apis mergeRenovateJson(config) returns error in JSON.parse 1`] = `
Array [
  Object {
    "depName": "renovate.json",
    "message": "Could not parse repository's renovate.json file",
  },
]
`;

exports[`workers/repository/apis mergeRenovateJson(config) returns error in config if renovate.json cannot be parsed 1`] = `
Array [
  Object {
    "depName": "renovate.json",
    "message": "Syntax error: expecting String near { enabled:",
  },
]
`;

exports[`workers/repository/apis mergeRenovateJson(config) returns error plus extended config if duplicate keys 1`] = `
Array [
  Object {
    "depName": "renovate.json",
    "message": "Syntax error: duplicated keys \\"enabled\\" near \\": false }",
  },
]
`;

exports[`workers/repository/apis mergeRenovateJson(config) returns warning + error plus extended config if unknown keys 1`] = `Array []`;

exports[`workers/repository/apis resolvePackageFiles includes files with content 1`] = `
Array [
  Object {
    "content": Object {},
    "errors": Array [],
    "hasPackageLock": true,
    "hasYarnLock": true,
    "npmrc": null,
    "packageFile": "package.json",
    "warnings": Array [],
    "yarnrc": null,
  },
  Object {
    "content": Object {},
    "hasPackageLock": false,
    "hasYarnLock": false,
    "npmrc": null,
    "packageFile": "a/package.json",
    "yarnrc": null,
  },
]
`;
