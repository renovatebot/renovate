// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`workers/package/versions .determineUpgrades(npmDep, config) disables major release separation (major) 1`] = `
Array [
  Object {
    "isPin": true,
    "newVersion": "0.4.4",
    "newVersionMajor": 0,
    "type": "pin",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.4.4",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) disables major release separation (minor) 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.0.0",
    "changeLogToVersion": "1.4.1",
    "isMinor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "minor",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) ignores pinning for ranges when other upgrade exists 1`] = `
Array [
  Object {
    "isPin": true,
    "newVersion": "0.9.7",
    "newVersionMajor": 0,
    "type": "pin",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.9.7",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) pins minor ranged versions 1`] = `
Array [
  Object {
    "isPin": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "type": "pin",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) rejects reverse ordered less than greater than 1`] = `
Array [
  Object {
    "message": "Complex semver ranges such as \\"<= 0.8.0 >= 0.5.0\\" are not yet supported so will be skipped",
    "type": "warning",
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) replaces major complex ranged versions if configured 1`] = `
Array [
  Object {
    "changeLogFromVersion": "2.7.0",
    "changeLogToVersion": "3.8.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "^3.0.0",
    "newVersionMajor": 3,
    "newVersionMinor": 8,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) replaces minor complex ranged versions if configured 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.3.0",
    "changeLogToVersion": "1.4.1",
    "isMinor": true,
    "isRange": true,
    "newVersion": "~1.4.0",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "minor",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) return warning if empty versions 1`] = `
Object {
  "message": "No versions returned from registry for this package",
  "type": "warning",
}
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) return warning if null versions 1`] = `
Object {
  "message": "No versions returned from registry for this package",
  "type": "warning",
}
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) returns both updates if automerging minor 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.4.4",
    "changeLogToVersion": "0.9.7",
    "isMinor": true,
    "newVersion": "0.9.7",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "isPin": true,
    "newVersion": "0.4.4",
    "newVersionMajor": 0,
    "type": "pin",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.4.4",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) returns minor update if separate patches not configured 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.9.0",
    "changeLogToVersion": "0.9.7",
    "isMinor": true,
    "newVersion": "0.9.7",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.9.0",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) returns only one update if automerging major 1`] = `
Array [
  Object {
    "isPin": true,
    "newVersion": "0.4.4",
    "newVersionMajor": 0,
    "type": "pin",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.4.4",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) returns only one update if grouping 1`] = `
Array [
  Object {
    "isPin": true,
    "newVersion": "0.4.4",
    "newVersionMajor": 0,
    "type": "pin",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.4.4",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) returns patch minor and major 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.8.0",
    "changeLogToVersion": "0.9.7",
    "isMinor": true,
    "newVersion": "0.9.7",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.8.0",
    "changeLogToVersion": "0.8.12",
    "isPatch": true,
    "newVersion": "0.8.12",
    "newVersionMajor": 0,
    "newVersionMinor": 8,
    "type": "patch",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.8.0",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) returns patch update if automerging patch 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.9.0",
    "changeLogToVersion": "0.9.7",
    "isPatch": true,
    "newVersion": "0.9.7",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "patch",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.9.0",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) returns patch update if separatePatchReleases 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.9.0",
    "changeLogToVersion": "0.9.7",
    "isPatch": true,
    "newVersion": "0.9.7",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "patch",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.9.0",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) returns warning if range not found 1`] = `
Array [
  Object {
    "message": "No satisfying version found for existing dependency range \\"^8.4.0\\"",
    "type": "warning",
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) should allow unstable versions if the current version is unstable 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.0.0-beta",
    "changeLogToVersion": "1.1.0-beta",
    "isMinor": true,
    "newVersion": "1.1.0-beta",
    "newVersionMajor": 1,
    "newVersionMinor": 1,
    "type": "minor",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) should downgrade from missing versions 1`] = `
Object {
  "branchName": "{{{branchPrefix}}}rollback-{{{depNameSanitized}}}-{{{newVersionMajor}}}.x",
  "isRollback": true,
  "newVersion": "1.16.0",
  "newVersionMajor": 1,
  "semanticCommitType": "fix",
  "type": "rollback",
  "unpublishable": false,
}
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) should treat zero zero caret ranges as pinned 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.0.34",
    "changeLogToVersion": "0.0.35",
    "isMinor": true,
    "isRange": true,
    "newVersion": "^0.0.35",
    "newVersionMajor": 0,
    "newVersionMinor": 0,
    "type": "minor",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) supports > latest versions if configured 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.4.1",
    "changeLogToVersion": "2.0.3",
    "isMajor": true,
    "newVersion": "2.0.3",
    "newVersionMajor": 2,
    "newVersionMinor": 0,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) supports complex major hyphen ranges 1`] = `
Array [
  Object {
    "changeLogFromVersion": "2.7.0",
    "changeLogToVersion": "3.8.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "1.x - 3.x",
    "newVersionMajor": 3,
    "newVersionMinor": 8,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) supports complex major ranges 1`] = `
Array [
  Object {
    "changeLogFromVersion": "2.7.0",
    "changeLogToVersion": "3.8.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "^1.0.0 || ^2.0.0 || ^3.0.0",
    "newVersionMajor": 3,
    "newVersionMinor": 8,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) supports complex ranges 1`] = `
Object {
  "changeLogFromVersion": "0.8.12",
  "changeLogToVersion": "0.9.7",
  "isMinor": true,
  "isRange": true,
  "newVersion": "^0.7.0 || ^0.8.0 || ^0.9.0",
  "newVersionMajor": 0,
  "newVersionMinor": 9,
  "type": "minor",
  "unpublishable": false,
}
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) supports complex tilde ranges 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.3.0",
    "changeLogToVersion": "1.4.1",
    "isMinor": true,
    "isRange": true,
    "newVersion": "~1.2.0 || ~1.3.0 || ~1.4.0",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "minor",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) supports future versions if already future 1`] = `
Array [
  Object {
    "isPin": true,
    "newVersion": "2.0.3",
    "newVersionMajor": 2,
    "type": "pin",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) supports minor and major upgrades for ranged versions 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.4.4",
    "changeLogToVersion": "0.9.7",
    "isMinor": true,
    "newVersion": "0.9.7",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "isPin": true,
    "newVersion": "0.4.4",
    "newVersionMajor": 0,
    "type": "pin",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.4.4",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) supports minor and major upgrades for tilde ranges 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.4.4",
    "changeLogToVersion": "0.9.7",
    "isMinor": true,
    "newVersion": "0.9.7",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "isPin": true,
    "newVersion": "0.4.4",
    "newVersionMajor": 0,
    "type": "pin",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.4.4",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades .x major ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.9.7",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "1.x",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades .x minor ranges 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.3.0",
    "changeLogToVersion": "1.4.1",
    "isMinor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "isPin": true,
    "newVersion": "1.3.0",
    "newVersionMajor": 1,
    "type": "pin",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades .x minor ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.3.0",
    "changeLogToVersion": "1.4.1",
    "isMinor": true,
    "isRange": true,
    "newVersion": "1.4.x",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "minor",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades less than equal ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.7.2",
    "changeLogToVersion": "0.9.7",
    "isMinor": true,
    "isRange": true,
    "newVersion": "<= 0.9.7",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.7.2",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "<= 1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades less than ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.7.1",
    "changeLogToVersion": "0.9.7",
    "isMinor": true,
    "isRange": true,
    "newVersion": "< 0.9.8",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.7.1",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "< 1.4.2",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades major greater than less than ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.9.7",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": ">= 0.5.0 < 2.0.0",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades major less than equal ranges 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.0.0",
    "changeLogToVersion": "1.4.1",
    "isMinor": true,
    "isRange": true,
    "newVersion": "<= 2.0.0",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "minor",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades major less than ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.9.7",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "< 2.0.0",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades minor greater than less than equals ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.8.0",
    "changeLogToVersion": "0.9.7",
    "isMinor": true,
    "isRange": true,
    "newVersion": ">= 0.5.0 <= 0.10.0",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.8.0",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": ">= 0.5.0 <= 1.5.0",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades minor greater than less than ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.7.2",
    "changeLogToVersion": "0.9.7",
    "isMinor": true,
    "isRange": true,
    "newVersion": ">= 0.5.0 < 0.10.0",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.7.2",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": ">= 0.5.0 < 1.5.0",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades minor ranged versions 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.0.1",
    "changeLogToVersion": "1.4.1",
    "isMinor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "isPin": true,
    "newVersion": "1.0.1",
    "newVersionMajor": 1,
    "type": "pin",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades multiple caret ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.7.2",
    "changeLogToVersion": "0.9.7",
    "isMinor": true,
    "isRange": true,
    "newVersion": "^0.9.0",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.7.2",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "^1.0.0",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades multiple tilde ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.7.2",
    "changeLogToVersion": "0.9.7",
    "isMinor": true,
    "isRange": true,
    "newVersion": "~0.9.0",
    "newVersionMajor": 0,
    "newVersionMinor": 9,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "changeLogFromVersion": "0.7.2",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "~1.4.0",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades shorthand major ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "0.9.7",
    "changeLogToVersion": "1.4.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades shorthand minor ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.3.0",
    "changeLogToVersion": "1.4.1",
    "isMinor": true,
    "isRange": true,
    "newVersion": "1.4",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "minor",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades tilde ranges 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.3.0",
    "changeLogToVersion": "1.4.1",
    "isMinor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "isPin": true,
    "newVersion": "1.3.0",
    "newVersionMajor": 1,
    "type": "pin",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) upgrades tilde ranges without pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.3.0",
    "changeLogToVersion": "1.4.1",
    "isMinor": true,
    "isRange": true,
    "newVersion": "~1.4.0",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "minor",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) uses the locked version for pinning 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.0.0",
    "changeLogToVersion": "1.4.1",
    "isMinor": true,
    "newVersion": "1.4.1",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "minor",
    "unpublishable": false,
  },
  Object {
    "isPin": true,
    "newVersion": "1.0.0",
    "newVersionMajor": 1,
    "type": "pin",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) widens .x OR ranges 1`] = `
Array [
  Object {
    "changeLogFromVersion": "2.7.0",
    "changeLogToVersion": "3.8.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "1.x || 2.x || 3.x",
    "newVersionMajor": 3,
    "newVersionMinor": 8,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) widens major ranged versions if configured 1`] = `
Array [
  Object {
    "changeLogFromVersion": "2.7.0",
    "changeLogToVersion": "3.8.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "^2.0.0 || ^3.0.0",
    "newVersionMajor": 3,
    "newVersionMinor": 8,
    "type": "major",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) widens minor ranged versions if configured 1`] = `
Array [
  Object {
    "changeLogFromVersion": "1.3.0",
    "changeLogToVersion": "1.4.1",
    "isMinor": true,
    "isRange": true,
    "newVersion": "~1.3.0 || ~1.4.0",
    "newVersionMajor": 1,
    "newVersionMinor": 4,
    "type": "minor",
    "unpublishable": false,
  },
]
`;

exports[`workers/package/versions .determineUpgrades(npmDep, config) widens stanndalone major OR ranges 1`] = `
Array [
  Object {
    "changeLogFromVersion": "2.7.0",
    "changeLogToVersion": "3.8.1",
    "isMajor": true,
    "isRange": true,
    "newVersion": "1 || 2 || 3",
    "newVersionMajor": 3,
    "newVersionMinor": 8,
    "type": "major",
    "unpublishable": false,
  },
]
`;
