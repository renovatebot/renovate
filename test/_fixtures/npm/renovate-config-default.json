{"_id":"renovate-config-default","_rev":"5-85834d9ed1694c1051bf884347d7b046","name":"renovate-config-default","description":"Default preset configs for Renovate","dist-tags":{"latest":"0.0.4"},"versions":{"0.0.0":{"name":"renovate-config-default","description":"Default preset configs for Renovate","author":{"name":"Rhys Arkins","email":"rhys@arkins.net"},"license":"MIT","homepage":"https://github.com/singapore/renovate-config","repository":{"type":"git","url":"git+https://rarkins@github.com/singapore/renovate-config.git"},"bugs":{"url":"https://github.com/singapore/renovate-config/issues"},"version":"0.0.0","scripts":{"np":"np","pretty":"prettier-package-json --write ./package.json"},"devDependencies":{"np":"2.16.0","prettier-package-json":"1.4.0"},"renovate-config":{"enableRenovate":{"description":"Enable renovate","enabled":true},"disableRenovate":{"description":"Disable renovate","enabled":false},"scheduleMondayMornings":{"description":"Schedule to run Mondays before 5am","schedule":"On mondays before 5am"},"includeNodeModules":{"description":"Include <code>package.json</code> files found within <code>node_modules</code> folders","ignoreNodeModules":false},"pinVersions":{"description":"Use version pinning (maintain a single version only and not semver ranges)","pinVersions":true},"preserveSemverRanges":{"description":"Preserve (but continue to upgrade) any existing semver ranges","pinVersions":false},"pinOnlyDevDependencies":{"description":"Pin dependency versions for <code>devDependencies</code> and retain semver ranges for others","dependencies":{"extends":":preserveSemverRanges"},"devDependencies":{"extends":":pinVersions"},"optionalDependencies":{"extends":":preserveSemverRanges"},"peerDependencies":{"extends":":preserveSemverRanges"}},"separateMajorReleases":{"description":"Separate major versions of dependencies into individual branches/PRs","separateMajorReleases":true},"separatePatchReleases":{"description":"Separate patch and minor releases of dependencies into separate PRs","separatePatchReleases":true},"combinePatchMinorReleases":{"description":"Use the same branch/PR for both patch and minor upgrades of a dependency","separatePatchReleases":false},"renovatePrefix":{"description":"Use <code>renovate/</code> as prefix for all branch names","branchprefix":"renovate/"},"semanticPrefixChore":{"description":"Use <code>chore(deps):</code> as semantic prefix for commit messages and PR titles","semanticPrefix":"chore(deps):"},"semanticPrefixFix":{"description":"Use <code>fix(deps):</code> as semantic prefix for commit messages and PR titles","semanticPrefix":"fix(deps):"},"disablePeerDependencies":{"description":"Do not renovate <code>peerDependencies</code> versions/ranges","peerDependencies":{"enabled":false}},"semanticPrefixFixDepsChoreOthers":{"description":"If semantic commits detected, use <code>fix(deps):</code> for dependencies and <code>chore(deps):</code> for all others","dependencies":{"extends":":semanticPrefixFix"},"devDependencies":{"extends":":semanticPrefixChore"},"optionalDependencies":{"extends":":semanticPrefixChore"},"peerDependencies":{"extends":":semanticPrefixChore"}},"unpublishSafe":{"description":"Set a status check to warn when upgrades <  24 hours old might get unpublished","unpublishSafe":true},"unpublishSafeDisabled":{"description":"Create branches/PRs for dependency upgrades as soon as they're available","unpublishSafe":false},"prImmediately":{"description":"Raise PRs immediately (after branch is created)","prCreation":"immediate"},"prNotPending":{"description":"Wait until branch tests have passed or failed before creating the PR","prCreation":"not-pending"},"automergeDisabled":{"description":"Do not automerge any upgrades - wait for humans to merge PRs","automerge":"none"},"automergePatch":{"description":"Automerge patch upgrades if they pass tests","automerge":"patch"},"automergeMinor":{"description":"Automerge patch or minor upgrades if they pass tests","automerge":"minor"},"automergeMajor":{"description":"Automerge all upgrades (inluding major) if they pass tests","automerge":"any"},"automergeBranchMergeCommit":{"description":"If automerging, perform a merge-commit on branch (no PR)","automergeType":"branch-merge-commit"},"automergeBranchPush":{"description":"If automerging, push the new commit directly to base branch (no PR)","automergeType":"branch-push"},"automergePr":{"description":"Raise a PR first before any automerging","automergeType":"pr"},"automergeRequireAllStatusChecks":{"description":"Require all status checks to pass before any automerging","requiredStatusChecks":[]},"maintainLockFilesDisabled":{"description":"Update existing lock files only when <code>package.json</code> is modified","lockFileMaintenance":{"enabled":false}},"maintainLockFilesWeekly":{"description":"Run lock file maintenance (updates) early Monday mornings","lockFileMaintenance":{"enabled":true,"extends":":scheduleMondayMornings"}},"ignoreUnstable":{"description":"Only upgrade to stable npm versions","ignoreUnstable":true},"respectLatest":{"description":"Do not upgrade versions past the \"latest\" tag in npm registry","respectLatest":true},"automergeLinters":{"description":"Update lint packages automatically if tests pass","packageRules":[{"extends":["packages:linters"],"automerge":"any"}]},"doNotPinPackage":{"description":"Disable version pinning for <code>{{arg0}}</code>","packageRules":[{"packageNames":["{{arg0}}"],"pinVersions":false}]},"group":{"description":"Group {{arg1}} packages into same branch/PR","packageRules":[{"extends":["{{arg0}}"],"groupName":"{{arg1}}"}]},"base":{"description":"Default base configuration for repositories","extends":[":separateMajorReleases",":combinePatchMinorReleases",":ignoreUnstable",":respectLatest",":unpublishSafeDisabled",":prNotPending",":renovatePrefix",":semanticPrefixFixDepsChoreOthers",":automergeDisabled",":maintainLockFilesDisabled"]},"app":{"description":"Default configuration for webapps","extends":[":pinVersions",":base"]},"library":{"description":"Default configuration for libraries","extends":[":pinOnlyDevDependencies",":base"]}},"_id":"renovate-config-default@0.0.0","_npmVersion":"5.3.0","_nodeVersion":"6.11.1","_npmUser":{"name":"rarkins","email":"rhys@keylocation.sg"},"dist":{"integrity":"sha512-ajKx6jy0PecwxQa2UrR3PXmHMYBbPc2l4qVXOzshC5tWe5KKVA5/ny1Yjv5rTBJ62xuUh2d6ikXd0qeYeKOfqQ==","shasum":"5b88bf0c205b72579098926cf338c53271e97455","tarball":"https://registry.npmjs.org/renovate-config-default/-/renovate-config-default-0.0.0.tgz"},"maintainers":[{"name":"rarkins","email":"rhys@keylocation.sg"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/renovate-config-default-0.0.0.tgz_1502884367812_0.5453649370465428"},"directories":{}},"0.0.1":{"name":"renovate-config-default","description":"Default preset configs for Renovate","author":{"name":"Rhys Arkins","email":"rhys@arkins.net"},"license":"MIT","homepage":"https://github.com/singapore/renovate-config","repository":{"type":"git","url":"git+https://rarkins@github.com/singapore/renovate-config.git"},"bugs":{"url":"https://github.com/singapore/renovate-config/issues"},"version":"0.0.1","scripts":{"np":"np","pretty":"prettier-package-json --write ./package.json"},"devDependencies":{"np":"2.16.0","prettier-package-json":"1.4.0"},"renovate-config":{"enableRenovate":{"description":"Enable renovate","enabled":true},"disableRenovate":{"description":"Disable renovate","enabled":false},"scheduleMondayMornings":{"description":"Schedule to run Mondays before 5am","schedule":"On mondays before 5am"},"includeNodeModules":{"description":"Include <code>package.json</code> files found within <code>node_modules</code> folders","ignoreNodeModules":false},"pinVersions":{"description":"Use version pinning (maintain a single version only and not semver ranges)","pinVersions":true},"preserveSemverRanges":{"description":"Preserve (but continue to upgrade) any existing semver ranges","pinVersions":false},"pinOnlyDevDependencies":{"description":"Pin dependency versions for <code>devDependencies</code> and retain semver ranges for others","dependencies":{"extends":":preserveSemverRanges"},"devDependencies":{"extends":":pinVersions"},"optionalDependencies":{"extends":":preserveSemverRanges"},"peerDependencies":{"extends":":preserveSemverRanges"}},"separateMajorReleases":{"description":"Separate major versions of dependencies into individual branches/PRs","separateMajorReleases":true},"separatePatchReleases":{"description":"Separate patch and minor releases of dependencies into separate PRs","separatePatchReleases":true},"combinePatchMinorReleases":{"description":"Use the same branch/PR for both patch and minor upgrades of a dependency","separatePatchReleases":false},"renovatePrefix":{"description":"Use <code>renovate/</code> as prefix for all branch names","branchprefix":"renovate/"},"semanticPrefixChore":{"description":"Use <code>chore(deps):</code> as semantic prefix for commit messages and PR titles","semanticPrefix":"chore(deps):"},"semanticPrefixFix":{"description":"Use <code>fix(deps):</code> as semantic prefix for commit messages and PR titles","semanticPrefix":"fix(deps):"},"disablePeerDependencies":{"description":"Do not renovate <code>peerDependencies</code> versions/ranges","peerDependencies":{"enabled":false}},"semanticPrefixFixDepsChoreOthers":{"description":"If semantic commits detected, use <code>fix(deps):</code> for dependencies and <code>chore(deps):</code> for all others","dependencies":{"extends":":semanticPrefixFix"},"devDependencies":{"extends":":semanticPrefixChore"},"optionalDependencies":{"extends":":semanticPrefixChore"},"peerDependencies":{"extends":":semanticPrefixChore"}},"unpublishSafe":{"description":"Set a status check to warn when upgrades <  24 hours old might get unpublished","unpublishSafe":true},"unpublishSafeDisabled":{"description":"Create branches/PRs for dependency upgrades as soon as they're available","unpublishSafe":false},"prImmediately":{"description":"Raise PRs immediately (after branch is created)","prCreation":"immediate"},"prNotPending":{"description":"Wait until branch tests have passed or failed before creating the PR","prCreation":"not-pending"},"automergeDisabled":{"description":"Do not automerge any upgrades - wait for humans to merge PRs","automerge":"none"},"automergePatch":{"description":"Automerge patch upgrades if they pass tests","automerge":"patch"},"automergeMinor":{"description":"Automerge patch or minor upgrades if they pass tests","automerge":"minor"},"automergeMajor":{"description":"Automerge all upgrades (inluding major) if they pass tests","automerge":"any"},"automergeBranchMergeCommit":{"description":"If automerging, perform a merge-commit on branch (no PR)","automergeType":"branch-merge-commit"},"automergeBranchPush":{"description":"If automerging, push the new commit directly to base branch (no PR)","automergeType":"branch-push"},"automergePr":{"description":"Raise a PR first before any automerging","automergeType":"pr"},"automergeRequireAllStatusChecks":{"description":"Require all status checks to pass before any automerging","requiredStatusChecks":[]},"maintainLockFilesDisabled":{"description":"Update existing lock files only when <code>package.json</code> is modified","lockFileMaintenance":{"enabled":false}},"maintainLockFilesWeekly":{"description":"Run lock file maintenance (updates) early Monday mornings","lockFileMaintenance":{"enabled":true,"extends":":scheduleMondayMornings"}},"ignoreUnstable":{"description":"Only upgrade to stable npm versions","ignoreUnstable":true},"respectLatest":{"description":"Do not upgrade versions past the \"latest\" tag in npm registry","respectLatest":true},"automergeLinters":{"description":"Update lint packages automatically if tests pass","packageRules":[{"extends":["packages:linters"],"automerge":"any"}]},"doNotPinPackage":{"description":"Disable version pinning for <code>{{arg0}}</code>","packageRules":[{"packageNames":["{{arg0}}"],"pinVersions":false}]},"group":{"description":"Group {{arg1}} packages into same branch/PR","packageRules":[{"extends":["{{arg0}}"],"groupName":"{{arg1}}"}]},"base":{"description":"Default base configuration for repositories","extends":[":separateMajorReleases",":combinePatchMinorReleases",":ignoreUnstable",":respectLatest",":unpublishSafeDisabled",":prNotPending",":renovatePrefix",":semanticPrefixFixDepsChoreOthers",":automergeDisabled",":maintainLockFilesDisabled"]},"app":{"description":"Default configuration for webapps","extends":[":pinVersions",":base"]},"library":{"description":"Default configuration for libraries","extends":[":pinOnlyDevDependencies",":base"]}},"_id":"renovate-config-default@0.0.1","_npmVersion":"5.3.0","_nodeVersion":"6.11.1","_npmUser":{"name":"rarkins","email":"rhys@keylocation.sg"},"dist":{"integrity":"sha512-FWr3t/2hO5LEP2SvAFCpGh753jNK01aJf8kyhsRlfCSrvJVajh26ArVm/lKj2FmfKTV6F8ddLyYXxp05s+j/kQ==","shasum":"cb64e8980f499325d3a58fb43d35527866ab1639","tarball":"https://registry.npmjs.org/renovate-config-default/-/renovate-config-default-0.0.1.tgz"},"maintainers":[{"name":"rarkins","email":"rhys@keylocation.sg"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/renovate-config-default-0.0.1.tgz_1502884421840_0.5322694149799645"},"directories":{}},"0.0.2":{"name":"renovate-config-default","description":"Default preset configs for Renovate","author":{"name":"Rhys Arkins","email":"rhys@arkins.net"},"license":"MIT","homepage":"https://github.com/singapore/renovate-config","repository":{"type":"git","url":"git+https://rarkins@github.com/singapore/renovate-config.git"},"bugs":{"url":"https://github.com/singapore/renovate-config/issues"},"version":"0.0.2","scripts":{"np":"np","pretty":"prettier-package-json --write ./package.json"},"devDependencies":{"np":"2.16.0","prettier-package-json":"1.4.0"},"renovate-config":{"enableRenovate":{"description":"Enable renovate","enabled":true},"disableRenovate":{"description":"Disable renovate","enabled":false},"includeNodeModules":{"description":"Include <code>package.json</code> files found within <code>node_modules</code> folders","ignoreNodeModules":false},"pinVersions":{"description":"Use version pinning (maintain a single version only and not semver ranges)","pinVersions":true},"preserveSemverRanges":{"description":"Preserve (but continue to upgrade) any existing semver ranges","pinVersions":false},"pinOnlyDevDependencies":{"description":"Pin dependency versions for <code>devDependencies</code> and retain semver ranges for others","dependencies":{"extends":":preserveSemverRanges"},"devDependencies":{"extends":":pinVersions"},"optionalDependencies":{"extends":":preserveSemverRanges"},"peerDependencies":{"extends":":preserveSemverRanges"}},"separateMajorReleases":{"description":"Separate major versions of dependencies into individual branches/PRs","separateMajorReleases":true},"separatePatchReleases":{"description":"Separate patch and minor releases of dependencies into separate PRs","separatePatchReleases":true},"combinePatchMinorReleases":{"description":"Use the same branch/PR for both patch and minor upgrades of a dependency","separatePatchReleases":false},"renovatePrefix":{"description":"Use <code>renovate/</code> as prefix for all branch names","branchprefix":"renovate/"},"semanticPrefixChore":{"description":"Use <code>chore(deps):</code> as semantic prefix for commit messages and PR titles","semanticPrefix":"chore(deps):"},"semanticPrefixFix":{"description":"Use <code>fix(deps):</code> as semantic prefix for commit messages and PR titles","semanticPrefix":"fix(deps):"},"disablePeerDependencies":{"description":"Do not renovate <code>peerDependencies</code> versions/ranges","peerDependencies":{"enabled":false}},"semanticPrefixFixDepsChoreOthers":{"description":"If semantic commits detected, use <code>fix(deps):</code> for dependencies and <code>chore(deps):</code> for all others","dependencies":{"extends":":semanticPrefixFix"},"devDependencies":{"extends":":semanticPrefixChore"},"optionalDependencies":{"extends":":semanticPrefixChore"},"peerDependencies":{"extends":":semanticPrefixChore"}},"unpublishSafe":{"description":"Set a status check to warn when upgrades <  24 hours old might get unpublished","unpublishSafe":true},"unpublishSafeDisabled":{"description":"Create branches/PRs for dependency upgrades as soon as they're available","unpublishSafe":false},"prImmediately":{"description":"Raise PRs immediately (after branch is created)","prCreation":"immediate"},"prNotPending":{"description":"Wait until branch tests have passed or failed before creating the PR","prCreation":"not-pending"},"automergeDisabled":{"description":"Do not automerge any upgrades - wait for humans to merge PRs","automerge":"none"},"automergePatch":{"description":"Automerge patch upgrades if they pass tests","automerge":"patch"},"automergeMinor":{"description":"Automerge patch or minor upgrades if they pass tests","automerge":"minor"},"automergeMajor":{"description":"Automerge all upgrades (inluding major) if they pass tests","automerge":"any"},"automergeBranchMergeCommit":{"description":"If automerging, perform a merge-commit on branch (no PR)","automergeType":"branch-merge-commit"},"automergeBranchPush":{"description":"If automerging, push the new commit directly to base branch (no PR)","automergeType":"branch-push"},"automergePr":{"description":"Raise a PR first before any automerging","automergeType":"pr"},"automergeRequireAllStatusChecks":{"description":"Require all status checks to pass before any automerging","requiredStatusChecks":[]},"maintainLockFilesDisabled":{"description":"Update existing lock files only when <code>package.json</code> is modified","lockFileMaintenance":{"enabled":false}},"maintainLockFilesWeekly":{"description":"Run lock file maintenance (updates) early Monday mornings","lockFileMaintenance":{"enabled":true,"extends":"schedule:weekly"}},"ignoreUnstable":{"description":"Only upgrade to stable npm versions","ignoreUnstable":true},"respectLatest":{"description":"Do not upgrade versions past the \"latest\" tag in npm registry","respectLatest":true},"automergeLinters":{"description":"Update lint packages automatically if tests pass","packageRules":[{"extends":["packages:linters"],"automerge":"any"}]},"doNotPinPackage":{"description":"Disable version pinning for <code>{{arg0}}</code>","packageRules":[{"packageNames":["{{arg0}}"],"pinVersions":false}]},"group":{"description":"Group {{arg1}} packages into same branch/PR","packageRules":[{"extends":["{{arg0}}"],"groupName":"{{arg1}}"}]},"base":{"description":"Default base configuration for repositories","extends":[":separateMajorReleases",":combinePatchMinorReleases",":ignoreUnstable",":respectLatest",":unpublishSafeDisabled",":prNotPending",":renovatePrefix",":semanticPrefixFixDepsChoreOthers",":automergeDisabled",":maintainLockFilesDisabled"]},"app":{"description":"Default configuration for webapps","extends":[":pinVersions",":base"]},"library":{"description":"Default configuration for libraries","extends":[":pinOnlyDevDependencies",":base"]}},"_id":"renovate-config-default@0.0.2","_npmVersion":"5.3.0","_nodeVersion":"6.11.1","_npmUser":{"name":"rarkins","email":"rhys@keylocation.sg"},"dist":{"integrity":"sha512-Qx+vAf/loaTujA7u+DNonQ5zyPMTSC5S8pCrPxaLQbOV3Mzv3DQUQXp550H+padRHERTvRxuiiX3vN94Md4KHQ==","shasum":"fada826a1fb4a4822279ea1b3c82f527a3bf9c8b","tarball":"https://registry.npmjs.org/renovate-config-default/-/renovate-config-default-0.0.2.tgz"},"maintainers":[{"name":"rarkins","email":"rhys@keylocation.sg"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/renovate-config-default-0.0.2.tgz_1503041691583_0.6433005328290164"},"directories":{}},"0.0.3":{"name":"renovate-config-default","description":"Default preset configs for Renovate","author":{"name":"Rhys Arkins","email":"rhys@arkins.net"},"license":"MIT","homepage":"https://github.com/singapore/renovate-config","repository":{"type":"git","url":"git+https://rarkins@github.com/singapore/renovate-config.git"},"bugs":{"url":"https://github.com/singapore/renovate-config/issues"},"version":"0.0.3","scripts":{"pretty":"prettier-package-json --write ./package.json"},"devDependencies":{"prettier-package-json":"1.4.0"},"renovate-config":{"enableRenovate":{"description":"Enable renovate","enabled":true},"disableRenovate":{"description":"Disable renovate","enabled":false},"includeNodeModules":{"description":"Include <code>package.json</code> files found within <code>node_modules</code> folders","ignoreNodeModules":false},"pinVersions":{"description":"Use version pinning (maintain a single version only and not semver ranges)","pinVersions":true},"preserveSemverRanges":{"description":"Preserve (but continue to upgrade) any existing semver ranges","pinVersions":false},"pinOnlyDevDependencies":{"description":"Pin dependency versions for <code>devDependencies</code> and retain semver ranges for others","dependencies":{"extends":":preserveSemverRanges"},"devDependencies":{"extends":":pinVersions"},"optionalDependencies":{"extends":":preserveSemverRanges"},"peerDependencies":{"extends":":preserveSemverRanges"}},"separateMajorReleases":{"description":"Separate major versions of dependencies into individual branches/PRs","separateMajorReleases":true},"separatePatchReleases":{"description":"Separate patch and minor releases of dependencies into separate PRs","separatePatchReleases":true},"combinePatchMinorReleases":{"description":"Use the same branch/PR for both patch and minor upgrades of a dependency","separatePatchReleases":false},"renovatePrefix":{"description":"Use <code>renovate/</code> as prefix for all branch names","branchprefix":"renovate/"},"semanticPrefixChore":{"description":"Use <code>chore(deps):</code> as semantic prefix for commit messages and PR titles","semanticPrefix":"chore(deps):"},"semanticPrefixFix":{"description":"Use <code>fix(deps):</code> as semantic prefix for commit messages and PR titles","semanticPrefix":"fix(deps):"},"disablePeerDependencies":{"description":"Do not renovate <code>peerDependencies</code> versions/ranges","peerDependencies":{"enabled":false}},"semanticPrefixFixDepsChoreOthers":{"description":"If semantic commits detected, use <code>fix(deps):</code> for dependencies and <code>chore(deps):</code> for all others","dependencies":{"extends":":semanticPrefixFix"},"devDependencies":{"extends":":semanticPrefixChore"},"optionalDependencies":{"extends":":semanticPrefixChore"},"peerDependencies":{"extends":":semanticPrefixChore"}},"unpublishSafe":{"description":"Set a status check to warn when upgrades <  24 hours old might get unpublished","unpublishSafe":true},"unpublishSafeDisabled":{"description":"Create branches/PRs for dependency upgrades as soon as they're available","unpublishSafe":false},"prImmediately":{"description":"Raise PRs immediately (after branch is created)","prCreation":"immediate"},"prNotPending":{"description":"Wait until branch tests have passed or failed before creating the PR","prCreation":"not-pending"},"automergeDisabled":{"description":"Disable automerging feature - wait for humans to merge all PRs","automerge":"none"},"automergePatch":{"description":"Automerge patch upgrades if they pass tests","automerge":"patch"},"automergeMinor":{"description":"Automerge patch or minor upgrades if they pass tests","automerge":"minor"},"automergeMajor":{"description":"Automerge all upgrades (inluding major) if they pass tests","automerge":"any"},"automergeBranchMergeCommit":{"description":"If automerging, perform a merge-commit on branch (no PR)","automergeType":"branch-merge-commit"},"automergeBranchPush":{"description":"If automerging, push the new commit directly to base branch (no PR)","automergeType":"branch-push"},"automergePr":{"description":"Raise a PR first before any automerging","automergeType":"pr"},"automergeRequireAllStatusChecks":{"description":"Require all status checks to pass before any automerging","requiredStatusChecks":[]},"maintainLockFilesDisabled":{"description":"Update existing lock files only when <code>package.json</code> is modified","lockFileMaintenance":{"enabled":false}},"maintainLockFilesWeekly":{"description":"Run lock file maintenance (updates) early Monday mornings","lockFileMaintenance":{"enabled":true,"extends":"schedule:weekly"}},"ignoreUnstable":{"description":"Only upgrade to stable npm versions","ignoreUnstable":true},"respectLatest":{"description":"Upgrade versions up to the \"latest\" tag in npm registry","respectLatest":true},"automergeLinters":{"description":"Update lint packages automatically if tests pass","packageRules":[{"extends":["packages:linters"],"automerge":"any"}]},"doNotPinPackage":{"description":"Disable version pinning for <code>{{arg0}}</code>","packageRules":[{"packageNames":["{{arg0}}"],"pinVersions":false}]},"group":{"description":"Group {{arg1}} packages into same branch/PR","packageRules":[{"extends":["{{arg0}}"],"groupName":"{{arg1}}"}]},"base":{"description":"Default base configuration for repositories","extends":[":separateMajorReleases",":combinePatchMinorReleases",":ignoreUnstable",":respectLatest",":unpublishSafeDisabled",":prNotPending",":renovatePrefix",":semanticPrefixFixDepsChoreOthers",":automergeDisabled",":maintainLockFilesDisabled"]},"app":{"description":"Default configuration for webapps","extends":[":pinVersions",":base"]},"library":{"description":"Default configuration for libraries","extends":[":pinOnlyDevDependencies",":base"]}},"_id":"renovate-config-default@0.0.3","_npmVersion":"5.3.0","_nodeVersion":"6.11.1","_npmUser":{"name":"rarkins","email":"rhys@keylocation.sg"},"dist":{"integrity":"sha512-EWaS0Mf1lOBLsbSTLjcbhLNSDhBtk1ljFP77sVHFLmnjYQc/RmhhSn2d1lce4tKXTV9da8YZBaz/mov5IgEdfw==","shasum":"a2917b6a7451daef1bd8598f10c558ff54cad168","tarball":"https://registry.npmjs.org/renovate-config-default/-/renovate-config-default-0.0.3.tgz"},"maintainers":[{"name":"rarkins","email":"rhys@keylocation.sg"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/renovate-config-default-0.0.3.tgz_1503046336915_0.7909344027284533"},"directories":{}},"0.0.4":{"name":"renovate-config-default","description":"Default preset configs for Renovate","author":{"name":"Rhys Arkins","email":"rhys@arkins.net"},"license":"MIT","homepage":"https://github.com/singapore/renovate-config","repository":{"type":"git","url":"git+https://rarkins@github.com/singapore/renovate-config.git"},"bugs":{"url":"https://github.com/singapore/renovate-config/issues"},"version":"0.0.4","scripts":{"pretty":"prettier-package-json --write ./package.json"},"devDependencies":{"prettier-package-json":"1.4.0"},"renovate-config":{"enableRenovate":{"description":"Enable renovate","enabled":true},"disableRenovate":{"description":"Disable renovate","enabled":false},"includeNodeModules":{"description":"Include <code>package.json</code> files found within <code>node_modules</code> folders","ignoreNodeModules":false},"pinVersions":{"description":"Use version pinning (maintain a single version only and not semver ranges)","pinVersions":true},"preserveSemverRanges":{"description":"Preserve (but continue to upgrade) any existing semver ranges","pinVersions":false},"pinOnlyDevDependencies":{"description":"Pin dependency versions for <code>devDependencies</code> and retain semver ranges for others","dependencies":{"extends":":preserveSemverRanges"},"devDependencies":{"extends":":pinVersions"},"optionalDependencies":{"extends":":preserveSemverRanges"},"peerDependencies":{"extends":":preserveSemverRanges"}},"separateMajorReleases":{"description":"Separate major versions of dependencies into individual branches/PRs","separateMajorReleases":true},"separatePatchReleases":{"description":"Separate patch and minor releases of dependencies into separate PRs","separatePatchReleases":true},"combinePatchMinorReleases":{"description":"Use the same branch/PR for both patch and minor upgrades of a dependency","separatePatchReleases":false},"renovatePrefix":{"description":"Use <code>renovate/</code> as prefix for all branch names","branchprefix":"renovate/"},"semanticPrefixChore":{"description":"Use <code>chore(deps):</code> as semantic prefix for commit messages and PR titles","semanticPrefix":"chore(deps):"},"semanticPrefixFix":{"description":"Use <code>fix(deps):</code> as semantic prefix for commit messages and PR titles","semanticPrefix":"fix(deps):"},"disablePeerDependencies":{"description":"Do not renovate <code>peerDependencies</code> versions/ranges","peerDependencies":{"enabled":false}},"semanticPrefixFixDepsChoreOthers":{"description":"If semantic commits detected, use <code>fix(deps):</code> for dependencies and <code>chore(deps):</code> for all others","dependencies":{"extends":":semanticPrefixFix"},"devDependencies":{"extends":":semanticPrefixChore"},"optionalDependencies":{"extends":":semanticPrefixChore"},"peerDependencies":{"extends":":semanticPrefixChore"}},"unpublishSafe":{"description":"Set a status check to warn when upgrades <  24 hours old might get unpublished","unpublishSafe":true},"unpublishSafeDisabled":{"description":"Create branches/PRs for dependency upgrades as soon as they're available","unpublishSafe":false},"prImmediately":{"description":"Raise PRs immediately (after branch is created)","prCreation":"immediate"},"prNotPending":{"description":"Wait until branch tests have passed or failed before creating the PR","prCreation":"not-pending"},"automergeDisabled":{"description":"Disable automerging feature - wait for humans to merge all PRs","automerge":false},"automergePatch":{"description":"Automerge patch upgrades if they pass tests","patch":{"automerge":true}},"automergeMinor":{"description":"Automerge patch or minor upgrades if they pass tests","minor":{"automerge":true}},"automergeMajor":{"description":"Automerge all upgrades (inluding major) if they pass tests","automerge":true},"automergeBranchMergeCommit":{"description":"If automerging, perform a merge-commit on branch (no PR)","automergeType":"branch-merge-commit"},"automergeBranchPush":{"description":"If automerging, push the new commit directly to base branch (no PR)","automergeType":"branch-push"},"automergePr":{"description":"Raise a PR first before any automerging","automergeType":"pr"},"automergeRequireAllStatusChecks":{"description":"Require all status checks to pass before any automerging","requiredStatusChecks":[]},"maintainLockFilesDisabled":{"description":"Update existing lock files only when <code>package.json</code> is modified","lockFileMaintenance":{"enabled":false}},"maintainLockFilesWeekly":{"description":"Run lock file maintenance (updates) early Monday mornings","lockFileMaintenance":{"enabled":true,"extends":"schedule:weekly"}},"ignoreUnstable":{"description":"Only upgrade to stable npm versions","ignoreUnstable":true},"respectLatest":{"description":"Upgrade versions up to the \"latest\" tag in npm registry","respectLatest":true},"automergeLinters":{"description":"Update lint packages automatically if tests pass","packageRules":[{"extends":["packages:linters"],"automerge":true}]},"doNotPinPackage":{"description":"Disable version pinning for <code>{{arg0}}</code>","packageRules":[{"packageNames":["{{arg0}}"],"pinVersions":false}]},"group":{"description":"Group {{arg1}} packages into same branch/PR","packageRules":[{"extends":["{{arg0}}"],"groupName":"{{arg1}}"}]},"base":{"description":"Default base configuration for repositories","extends":[":separateMajorReleases",":combinePatchMinorReleases",":ignoreUnstable",":respectLatest",":unpublishSafeDisabled",":prNotPending",":renovatePrefix",":semanticPrefixFixDepsChoreOthers",":automergeDisabled",":maintainLockFilesDisabled"]},"app":{"description":"Default configuration for webapps","extends":[":pinVersions",":base"]},"library":{"description":"Default configuration for libraries","extends":[":pinOnlyDevDependencies",":base"]}},"_id":"renovate-config-default@0.0.4","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"rarkins","email":"rhys@keylocation.sg"},"dist":{"integrity":"sha512-0nXCF/rz3lrdOBPnzYSwWO4HQpNow8aQZwJCBlGQlEVJp7Kpcwf0dHVwBvVJCMbzT1m+85GmZ0seAa6kuJYy8Q==","shasum":"fa29d3cc74664cae043370e75c5a735c97c43e49","tarball":"https://registry.npmjs.org/renovate-config-default/-/renovate-config-default-0.0.4.tgz"},"maintainers":[{"name":"rarkins","email":"rhys@keylocation.sg"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/renovate-config-default-0.0.4.tgz_1503565787137_0.6079069799743593"},"directories":{}}},"readme":"# default presets\n\nThis directory contains default presets for Renovate. Any preset defined here can be referenced with or without the `default` prefix, e.g. `\"extends\": [\":base\"]` or `\"extends\": [\"default:base\"]`.\n","maintainers":[{"name":"rarkins","email":"rhys@keylocation.sg"}],"time":{"modified":"2017-08-24T09:09:49.075Z","created":"2017-08-16T11:52:48.679Z","0.0.0":"2017-08-16T11:52:48.679Z","0.0.1":"2017-08-16T11:53:42.816Z","0.0.2":"2017-08-18T07:34:52.514Z","0.0.3":"2017-08-18T08:52:17.834Z","0.0.4":"2017-08-24T09:09:49.075Z"},"homepage":"https://github.com/singapore/renovate-config","repository":{"type":"git","url":"git+https://rarkins@github.com/singapore/renovate-config.git"},"author":{"name":"Rhys Arkins","email":"rhys@arkins.net"},"bugs":{"url":"https://github.com/singapore/renovate-config/issues"},"license":"MIT","readmeFilename":"readme.md","_attachments":{}}