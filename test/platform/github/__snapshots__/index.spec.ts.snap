// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`platform/github addAssignees(issueNo, assignees) should add the given assignees to the issue 1`] = `
Array [
  Array [
    "repos/some/repo/issues/42/assignees",
    Object {
      "body": Object {
        "assignees": Array [
          "someuser",
          "someotheruser",
        ],
      },
    },
  ],
]
`;

exports[`platform/github addReviewers(issueNo, reviewers) should add the given reviewers to the PR 1`] = `
Array [
  Array [
    "repos/some/repo/pulls/42/requested_reviewers",
    Object {
      "body": Object {
        "reviewers": Array [
          "someuser",
          "someotheruser",
        ],
        "team_reviewers": Array [
          "someteam",
        ],
      },
    },
  ],
]
`;

exports[`platform/github createPr() should create and return a PR object 1`] = `
Object {
  "branchName": "some-branch",
  "canRebase": true,
  "displayNumber": "Pull Request #123",
  "number": 123,
}
`;

exports[`platform/github createPr() should create and return a PR object 2`] = `
Array [
  Array [
    "repos/some/repo/pulls",
    Object {
      "body": Object {
        "base": "master",
        "body": "Hello world",
        "head": "some:some-branch",
        "title": "The Title",
      },
    },
  ],
  Array [
    "repos/some/repo/issues/123/labels",
    Object {
      "body": Array [
        "deps",
        "renovate",
      ],
    },
  ],
  Array [
    "repos/some/repo/statuses/0d9c7726c3d628b7e28af234595cfd20febdbf8e",
    Object {
      "body": Object {
        "context": "renovate/verify",
        "description": "Renovate verified pull request",
        "state": "success",
        "target_url": "https://renovatebot.com",
      },
    },
  ],
]
`;

exports[`platform/github createPr() should use defaultBranch 1`] = `
Object {
  "branchName": "some-branch",
  "canRebase": true,
  "displayNumber": "Pull Request #123",
  "number": 123,
}
`;

exports[`platform/github createPr() should use defaultBranch 2`] = `
Array [
  Array [
    "repos/some/repo/pulls",
    Object {
      "body": Object {
        "base": "master",
        "body": "Hello world",
        "head": "some:some-branch",
        "title": "The Title",
      },
    },
  ],
]
`;

exports[`platform/github deleteLabel(issueNo, label) should delete the label 1`] = `
Array [
  Array [
    "repos/some/repo/issues/42/labels/rebase",
  ],
]
`;

exports[`platform/github ensureComment add comment if not found 1`] = `
Array [
  "repos/some/repo/issues/42/comments",
  Object {
    "body": Object {
      "body": "### some-subject

some
content",
    },
  },
]
`;

exports[`platform/github ensureComment add updates comment if necessary 1`] = `
Array [
  Array [
    "repos/some/repo/issues/comments/1234",
    Object {
      "body": Object {
        "body": "### some-subject

some
content",
      },
    },
  ],
]
`;

exports[`platform/github getBranchPr(branchName) should return the PR object 1`] = `
Array [
  Array [
    "repos/some/repo",
  ],
  Array [
    "repos/some/repo/pulls?per_page=100&state=all",
    Object {
      "paginate": true,
    },
  ],
  Array [
    "repos/some/repo/pulls/91",
  ],
  Array [
    "repos/some/repo/git/refs/heads/master",
  ],
]
`;

exports[`platform/github getBranchPr(branchName) should return the PR object 2`] = `
Object {
  "additions": 1,
  "base": Object {
    "sha": "1234",
  },
  "branchName": "somebranch",
  "canRebase": true,
  "commits": 1,
  "deletions": 1,
  "displayNumber": "Pull Request #91",
  "head": Object {
    "ref": "somebranch",
  },
  "isStale": true,
  "number": 91,
  "sha": undefined,
  "state": "open",
}
`;

exports[`platform/github getPr(prNo) should return PR from closed graphql result 1`] = `
Object {
  "body": "dummy body",
  "branchName": "renovate/delay-4.x",
  "comments": Array [
    Object {
      "body": ":tada: This PR is included in version 13.63.5 :tada:

The release is available on:
- [npm package (@latest dist-tag)](https://www.npmjs.com/package/renovate)
- [GitHub release](https://github.com/renovatebot/renovate/releases/tag/13.63.5)

Your **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "id": 420006957,
    },
  ],
  "displayNumber": "Pull Request #2499",
  "number": 2499,
  "state": "merged",
  "title": "build(deps): update dependency delay to v4.0.1",
}
`;

exports[`platform/github getPr(prNo) should return PR from graphql result 1`] = `
Object {
  "branchName": "renovate/jest-monorepo",
  "canMerge": false,
  "canRebase": true,
  "displayNumber": "Pull Request #2500",
  "isConflicted": true,
  "isStale": true,
  "number": 2500,
  "state": "open",
  "targetBranch": "master",
  "title": "chore(deps): update dependency jest to v23.6.0",
}
`;

exports[`platform/github getPr(prNo) should return a PR object - 0 1`] = `
Object {
  "base": Object {
    "sha": "1234",
  },
  "displayNumber": "Pull Request #1",
  "mergeable": true,
  "merged_at": "sometime",
  "number": 1,
  "state": "closed",
}
`;

exports[`platform/github getPr(prNo) should return a PR object - 1 1`] = `
Object {
  "base": Object {
    "sha": "1234",
  },
  "branchName": undefined,
  "canRebase": true,
  "commits": 1,
  "displayNumber": "Pull Request #1",
  "isConflicted": true,
  "mergeable_state": "dirty",
  "number": 1,
  "sha": undefined,
  "state": "open",
}
`;

exports[`platform/github getPr(prNo) should return a PR object - 2 1`] = `
Object {
  "base": Object {
    "sha": "5678",
  },
  "branchName": undefined,
  "canMerge": true,
  "canRebase": true,
  "commits": 1,
  "displayNumber": "Pull Request #1",
  "isStale": true,
  "mergeable": true,
  "number": 1,
  "sha": undefined,
  "state": "open",
}
`;

exports[`platform/github getPr(prNo) should return a not rebaseable PR if gitAuthor does not match 1 commit 1`] = `
Object {
  "base": Object {
    "sha": "1234",
  },
  "branchName": undefined,
  "canRebase": false,
  "commits": 1,
  "displayNumber": "Pull Request #1",
  "isConflicted": true,
  "mergeable_state": "dirty",
  "number": 1,
  "sha": undefined,
  "state": "open",
}
`;

exports[`platform/github getPr(prNo) should return a rebaseable PR despite multiple commits 1`] = `
Object {
  "base": Object {
    "sha": "1234",
  },
  "branchName": undefined,
  "canRebase": true,
  "commits": 2,
  "displayNumber": "Pull Request #1",
  "isConflicted": true,
  "mergeable_state": "dirty",
  "number": 1,
  "sha": undefined,
  "state": "open",
}
`;

exports[`platform/github getPr(prNo) should return a rebaseable PR if gitAuthor matches 1 commit 1`] = `
Object {
  "base": Object {
    "sha": "1234",
  },
  "branchName": undefined,
  "canRebase": true,
  "commits": 1,
  "displayNumber": "Pull Request #1",
  "isConflicted": true,
  "mergeable_state": "dirty",
  "number": 1,
  "sha": undefined,
  "state": "open",
}
`;

exports[`platform/github getPr(prNo) should return a rebaseable PR if web-flow is second author 1`] = `
Object {
  "base": Object {
    "sha": "1234",
  },
  "branchName": undefined,
  "canRebase": true,
  "commits": 2,
  "displayNumber": "Pull Request #1",
  "isConflicted": true,
  "mergeable_state": "dirty",
  "number": 1,
  "sha": undefined,
  "state": "open",
}
`;

exports[`platform/github getPr(prNo) should return an unrebaseable PR if multiple authors 1`] = `
Object {
  "base": Object {
    "sha": "1234",
  },
  "branchName": undefined,
  "commits": 2,
  "displayNumber": "Pull Request #1",
  "isConflicted": true,
  "mergeable_state": "dirty",
  "number": 1,
  "sha": undefined,
  "state": "open",
}
`;

exports[`platform/github getPrBody(input) returns updated pr body 1`] = `"https://github.com/foo/bar/issues/5 plus also [a link](https://togithub.com/foo/bar/issues/5)"`;

exports[`platform/github getPrFiles() returns files 1`] = `
Array [
  "renovate.json",
  "not renovate.json",
]
`;

exports[`platform/github getRepos should return an array of repos 1`] = `
Array [
  Array [
    "user/repos?per_page=100",
    Object {
      "paginate": true,
    },
  ],
]
`;

exports[`platform/github getRepos should return an array of repos 2`] = `
Array [
  "a/b",
  "c/d",
]
`;

exports[`platform/github initPlatform() should support custom endpoint 1`] = `
Object {
  "endpoint": "https://ghe.renovatebot.com/",
  "gitAuthor": undefined,
  "renovateUsername": "renovate-bot",
}
`;

exports[`platform/github initPlatform() should support default endpoint no email access 1`] = `
Object {
  "endpoint": "https://api.github.com/",
  "gitAuthor": undefined,
  "renovateUsername": "renovate-bot",
}
`;

exports[`platform/github initPlatform() should support default endpoint no email result 1`] = `
Object {
  "endpoint": "https://api.github.com/",
  "gitAuthor": undefined,
  "renovateUsername": "renovate-bot",
}
`;

exports[`platform/github initPlatform() should support default endpoint with email 1`] = `
Object {
  "endpoint": "https://api.github.com/",
  "gitAuthor": "undefined <user@domain.com>",
  "renovateUsername": "renovate-bot",
}
`;

exports[`platform/github initRepo should forks when forkMode 1`] = `
Object {
  "baseBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github initRepo should merge 1`] = `
Object {
  "baseBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github initRepo should not guess at merge 1`] = `
Object {
  "baseBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github initRepo should rebase 1`] = `
Object {
  "baseBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github initRepo should squash 1`] = `
Object {
  "baseBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github initRepo should update fork when forkMode 1`] = `
Object {
  "baseBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github updatePr(prNo, title, body) should update the PR 1`] = `
Array [
  Array [
    "repos/some/repo/pulls/1234",
    Object {
      "body": Object {
        "body": "Hello world again",
        "title": "The New Title",
      },
    },
  ],
]
`;
