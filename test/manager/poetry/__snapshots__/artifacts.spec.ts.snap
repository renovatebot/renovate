// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`.updateArtifacts() catches errors 1`] = `
Array [
  Object {
    "artifactError": Object {
      "lockFile": "poetry.lock",
      "stderr": "not found",
    },
  },
]
`;

exports[`.updateArtifacts() returns null if unchanged 1`] = `
Array [
  "poetry update --lock --no-interaction dep1",
]
`;

exports[`.updateArtifacts() returns null if unchanged 2`] = `
Array [
  Object {
    "cwd": "/tmp/github/some/repo",
    "encoding": "utf-8",
    "env": Object {
      "HOME": null,
      "PATH": null,
    },
  },
]
`;

exports[`.updateArtifacts() returns updated poetry.lock 1`] = `
Array [
  "poetry update --lock --no-interaction dep1",
]
`;

exports[`.updateArtifacts() returns updated poetry.lock 2`] = `
Array [
  Object {
    "cwd": "/tmp/github/some/repo",
    "encoding": "utf-8",
    "env": Object {
      "HOME": null,
      "PATH": null,
    },
  },
]
`;

exports[`.updateArtifacts() returns updated poetry.lock using docker 1`] = `
Array [
  "docker run --rm --user=foobar -v \\"/tmp/github/some/repo\\":\\"/tmp/github/some/repo\\" -w \\"/tmp/github/some/repo\\" renovate/poetry poetry update --lock --no-interaction dep1",
]
`;

exports[`.updateArtifacts() returns updated poetry.lock using docker 2`] = `
Array [
  Object {
    "cwd": "/tmp/github/some/repo",
    "encoding": "utf-8",
    "env": Object {
      "HOME": null,
      "PATH": null,
    },
  },
]
`;
