{
  "title": "JSON schema for Renovate config files (https://renovatebot.com/)",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "abandonmentThreshold": {
      "description": "Flags packages that have not been updated within this period as abandoned.",
      "type": ["string", "null"],
      "default": null
    },
    "addLabels": {
      "description": "Labels to add to Pull Request.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "additionalBranchPrefix": {
      "description": "Additional string value to be appended to `branchPrefix`.",
      "type": "string",
      "default": ""
    },
    "additionalReviewers": {
      "description": "Additional reviewers for Pull Requests (in contrast to `reviewers`, this option adds to the existing reviewer list, rather than replacing it).",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "allowCustomCrateRegistries": {
      "description": "Set this to `true` to allow custom crate registries.",
      "type": "boolean",
      "default": false
    },
    "allowPlugins": {
      "description": "Set this to `true` if repositories are allowed to run install plugins.",
      "type": "boolean",
      "default": false
    },
    "allowScripts": {
      "description": "Set this to `true` if repositories are allowed to run install scripts.",
      "type": "boolean",
      "default": false
    },
    "allowedCommands": {
      "description": "A list of regular expressions that decide which commands are allowed in post-upgrade tasks.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "allowedEnv": {
      "description": "List of allowed patterns for environment variable names in repository env config.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "allowedHeaders": {
      "description": "List of allowed patterns for header names in repository hostRules config.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": ["X-*"]
    },
    "ansible": {
      "description": "Configuration object for the ansible manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)tasks/[^/]+\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "ansible-galaxy": {
      "description": "Configuration object for the ansible-galaxy manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/)(galaxy|requirements)(\\.ansible)?\\.ya?ml$/"
        ]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "argocd": {
      "description": "Configuration object for the argocd manager",
      "type": "object",
      "default": {
        "managerFilePatterns": []
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "asdf": {
      "description": "Configuration object for the asdf manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.tool-versions$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "assignAutomerge": {
      "description": "Assign reviewers and assignees even if the PR is to be automerged.",
      "type": "boolean",
      "default": false
    },
    "assignees": {
      "description": "Assignees for Pull Request (either username or email address depending on the platform).",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "assigneesFromCodeOwners": {
      "description": "Determine assignees based on configured code owners and changes in PR.",
      "type": "boolean",
      "default": false
    },
    "assigneesSampleSize": {
      "description": "Take a random sample of given size from `assignees`.",
      "type": ["integer", "null"],
      "default": null
    },
    "autoApprove": {
      "description": "Set to `true` to automatically approve PRs.",
      "type": "boolean",
      "default": false
    },
    "autoReplaceGlobalMatch": {
      "description": "Control whether replacement regular expressions are global matches or only the first match.",
      "type": "boolean",
      "default": true
    },
    "autodiscover": {
      "description": "Autodiscover all repositories.",
      "type": "boolean",
      "default": false
    },
    "autodiscoverFilter": {
      "description": "Filter the list of autodiscovered repositories.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "string"
        }
      ],
      "default": null,
      "type": ["array", "null"]
    },
    "autodiscoverNamespaces": {
      "description": "Filter the list of autodiscovered repositories by namespaces.",
      "type": ["array", "null"],
      "items": {
        "type": "string"
      },
      "default": null
    },
    "autodiscoverProjects": {
      "description": "Filter the list of autodiscovered repositories by project names.",
      "type": ["array", "null"],
      "items": {
        "type": "string"
      },
      "default": null
    },
    "autodiscoverRepoOrder": {
      "description": "The order method for autodiscover server side repository search.",
      "type": ["string", "null"],
      "enum": ["asc", "desc"],
      "default": null
    },
    "autodiscoverRepoSort": {
      "description": "The sort method for autodiscover server side repository search.",
      "type": ["string", "null"],
      "enum": ["alpha", "created", "updated", "size", "id"],
      "default": null
    },
    "autodiscoverTopics": {
      "description": "Filter the list of autodiscovered repositories by topics.",
      "type": ["array", "null"],
      "items": {
        "type": "string"
      },
      "default": null
    },
    "automerge": {
      "description": "Whether to automerge branches/PRs automatically, without human intervention.",
      "type": "boolean",
      "default": false
    },
    "automergeComment": {
      "description": "PR comment to add to trigger automerge. Only used if `automergeType=pr-comment`.",
      "type": "string",
      "default": "automergeComment"
    },
    "automergeSchedule": {
      "description": "Limit automerge to these times of day or week.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "string"
        }
      ],
      "default": ["at any time"]
    },
    "automergeStrategy": {
      "description": "The merge strategy to use when automerging PRs. Used only if `automergeType=pr`.",
      "type": "string",
      "enum": ["auto", "fast-forward", "merge-commit", "rebase", "squash"],
      "default": "auto"
    },
    "automergeType": {
      "description": "How to automerge, if enabled.",
      "type": "string",
      "enum": ["branch", "pr", "pr-comment"],
      "default": "pr"
    },
    "azure-pipelines": {
      "description": "Configuration object for the azure-pipelines manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/).azuredevops/.+\\.ya?ml$/",
          "/azure.*pipelines?.*\\.ya?ml$/"
        ],
        "enabled": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "azureWorkItemId": {
      "description": "The id of an existing work item on Azure Boards to link to each PR.",
      "type": "integer",
      "default": 0
    },
    "baseBranches": {
      "description": "List of one or more custom base branches defined as exact strings and/or via regex expressions.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "baseDir": {
      "description": "The base directory for Renovate to store local files, including repository files and cache. If left empty, Renovate will create its own temporary directory to use.",
      "type": "string"
    },
    "batect": {
      "description": "Configuration object for the batect manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)batect(-bundle)?\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "batect-wrapper": {
      "description": "Configuration object for the batect-wrapper manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)batect$/"],
        "versioning": "semver"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "bazel": {
      "description": "Configuration object for the bazel manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/)WORKSPACE(|\\.bazel|\\.bzlmod)$/",
          "/\\.WORKSPACE\\.bazel$/",
          "/\\.bzl$/"
        ]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "bazel-module": {
      "description": "Configuration object for the bazel-module manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/|\\.)MODULE\\.bazel$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "bazelisk": {
      "description": "Configuration object for the bazelisk manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.bazelversion$/"],
        "pinDigests": false,
        "versioning": "semver"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "bbAutoResolvePrTasks": {
      "description": "The PR tasks will be automatically completed after the PR is raised.",
      "type": "boolean",
      "default": false
    },
    "bbUseDefaultReviewers": {
      "description": "Use the default reviewers (Bitbucket only).",
      "type": "boolean",
      "default": true
    },
    "bbUseDevelopmentBranch": {
      "description": "Use the repository's [development branch](https://support.atlassian.com/bitbucket-cloud/docs/branch-a-repository/#The-branching-model) as the repository's default branch.",
      "type": "boolean",
      "default": false
    },
    "bicep": {
      "description": "Configuration object for the bicep manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/\\.bicep$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "binarySource": {
      "description": "Controls how third-party tools like npm or Gradle are called: directly, via Docker sidecar containers, or via dynamic install.",
      "type": "string",
      "enum": ["global", "docker", "install", "hermit"],
      "default": "install"
    },
    "bitbucket-pipelines": {
      "description": "Configuration object for the bitbucket-pipelines manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.?bitbucket-pipelines\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "bitrise": {
      "description": "Configuration object for the bitrise manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)bitrise\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "branchConcurrentLimit": {
      "description": "Limit to a maximum of x concurrent branches. 0 means no limit, `null` (default) inherits value from `prConcurrentLimit`.",
      "type": ["integer", "null"],
      "default": null
    },
    "branchName": {
      "description": "Branch name template.",
      "type": "string",
      "default": "{{{branchPrefix}}}{{{additionalBranchPrefix}}}{{{branchTopic}}}"
    },
    "branchNameStrict": {
      "description": "Whether to be strict about the use of special characters within the branch name.",
      "type": "boolean",
      "default": false
    },
    "branchPrefix": {
      "description": "Prefix to use for all branch names.",
      "type": "string",
      "default": "renovate/"
    },
    "branchPrefixOld": {
      "description": "Old branchPrefix value to check for existing PRs.",
      "type": "string",
      "default": "renovate/"
    },
    "branchTopic": {
      "description": "Branch topic.",
      "type": "string",
      "default": "{{{depNameSanitized}}}-{{{newMajor}}}{{#if separateMinorPatch}}{{#if isPatch}}.{{{newMinor}}}{{/if}}{{/if}}.x{{#if isLockfileUpdate}}-lockfile{{/if}}"
    },
    "buildkite": {
      "description": "Configuration object for the buildkite manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/buildkite\\.ya?ml/",
          "/\\.buildkite/.+\\.ya?ml$/"
        ],
        "commitMessageTopic": "buildkite plugin {{depName}}",
        "commitMessageExtra": "to {{#if isMajor}}{{{prettyNewMajor}}}{{else}}{{{newValue}}}{{/if}}"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "buildpacks": {
      "description": "Configuration object for the buildpacks manager",
      "type": "object",
      "default": {
        "commitMessageTopic": "buildpack {{depName}}",
        "managerFilePatterns": ["/(^|/)project\\.toml$/"],
        "pinDigests": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "bumpVersion": {
      "description": "Bump the version in the package file being updated.",
      "type": "string",
      "enum": ["major", "minor", "patch", "prerelease"]
    },
    "bumpVersions": {
      "description": "A list of bumpVersion config options to bump generic version numbers.",
      "type": "array",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "bumpType": {
                "description": "The semver level to use when bumping versions. This is used by the `bumpVersions` feature.",
                "type": "string"
              },
              "filePatterns": {
                "description": "A list of patterns to match files that contain the version string.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "matchStrings": {
                "description": "Queries to use. Valid only within `bumpVersions` or `customManagers` object.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "name": {
                "description": "A name for the bumpVersion config. This is used for logging and debugging.",
                "type": "string"
              }
            }
          }
        ]
      },
      "default": []
    },
    "bun": {
      "description": "Configuration object for the bun manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/)bun\\.lockb?$/",
          "/(^|/)package\\.json$/"
        ],
        "digest": {
          "prBodyDefinitions": {
            "Change": "{{#if displayFrom}}`{{{displayFrom}}}` -> {{else}}{{#if currentValue}}`{{{currentValue}}}` -> {{/if}}{{/if}}{{#if displayTo}}`{{{displayTo}}}`{{else}}`{{{newValue}}}`{{/if}}"
          }
        },
        "prBodyDefinitions": {
          "Change": "[{{#if displayFrom}}`{{{displayFrom}}}` -> {{else}}{{#if currentValue}}`{{{currentValue}}}` -> {{/if}}{{/if}}{{#if displayTo}}`{{{displayTo}}}`{{else}}`{{{newValue}}}`{{/if}}]({{#if depName}}https://renovatebot.com/diffs/npm/{{replace '/' '%2f' depName}}/{{{currentVersion}}}/{{{newVersion}}}{{/if}})"
        }
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "bun-version": {
      "description": "Configuration object for the bun-version manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.bun-version$/"],
        "versioning": "npm"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "bundler": {
      "description": "Configuration object for the bundler manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)Gemfile$/"],
        "versioning": "ruby"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "cacheDir": {
      "description": "The directory where Renovate stores its cache. If left empty, Renovate creates a subdirectory within the `baseDir`.",
      "type": "string"
    },
    "cacheHardTtlMinutes": {
      "description": "Maximum duration in minutes to keep datasource cache entries.",
      "type": "integer",
      "default": 10080
    },
    "cachePrivatePackages": {
      "description": "Cache private packages in the datasource cache. This is useful for self-hosted setups",
      "type": "boolean",
      "default": false
    },
    "cacheTtlOverride": {
      "description": "An object that contains cache namespace TTL override values.",
      "type": "object",
      "default": {},
      "$ref": "#"
    },
    "cake": {
      "description": "Configuration object for the cake manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/\\.cake$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "cargo": {
      "description": "Configuration object for the cargo manager",
      "type": "object",
      "default": {
        "commitMessageTopic": "Rust crate {{depName}}",
        "managerFilePatterns": ["/(^|/)Cargo\\.toml$/"],
        "versioning": "cargo"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "cdnurl": {
      "description": "Configuration object for the cdnurl manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [],
        "versioning": "semver"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "checkedBranches": {
      "description": "A list of branch names to mark for creation or rebasing as if it was selected in the Dependency Dashboard issue.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "circleci": {
      "description": "Configuration object for the circleci manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.circleci/.+\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "cloneSubmodules": {
      "description": "Set to `true` to initialize submodules during repository clone.",
      "type": "boolean",
      "default": false
    },
    "cloneSubmodulesFilter": {
      "description": "List of submodules names or patterns to clone when cloneSubmodules=true.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": ["*"]
    },
    "cloudbuild": {
      "description": "Configuration object for the cloudbuild manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)cloudbuild\\.ya?ml/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "cocoapods": {
      "description": "Configuration object for the cocoapods manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)Podfile$/"],
        "versioning": "ruby"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "commitBody": {
      "description": "Commit message body template. Will be appended to commit message, separated by two line returns.",
      "type": "string"
    },
    "commitBodyTable": {
      "description": "If enabled, append a table in the commit message body describing all updates in the commit.",
      "type": "boolean",
      "default": false
    },
    "commitMessage": {
      "description": "Message to use for commit messages and pull request titles.",
      "type": "string",
      "default": "{{{commitMessagePrefix}}} {{{commitMessageAction}}} {{{commitMessageTopic}}} {{{commitMessageExtra}}} {{{commitMessageSuffix}}}"
    },
    "commitMessageAction": {
      "description": "Action verb to use in commit messages and PR titles.",
      "type": "string",
      "default": "Update"
    },
    "commitMessageExtra": {
      "description": "Extra description used after the commit message topic - typically the version.",
      "type": "string",
      "default": "to {{#if isPinDigest}}{{{newDigestShort}}}{{else}}{{#if isMajor}}{{prettyNewMajor}}{{else}}{{#if isSingleVersion}}{{prettyNewVersion}}{{else}}{{#if newValue}}{{{newValue}}}{{else}}{{{newDigestShort}}}{{/if}}{{/if}}{{/if}}{{/if}}"
    },
    "commitMessageLowerCase": {
      "description": "Lowercase PR- and commit titles.",
      "type": "string",
      "enum": ["auto", "never"],
      "default": "auto"
    },
    "commitMessagePrefix": {
      "description": "Prefix to add to start of commit messages and PR titles. Uses a semantic prefix if `semanticCommits` is enabled.",
      "type": "string"
    },
    "commitMessageSuffix": {
      "description": "Suffix to add to end of commit messages and PR titles.",
      "type": "string"
    },
    "commitMessageTopic": {
      "description": "The upgrade topic/noun used in commit messages and PR titles.",
      "type": "string",
      "default": "dependency {{depName}}"
    },
    "composer": {
      "description": "Configuration object for the composer manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)([\\w-]*)composer\\.json$/"],
        "versioning": "composer"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "composerIgnorePlatformReqs": {
      "description": "Configure use of `--ignore-platform-reqs` or `--ignore-platform-req` for the Composer package manager.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "conan": {
      "description": "Configuration object for the conan manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)conanfile\\.(txt|py)$/"],
        "datasource": "conan",
        "versioning": "conan",
        "enabled": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "confidential": {
      "description": "If enabled, issues created by Renovate are set as confidential.",
      "type": "boolean",
      "default": false
    },
    "configMigration": {
      "description": "Enable this to get config migration PRs when needed.",
      "type": "boolean",
      "default": false
    },
    "configWarningReuseIssue": {
      "description": "Set this to `true` to make Renovate reuse/reopen an existing closed Config Warning issue, instead of opening a new one each time.",
      "type": "boolean",
      "default": false
    },
    "constraints": {
      "description": "Configuration object to define language or manager version constraints.",
      "type": "object",
      "default": {},
      "additionalProperties": {
        "type": "string"
      }
    },
    "constraintsFiltering": {
      "description": "Perform release filtering based on language constraints.",
      "type": "string",
      "enum": ["none", "strict"],
      "default": "none"
    },
    "containerbaseDir": {
      "description": "The directory where Renovate stores its containerbase cache. If left empty, Renovate creates a subdirectory within the `cacheDir`.",
      "type": "string"
    },
    "copier": {
      "description": "Configuration object for the copier manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.copier-answers(\\..+)?\\.ya?ml/"],
        "versioning": "pep440"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "cpanfile": {
      "description": "Configuration object for the cpanfile manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)cpanfile$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "crossplane": {
      "description": "Configuration object for the crossplane manager",
      "type": "object",
      "default": {
        "managerFilePatterns": []
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "customDatasources": {
      "description": "Defines custom datasources for usage by managers.",
      "type": "object",
      "default": {},
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "defaultRegistryUrlTemplate": {
                "description": "Template for generating a `defaultRegistryUrl` for custom datasource.",
                "type": "string",
                "default": ""
              },
              "format": {
                "description": "Format of the custom datasource.",
                "type": "string",
                "enum": ["json", "plain"],
                "default": "json"
              },
              "transformTemplates": {
                "description": "List of jsonata transformation rules.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              }
            }
          }
        ]
      }
    },
    "customEnvVariables": {
      "description": "Custom environment variables for child processes and sidecar Docker containers.",
      "type": "object",
      "default": {},
      "$ref": "#"
    },
    "customManagers": {
      "description": "Custom managers using regex matching.",
      "type": "array",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "autoReplaceStringTemplate": {
                "description": "Optional `extractVersion` for extracted dependencies. Valid only within a `customManagers` object.",
                "type": "string"
              },
              "currentValueTemplate": {
                "description": "Optional `currentValue` for extracted dependencies. Valid only within a `customManagers` object.",
                "type": "string"
              },
              "customType": {
                "description": "Custom manager to use. Valid only within a `customManagers` object.",
                "type": "string",
                "enum": ["jsonata", "regex"]
              },
              "datasourceTemplate": {
                "description": "Optional datasource for extracted dependencies. Valid only within a `customManagers` object.",
                "type": "string"
              },
              "depNameTemplate": {
                "description": "Optional depName for extracted dependencies. Valid only within a `customManagers` object.",
                "type": "string"
              },
              "depTypeTemplate": {
                "description": "Optional `depType` for extracted dependencies. Valid only within a `customManagers` object.",
                "type": "string"
              },
              "extractVersionTemplate": {
                "description": "Optional `extractVersion` for extracted dependencies. Valid only within a `customManagers` object.",
                "type": "string"
              },
              "fileFormat": {
                "description": "It specifies the syntax of the package file being managed by the custom JSONata manager.",
                "type": "string",
                "enum": ["json", "toml", "yaml"]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "matchStrings": {
                "description": "Queries to use. Valid only within `bumpVersions` or `customManagers` object.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "matchStringsStrategy": {
                "description": "Strategy how to interpret matchStrings.",
                "type": "string",
                "enum": ["any", "recursive", "combination"],
                "default": "any"
              },
              "packageNameTemplate": {
                "description": "Optional packageName for extracted dependencies, else defaults to `depName` value. Valid only within a `customManagers` object.",
                "type": "string"
              },
              "registryUrlTemplate": {
                "description": "Optional registry URL for extracted dependencies. Valid only within a `customManagers` object.",
                "type": "string"
              },
              "versioningTemplate": {
                "description": "Optional versioning for extracted dependencies. Valid only within a `customManagers` object.",
                "type": "string"
              }
            }
          }
        ]
      },
      "default": []
    },
    "customizeDashboard": {
      "description": "Customize sections in the Dependency Dashboard issue.",
      "type": "object",
      "default": {},
      "additionalProperties": {
        "type": "string"
      }
    },
    "defaultRegistryUrls": {
      "description": "List of registry URLs to use as the default for a datasource.",
      "type": ["array", "null"],
      "items": {
        "type": "string"
      },
      "default": null
    },
    "deleteConfigFile": {
      "description": "If set to `true`, Renovate tries to delete the self-hosted config file after reading it.",
      "type": "boolean",
      "default": false
    },
    "dependencyDashboard": {
      "description": "Whether to create a \"Dependency Dashboard\" issue in the repository.",
      "type": "boolean",
      "default": false
    },
    "dependencyDashboardApproval": {
      "description": "Controls if updates need manual approval from the Dependency Dashboard issue before PRs are created.",
      "type": "boolean",
      "default": false
    },
    "dependencyDashboardAutoclose": {
      "description": "Set to `true` to let Renovate close the Dependency Dashboard issue if there are no more updates.",
      "type": "boolean",
      "default": false
    },
    "dependencyDashboardFooter": {
      "description": "Any text added here will be placed last in the Dependency Dashboard issue body, with a divider separator before it.",
      "type": "string"
    },
    "dependencyDashboardHeader": {
      "description": "Any text added here will be placed first in the Dependency Dashboard issue body.",
      "type": "string",
      "default": "This issue lists Renovate updates and detected dependencies. Read the [Dependency Dashboard](https://docs.renovatebot.com/key-concepts/dashboard/) docs to learn more."
    },
    "dependencyDashboardLabels": {
      "description": "These labels will always be applied on the Dependency Dashboard issue, even when they have been removed manually.",
      "type": ["array", "null"],
      "items": {
        "type": "string"
      },
      "default": null
    },
    "dependencyDashboardOSVVulnerabilitySummary": {
      "description": "Control if the Dependency Dashboard issue lists CVEs supplied by [osv.dev](https://osv.dev).",
      "type": "string",
      "enum": ["none", "all", "unresolved"],
      "default": "none"
    },
    "dependencyDashboardReportAbandonment": {
      "description": "Controls whether abandoned packages are reported in the dependency dashboard.",
      "type": "boolean",
      "default": true
    },
    "dependencyDashboardTitle": {
      "description": "Title for the Dependency Dashboard issue.",
      "type": "string",
      "default": "Dependency Dashboard"
    },
    "deps-edn": {
      "description": "Configuration object for the deps-edn manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)(?:deps|bb)\\.edn$/"],
        "versioning": "maven"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "description": {
      "description": "Plain text description for a config or preset.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "string"
        }
      ]
    },
    "detectGlobalManagerConfig": {
      "description": "If `true`, Renovate tries to detect global manager configuration from the file system.",
      "type": "boolean",
      "default": false
    },
    "detectHostRulesFromEnv": {
      "description": "If `true`, Renovate tries to detect host rules from environment variables.",
      "type": "boolean",
      "default": false
    },
    "devbox": {
      "description": "Configuration object for the devbox manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)devbox\\.json$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "devcontainer": {
      "description": "Configuration object for the devcontainer manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/^.devcontainer/devcontainer.json$/",
          "/^.devcontainer.json$/"
        ]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "digest": {
      "description": "Configuration to apply when updating a digest (no change in tag/version).",
      "type": "object",
      "default": {
        "branchTopic": "{{{depNameSanitized}}}-digest",
        "commitMessageExtra": "to {{newDigestShort}}",
        "commitMessageTopic": "{{{depName}}} digest"
      },
      "$ref": "#"
    },
    "docker-compose": {
      "description": "Configuration object for the docker-compose manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)(?:docker-)?compose[^/]*\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "dockerChildPrefix": {
      "description": "Change this value to add a prefix to the Renovate Docker sidecar container names and labels.",
      "type": "string",
      "default": "renovate_"
    },
    "dockerCliOptions": {
      "description": "Pass CLI flags to `docker run` command when `binarySource=docker`.",
      "type": "string"
    },
    "dockerMaxPages": {
      "description": "By default, Renovate fetches up to 20 pages of Docker tags from registries. But you can set your own limit with this config option.",
      "type": "integer",
      "default": 20
    },
    "dockerSidecarImage": {
      "description": "Change this value to override the default Renovate sidecar image.",
      "type": "string",
      "default": "ghcr.io/containerbase/sidecar:13.8.23"
    },
    "dockerUser": {
      "description": "Set the `UID` and `GID` for Docker-based binaries if you use `binarySource=docker`.",
      "type": "string"
    },
    "dockerfile": {
      "description": "Configuration object for the dockerfile manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/|\\.)([Dd]ocker|[Cc]ontainer)file$/",
          "/(^|/)([Dd]ocker|[Cc]ontainer)file[^/]*$/"
        ]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "draftPR": {
      "description": "If set to `true` then Renovate creates draft PRs, instead of normal status PRs.",
      "type": "boolean",
      "default": false
    },
    "droneci": {
      "description": "Configuration object for the droneci manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.drone\\.yml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "dryRun": {
      "description": "If enabled, perform a dry run by logging messages instead of creating/updating/deleting branches and PRs.",
      "type": ["string", "null"],
      "enum": ["extract", "lookup", "full"],
      "default": null
    },
    "enabled": {
      "description": "Enable or disable Renovate bot.",
      "type": "boolean",
      "default": true
    },
    "enabledManagers": {
      "description": "A list of package managers to enable. Only managers on the list are enabled.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "encrypted": {
      "description": "An object containing configuration encrypted with project key.",
      "type": ["object", "null"],
      "default": null,
      "$ref": "#"
    },
    "encryptedWarning": {
      "description": "Warning text to use if encrypted config is found.",
      "type": "string"
    },
    "endpoint": {
      "description": "Custom endpoint to use.",
      "type": ["string", "null"],
      "default": null
    },
    "env": {
      "description": "Environment variables that Renovate uses when executing package manager commands.",
      "type": "object",
      "default": {},
      "$ref": "#"
    },
    "excludeCommitPaths": {
      "description": "A file matching any of these glob patterns will not be committed, even if the file has been updated.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "executionTimeout": {
      "description": "Default execution timeout in minutes for child processes Renovate creates.",
      "type": "integer",
      "default": 15
    },
    "expandCodeOwnersGroups": {
      "description": "Expand the configured code owner groups into a full list of group members.",
      "type": "boolean",
      "default": false
    },
    "exposeAllEnv": {
      "description": "Set this to `true` to allow passing of all environment variables to package managers.",
      "type": "boolean",
      "default": false
    },
    "extends": {
      "description": "Configuration presets to use or extend.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "string"
        }
      ]
    },
    "extractVersion": {
      "description": "A regex (`re2`) to extract a version from a datasource's raw version string.",
      "type": "string",
      "format": "regex"
    },
    "fetchChangeLogs": {
      "description": "Controls if and when changelogs/release notes are fetched.",
      "type": "string",
      "enum": ["off", "branch", "pr"],
      "default": "pr"
    },
    "filterUnavailableUsers": {
      "description": "Filter reviewers and assignees based on their availability.",
      "type": "boolean",
      "default": false
    },
    "fleet": {
      "description": "Configuration object for the fleet manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)fleet\\.ya?ml/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "flux": {
      "description": "Configuration object for the flux manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(?:^|/)gotk-components\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "followTag": {
      "description": "If defined, packages will follow this release tag exactly.",
      "type": "string"
    },
    "force": {
      "description": "Any configuration set in this object will force override existing settings.",
      "type": "object",
      "$ref": "#"
    },
    "forceCli": {
      "description": "Decides if CLI configuration options are moved to the `force` config section.",
      "type": "boolean",
      "default": true
    },
    "forkCreation": {
      "description": "Whether to create forks as needed at runtime when running in \"fork mode\".",
      "type": "boolean",
      "default": true
    },
    "forkModeDisallowMaintainerEdits": {
      "description": "Disallow maintainers to push to Renovate pull requests when running in fork mode.",
      "type": "boolean",
      "default": false
    },
    "forkOrg": {
      "description": "The preferred organization to create or find forked repositories, when in fork mode.",
      "type": "string"
    },
    "forkProcessing": {
      "description": "Whether to process forked repositories. By default, all forked repositories are skipped when in `autodiscover` mode.",
      "type": "string",
      "enum": ["auto", "enabled", "disabled"],
      "default": "auto"
    },
    "forkToken": {
      "description": "Set a personal access token here to enable \"fork mode\".",
      "type": "string"
    },
    "fvm": {
      "description": "Configuration object for the fvm manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/)\\.fvm/fvm_config\\.json$/",
          "/(^|/)\\.fvmrc$/"
        ],
        "versioning": "semver"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "git-submodules": {
      "description": "Configuration object for the git-submodules manager",
      "type": "object",
      "default": {
        "enabled": false,
        "versioning": "git",
        "managerFilePatterns": ["/(^|/)\\.gitmodules$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "gitAuthor": {
      "description": "Author to use for Git commits. Must conform to [RFC5322](https://datatracker.ietf.org/doc/html/rfc5322).",
      "type": "string"
    },
    "gitIgnoredAuthors": {
      "description": "Git authors which are ignored by Renovate. Must conform to [RFC5322](https://datatracker.ietf.org/doc/html/rfc5322).",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "gitLabIgnoreApprovals": {
      "description": "Ignore approval rules for MRs created by Renovate, which is useful for automerge.",
      "type": "boolean",
      "default": false
    },
    "gitNoVerify": {
      "description": "Which Git commands will be run with the `--no-verify` option.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["commit", "push"]
          }
        },
        {
          "type": "string",
          "enum": ["commit", "push"]
        }
      ],
      "default": ["commit", "push"]
    },
    "gitPrivateKey": {
      "description": "PGP key to use for signing Git commits.",
      "type": "string"
    },
    "gitTimeout": {
      "description": "Configure the timeout with a number of milliseconds to wait for a Git task.",
      "type": "integer",
      "default": 0
    },
    "gitUrl": {
      "description": "Overrides the default resolution for Git remote, e.g. to switch GitLab from HTTPS to SSH-based.",
      "type": "string",
      "enum": ["default", "ssh", "endpoint"],
      "default": "default"
    },
    "github-actions": {
      "description": "Configuration object for the github-actions manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/)(workflow-templates|\\.(?:github|gitea|forgejo)/(?:workflows|actions))/.+\\.ya?ml$/",
          "/(^|/)action\\.ya?ml$/"
        ]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "githubTokenWarn": {
      "description": "Display warnings about GitHub token not being set.",
      "type": "boolean",
      "default": true
    },
    "gitlabci": {
      "description": "Configuration object for the gitlabci manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/\\.gitlab-ci\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "gitlabci-include": {
      "description": "Configuration object for the gitlabci-include manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/\\.gitlab-ci\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "glasskube": {
      "description": "Configuration object for the glasskube manager",
      "type": "object",
      "default": {
        "managerFilePatterns": []
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "gleam": {
      "description": "Configuration object for the gleam manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)gleam.toml$/"],
        "versioning": "hex"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "globalExtends": {
      "description": "Configuration presets to use or extend for a self-hosted config.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "goGetDirs": {
      "description": "Directory pattern to run `go get` on.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": ["./..."]
    },
    "gomod": {
      "description": "Configuration object for the gomod manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)go\\.mod$/"],
        "pinDigests": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "gradle": {
      "description": "Configuration object for the gradle manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/\\.gradle(\\.kts)?$/",
          "/(^|/)gradle\\.properties$/",
          "/(^|/)gradle/.+\\.toml$/",
          "/(^|/)buildSrc/.+\\.kt$/",
          "/\\.versions\\.toml$/",
          "/(^|/)versions.props$/",
          "/(^|/)versions.lock$/"
        ],
        "timeout": 600,
        "versioning": "gradle"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "gradle-wrapper": {
      "description": "Configuration object for the gradle-wrapper manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/)gradle/wrapper/gradle-wrapper\\.properties$/"
        ],
        "versioning": "gradle"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "group": {
      "description": "Config if `groupName` is enabled.",
      "type": "object",
      "default": {
        "branchTopic": "{{{groupSlug}}}",
        "commitMessageTopic": "{{{groupName}}}"
      },
      "$ref": "#"
    },
    "groupName": {
      "description": "Human understandable name for the dependency group.",
      "type": ["string", "null"],
      "default": null
    },
    "groupSlug": {
      "description": "Slug to use for group (e.g. in branch name). Slug is calculated from `groupName` if `null`.",
      "type": ["string", "null"],
      "default": null
    },
    "hashedBranchLength": {
      "description": "If enabled, branch names will use a hashing function to ensure each branch has that length.",
      "type": ["integer", "null"],
      "default": null
    },
    "haskell-cabal": {
      "description": "Configuration object for the haskell-cabal manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/\\.cabal$/"],
        "pinDigests": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "helm-requirements": {
      "description": "Configuration object for the helm-requirements manager",
      "type": "object",
      "default": {
        "registryAliases": {
          "stable": "https://charts.helm.sh/stable"
        },
        "commitMessageTopic": "helm chart {{depName}}",
        "managerFilePatterns": ["/(^|/)requirements\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "helm-values": {
      "description": "Configuration object for the helm-values manager",
      "type": "object",
      "default": {
        "commitMessageTopic": "helm values {{depName}}",
        "managerFilePatterns": ["/(^|/)values\\.ya?ml$/"],
        "pinDigests": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "helmfile": {
      "description": "Configuration object for the helmfile manager",
      "type": "object",
      "default": {
        "registryAliases": {
          "stable": "https://charts.helm.sh/stable"
        },
        "commitMessageTopic": "helm chart {{depName}}",
        "managerFilePatterns": ["/(^|/)helmfile\\.ya?ml(?:\\.gotmpl)?$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "helmsman": {
      "description": "Configuration object for the helmsman manager",
      "type": "object",
      "default": {
        "managerFilePatterns": []
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "helmv3": {
      "description": "Configuration object for the helmv3 manager",
      "type": "object",
      "default": {
        "registryAliases": {
          "stable": "https://charts.helm.sh/stable"
        },
        "commitMessageTopic": "helm chart {{depName}}",
        "managerFilePatterns": ["/(^|/)Chart\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "hermit": {
      "description": "Configuration object for the hermit manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)bin/hermit$/"],
        "excludeCommitPaths": ["**/bin/hermit"],
        "versioning": "hermit"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "homebrew": {
      "description": "Configuration object for the homebrew manager",
      "type": "object",
      "default": {
        "commitMessageTopic": "Homebrew Formula {{depName}}",
        "managerFilePatterns": ["/^Formula/[^/]+[.]rb$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "hostRules": {
      "description": "Host rules/configuration including credentials.",
      "type": "array",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "abortIgnoreStatusCodes": {
                "description": "A list of HTTP status codes safe to ignore even when `abortOnError=true`.",
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "abortOnError": {
                "description": "If enabled, Renovate aborts its run when HTTP request errors occur.",
                "type": "boolean",
                "default": false
              },
              "artifactAuth": {
                "description": "A list of package managers to enable artifact auth. Only managers on the list are enabled. All are enabled if `null`.",
                "type": ["array", "null"],
                "items": {
                  "type": "string",
                  "enum": ["composer"]
                },
                "default": null
              },
              "authType": {
                "description": "Authentication type for HTTP header. e.g. `\"Bearer\"` or `\"Basic\"`. Use `\"Token-Only\"` to use only the token without an authorization type.",
                "type": "string",
                "default": "Bearer"
              },
              "concurrentRequestLimit": {
                "description": "Limit concurrent requests per host.",
                "type": ["integer", "null"],
                "default": null
              },
              "dnsCache": {
                "description": "Enable got DNS cache.",
                "type": "boolean",
                "default": false
              },
              "enableHttp2": {
                "description": "Enable got HTTP/2 support.",
                "type": "boolean",
                "default": false
              },
              "headers": {
                "description": "Put fields to be forwarded to the HTTP request headers in the headers config option.",
                "type": "object",
                "$ref": "#"
              },
              "hostType": {
                "description": "hostType for a package rule. Can be a platform name or a datasource name.",
                "type": "string"
              },
              "httpsCertificate": {
                "description": "The certificate chains in PEM format.",
                "type": ["string", "null"],
                "default": null
              },
              "httpsCertificateAuthority": {
                "description": "The overriding trusted CA certificate.",
                "type": ["string", "null"],
                "default": null
              },
              "httpsPrivateKey": {
                "description": "The private key in PEM format.",
                "type": ["string", "null"],
                "default": null
              },
              "insecureRegistry": {
                "description": "Explicitly turn on insecure Docker registry access (HTTP).",
                "type": "boolean",
                "default": false
              },
              "keepAlive": {
                "description": "Enable HTTP keep-alive for hosts.",
                "type": "boolean",
                "default": false
              },
              "matchHost": {
                "description": "A domain name, host name or base URL to match against.",
                "type": "string"
              },
              "maxRequestsPerSecond": {
                "description": "Limit requests rate per host.",
                "type": "integer",
                "default": 0
              },
              "maxRetryAfter": {
                "description": "Maximum retry-after header value to wait for before retrying a failed request.",
                "type": "integer",
                "default": 60
              },
              "readOnly": {
                "description": "Match against requests that only read data and do not mutate anything.",
                "type": "boolean"
              },
              "timeout": {
                "description": "Timeout (in milliseconds) for queries to external endpoints.",
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "html": {
      "description": "Configuration object for the html manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/\\.html?$/"],
        "versioning": "semver",
        "digest": {
          "enabled": false
        },
        "pinDigests": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "httpCacheTtlDays": {
      "description": "Maximum duration in days to keep HTTP cache entries.",
      "type": "integer",
      "default": 90
    },
    "ignoreDeprecated": {
      "description": "Avoid upgrading from a non-deprecated version to a deprecated one.",
      "type": "boolean",
      "default": true
    },
    "ignoreDeps": {
      "description": "Dependencies to ignore.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ignorePaths": {
      "description": "Skip any package file whose path matches one of these. Can be a string or glob pattern.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": ["**/node_modules/**", "**/bower_components/**"]
    },
    "ignorePlugins": {
      "description": "Set this to `true` if `allowPlugins=true` but you wish to skip running plugins when updating lock files.",
      "type": "boolean",
      "default": false
    },
    "ignorePrAuthor": {
      "description": "Set to `true` to fetch the entire list of PRs instead of only those authored by the Renovate user.",
      "type": "boolean",
      "default": false
    },
    "ignorePresets": {
      "description": "A list of presets to ignore, including any that are nested inside an `extends` array.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "string"
        }
      ]
    },
    "ignoreReviewers": {
      "description": "Reviewers to be ignored in PR reviewers presence (either username or email address depending on the platform).",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ignoreScripts": {
      "description": "Set this to `false` if `allowScripts=true` and you wish to run scripts when updating lock files.",
      "type": "boolean",
      "default": true
    },
    "ignoreTests": {
      "description": "Set to `true` to enable automerging without tests.",
      "type": "boolean",
      "default": false
    },
    "ignoreUnstable": {
      "description": "Ignore versions with unstable SemVer.",
      "type": "boolean",
      "default": true
    },
    "includeMirrors": {
      "description": "Whether to process repositories that are mirrors. By default, repositories that are mirrors are skipped.",
      "type": "boolean",
      "default": false
    },
    "includePaths": {
      "description": "Include package files only within these defined paths.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "inheritConfig": {
      "description": "If `true`, Renovate will inherit configuration from the `inheritConfigFileName` file in `inheritConfigRepoName`.",
      "type": "boolean",
      "default": false
    },
    "inheritConfigFileName": {
      "description": "Renovate will look for this config file name in the `inheritConfigRepoName`.",
      "type": "string",
      "default": "org-inherited-config.json"
    },
    "inheritConfigRepoName": {
      "description": "Renovate will look in this repo for the `inheritConfigFileName`.",
      "type": "string",
      "default": "{{parentOrg}}/renovate-config"
    },
    "inheritConfigStrict": {
      "description": "If `true`, any `inheritedConfig` fetch error will result in an aborted run.",
      "type": "boolean",
      "default": false
    },
    "internalChecksAsSuccess": {
      "description": "Whether to consider passing internal checks such as `minimumReleaseAge` when determining branch status.",
      "type": "boolean",
      "default": false
    },
    "internalChecksFilter": {
      "description": "When and how to filter based on internal checks.",
      "type": "string",
      "enum": ["strict", "flexible", "none"],
      "default": "strict"
    },
    "jenkins": {
      "description": "Configuration object for the jenkins manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)plugins\\.(txt|ya?ml)$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "jsonata": {
      "description": "Configuration object for the jsonata manager",
      "type": "object",
      "default": {
        "pinDigests": false
      },
      "$ref": "#"
    },
    "jsonnet-bundler": {
      "description": "Configuration object for the jsonnet-bundler manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)jsonnetfile\\.json$/"],
        "datasource": "git-tags"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "keepUpdatedLabel": {
      "description": "If set, users can add this label to PRs to request they be kept updated with the base branch.",
      "type": "string"
    },
    "kotlin-script": {
      "description": "Configuration object for the kotlin-script manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/^.+\\.main\\.kts$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "kubernetes": {
      "description": "Configuration object for the kubernetes manager",
      "type": "object",
      "default": {
        "managerFilePatterns": []
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "kustomize": {
      "description": "Configuration object for the kustomize manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)kustomization\\.ya?ml$/"],
        "pinDigests": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "labels": {
      "description": "Labels to set in Pull Request.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "leiningen": {
      "description": "Configuration object for the leiningen manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)project\\.clj$/"],
        "versioning": "maven"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "lockFileMaintenance": {
      "description": "Configuration for lock file maintenance.",
      "type": "object",
      "default": {
        "enabled": false,
        "recreateWhen": "always",
        "rebaseStalePrs": true,
        "branchTopic": "lock-file-maintenance",
        "commitMessageAction": "Lock file maintenance",
        "commitMessageTopic": null,
        "commitMessageExtra": null,
        "schedule": ["before 4am on monday"],
        "groupName": null,
        "prBodyDefinitions": {
          "Change": "All locks refreshed"
        }
      },
      "$ref": "#"
    },
    "logContext": {
      "description": "Add a global or per-repo log context to each log entry.",
      "type": ["string", "null"],
      "default": null
    },
    "logLevelRemap": {
      "description": "Remap log levels to different levels.",
      "type": "array",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "matchMessage": {
                "description": "Regex/minimatch expression to match against log message.",
                "type": "string"
              },
              "newLogLevel": {
                "description": "New log level to use if matchMessage matches.",
                "type": "string",
                "enum": ["trace", "debug", "info", "warn", "error", "fatal"]
              }
            }
          }
        ]
      }
    },
    "major": {
      "description": "Configuration to apply when an update type is `major`.",
      "type": "object",
      "default": {},
      "$ref": "#"
    },
    "maven": {
      "description": "Configuration object for the maven manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/|\\.)pom\\.xml$/",
          "/^(((\\.mvn)|(\\.m2))/)?settings\\.xml$/",
          "/(^|/)\\.mvn/extensions\\.xml$/"
        ]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "maven-wrapper": {
      "description": "Configuration object for the maven-wrapper manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|\\/).mvn/wrapper/maven-wrapper.properties$/"
        ],
        "versioning": "maven"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "mergeConfidenceDatasources": {
      "description": "If set, Renovate will query the merge-confidence JSON API only for datasources that are part of this list.",
      "type": "array",
      "items": {
        "type": "string",
        "enum": ["go", "maven", "npm", "nuget", "packagist", "pypi", "rubygems"]
      },
      "default": [
        "go",
        "maven",
        "npm",
        "nuget",
        "packagist",
        "pypi",
        "rubygems"
      ]
    },
    "mergeConfidenceEndpoint": {
      "description": "If set, Renovate will query this API for Merge Confidence data.",
      "type": "string",
      "default": "https://developer.mend.io/"
    },
    "meteor": {
      "description": "Configuration object for the meteor manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)package\\.js$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "migratePresets": {
      "description": "Define presets here which have been removed or renamed and should be migrated automatically.",
      "type": "object",
      "default": {},
      "additionalProperties": {
        "type": "string"
      },
      "$ref": "#"
    },
    "milestone": {
      "description": "The number of a milestone. If set, the milestone will be set when Renovate creates the PR.",
      "type": ["integer", "null"],
      "default": null
    },
    "minimumReleaseAge": {
      "description": "Time required before a new release is considered stable.",
      "type": ["string", "null"],
      "default": null
    },
    "minor": {
      "description": "Configuration to apply when an update type is `minor`.",
      "type": "object",
      "default": {},
      "$ref": "#"
    },
    "mint": {
      "description": "Configuration object for the mint manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)Mintfile$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "mise": {
      "description": "Configuration object for the mise manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/)\\.?mise\\.toml$/",
          "/(^|/)\\.?mise/config\\.toml$/"
        ]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "mix": {
      "description": "Configuration object for the mix manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)mix\\.exs$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "mode": {
      "description": "Mode of operation.",
      "type": "string",
      "enum": ["full", "silent"],
      "default": "full"
    },
    "nix": {
      "description": "Configuration object for the nix manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)flake\\.nix$/"],
        "commitMessageTopic": "nix",
        "commitMessageExtra": "to {{newValue}}",
        "enabled": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "nodenv": {
      "description": "Configuration object for the nodenv manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.node-version$/"],
        "versioning": "node"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "npm": {
      "description": "Configuration object for the npm manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/)package\\.json$/",
          "/(^|/)pnpm-workspace\\.yaml$/"
        ],
        "digest": {
          "prBodyDefinitions": {
            "Change": "{{#if displayFrom}}`{{{displayFrom}}}` -> {{else}}{{#if currentValue}}`{{{currentValue}}}` -> {{/if}}{{/if}}{{#if displayTo}}`{{{displayTo}}}`{{else}}`{{{newValue}}}`{{/if}}"
          }
        },
        "prBodyDefinitions": {
          "Change": "[{{#if displayFrom}}`{{{displayFrom}}}` -> {{else}}{{#if currentValue}}`{{{currentValue}}}` -> {{/if}}{{/if}}{{#if displayTo}}`{{{displayTo}}}`{{else}}`{{{newValue}}}`{{/if}}]({{#if depName}}https://renovatebot.com/diffs/npm/{{replace '/' '%2f' depName}}/{{{currentVersion}}}/{{{newVersion}}}{{/if}})"
        }
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "npmToken": {
      "description": "npm token used to authenticate with the default registry.",
      "type": "string"
    },
    "npmrc": {
      "description": "String copy of `.npmrc` file. Use `\\n` instead of line breaks.",
      "type": "string"
    },
    "npmrcMerge": {
      "description": "Whether to merge `config.npmrc` with repo `.npmrc` content if both are found.",
      "type": "boolean",
      "default": false
    },
    "nuget": {
      "description": "Configuration object for the nuget manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/\\.(?:cs|fs|vb)proj$/",
          "/\\.(?:props|targets)$/",
          "/(^|/)dotnet-tools\\.json$/",
          "/(^|/)global\\.json$/"
        ]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "nvm": {
      "description": "Configuration object for the nvm manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.nvmrc$/"],
        "versioning": "node",
        "pinDigests": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "ocb": {
      "description": "Configuration object for the ocb manager",
      "type": "object",
      "default": {
        "managerFilePatterns": []
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "onboarding": {
      "description": "Require a Configuration PR first.",
      "type": "boolean"
    },
    "onboardingBranch": {
      "description": "Change this value to override the default onboarding branch name.",
      "type": "string",
      "default": "renovate/configure"
    },
    "onboardingCommitMessage": {
      "description": "Change this value to override the default onboarding commit message.",
      "type": ["string", "null"],
      "default": null
    },
    "onboardingConfig": {
      "description": "Configuration to use for onboarding PRs.",
      "type": "object",
      "default": {
        "$schema": "https://docs.renovatebot.com/renovate-schema.json"
      },
      "$ref": "#"
    },
    "onboardingConfigFileName": {
      "description": "Change this value to override the default onboarding config file name.",
      "type": "string",
      "default": "renovate.json"
    },
    "onboardingNoDeps": {
      "description": "Onboard the repository even if no dependencies are found.",
      "type": "string",
      "enum": ["auto", "enabled", "disabled"],
      "default": "auto"
    },
    "onboardingPrTitle": {
      "description": "Change this value to override the default onboarding PR title.",
      "type": "string",
      "default": "Configure Renovate"
    },
    "onboardingRebaseCheckbox": {
      "description": "Set to enable rebase/retry markdown checkbox for onboarding PRs.",
      "type": "boolean",
      "default": false
    },
    "optimizeForDisabled": {
      "description": "Set to `true` to perform a check for disabled config prior to cloning.",
      "type": "boolean",
      "default": false
    },
    "osgi": {
      "description": "Configuration object for the osgi manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)src/main/features/.+\\.json$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "osvVulnerabilityAlerts": {
      "description": "Use vulnerability alerts from `osv.dev`.",
      "type": "boolean",
      "default": false
    },
    "packageRules": {
      "description": "Rules for matching packages.",
      "type": "array",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "allowedVersions": {
                "description": "A version range or regex pattern capturing allowed versions for dependencies.",
                "type": "string"
              },
              "changelogUrl": {
                "description": "Set a custom URL for the changelog. Renovate will put this URL in the PR body text.",
                "type": "string"
              },
              "matchBaseBranches": {
                "description": "List of strings containing exact matches (e.g. `[\"main\"]`) and/or regex expressions (e.g. `[\"/^release/.*/\"]`). Valid only within a `packageRules` object.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "matchCategories": {
                "description": "List of categories to match (for example: `[\"python\"]`). Valid only within a `packageRules` object.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "matchConfidence": {
                "description": "Merge confidence levels to match against (`low`, `neutral`, `high`, `very high`). Valid only within `packageRules` object.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": ["low", "neutral", "high", "very high"]
                    }
                  },
                  {
                    "type": "string",
                    "enum": ["low", "neutral", "high", "very high"]
                  }
                ]
              },
              "matchCurrentAge": {
                "description": "Matches the current age of the package derived from its release timestamp. Valid only within a `packageRules` object.",
                "type": "string"
              },
              "matchCurrentValue": {
                "description": "A regex or glob pattern to match against the raw `currentValue` string of a dependency. Valid only within a `packageRules` object.",
                "type": "string"
              },
              "matchCurrentVersion": {
                "description": "A version, or range of versions, to match against the current version of a package. Valid only within a `packageRules` object.",
                "type": "string"
              },
              "matchDatasources": {
                "description": "List of datasources to match (e.g. `[\"orb\"]`). Valid only within a `packageRules` object.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "matchDepNames": {
                "description": "Dep names to match. Valid only within a `packageRules` object.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "matchDepTypes": {
                "description": "List of depTypes to match (e.g. [`peerDependencies`]). Valid only within `packageRules` object.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "matchFileNames": {
                "description": "List of strings to do an exact match against package and lock files with full path. Only works inside a `packageRules` object.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "matchJsonata": {
                "description": "A JSONata expression to match against the full config object. Valid only within a `packageRules` object.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "matchManagers": {
                "description": "List of package managers to match (e.g. `[\"pipenv\"]`). Valid only within a `packageRules` object.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "matchNewValue": {
                "description": "A regex or glob pattern to match against the raw `newValue` string of a dependency. Valid only within a `packageRules` object.",
                "type": "string"
              },
              "matchPackageNames": {
                "description": "Package names to match. Valid only within a `packageRules` object.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "matchRepositories": {
                "description": "List of repositories to match (e.g. `[\"**/*-archived\"]`). Valid only within a `packageRules` object.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "matchSourceUrls": {
                "description": "A list of exact match URLs (or URL patterns) to match sourceUrl against.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "matchUpdateTypes": {
                "description": "Update types to match against (`major`, `minor`, `pin`, `pinDigest`, etc). Valid only within `packageRules` object.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "major",
                        "minor",
                        "patch",
                        "pin",
                        "pinDigest",
                        "digest",
                        "lockFileMaintenance",
                        "rollback",
                        "bump",
                        "replacement"
                      ]
                    }
                  },
                  {
                    "type": "string",
                    "enum": [
                      "major",
                      "minor",
                      "patch",
                      "pin",
                      "pinDigest",
                      "digest",
                      "lockFileMaintenance",
                      "rollback",
                      "bump",
                      "replacement"
                    ]
                  }
                ]
              },
              "overrideDatasource": {
                "description": "Override the datasource value.",
                "type": "string"
              },
              "overrideDepName": {
                "description": "Override the depName value.",
                "type": "string"
              },
              "overridePackageName": {
                "description": "Override the packageName value.",
                "type": "string"
              },
              "prPriority": {
                "description": "Set sorting priority for PR creation. PRs with higher priority are created first, negative priority last.",
                "type": "integer",
                "default": 0
              },
              "replacementName": {
                "description": "The name of the new dependency that replaces the old deprecated dependency.",
                "type": "string"
              },
              "replacementNameTemplate": {
                "description": "Controls what the replacement package name.",
                "type": "string",
                "default": "{{{packageName}}}"
              },
              "replacementVersion": {
                "description": "The version of the new dependency that replaces the old deprecated dependency.",
                "type": "string"
              },
              "replacementVersionTemplate": {
                "description": "Template field for the version of the new dependency that replaces the old deprecated dependency.",
                "type": "string"
              },
              "sourceDirectory": {
                "description": "The source directory in which the package is present at its source.",
                "type": "string"
              },
              "sourceUrl": {
                "description": "The source URL of the package.",
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "password": {
      "description": "Password for authentication.",
      "type": "string"
    },
    "patch": {
      "description": "Configuration to apply when an update type is `patch`.",
      "type": "object",
      "default": {},
      "$ref": "#"
    },
    "pep621": {
      "description": "Configuration object for the pep621 manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)pyproject\\.toml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "pep723": {
      "description": "Configuration object for the pep723 manager",
      "type": "object",
      "default": {
        "managerFilePatterns": []
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "persistRepoData": {
      "description": "If set to `true`: keep repository data between runs instead of deleting the data.",
      "type": "boolean",
      "default": false
    },
    "pin": {
      "description": "Configuration to apply when an update type is `pin`.",
      "type": "object",
      "default": {
        "rebaseWhen": "behind-base-branch",
        "groupName": "Pin Dependencies",
        "groupSlug": "pin-dependencies",
        "commitMessageAction": "Pin",
        "group": {
          "commitMessageTopic": "dependencies",
          "commitMessageExtra": ""
        }
      },
      "$ref": "#"
    },
    "pinDigest": {
      "description": "Configuration to apply when pinning a digest (no change in tag/version).",
      "type": "object",
      "default": {
        "groupName": "Pin Dependencies",
        "groupSlug": "pin-dependencies",
        "commitMessageAction": "Pin",
        "group": {
          "commitMessageTopic": "dependencies",
          "commitMessageExtra": ""
        }
      },
      "$ref": "#"
    },
    "pinDigests": {
      "description": "Whether to add digests to Dockerfile source images.",
      "type": "boolean",
      "default": false
    },
    "pip-compile": {
      "description": "Configuration object for the pip-compile manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [],
        "lockFileMaintenance": {
          "enabled": true,
          "branchTopic": "pip-compile-refresh",
          "commitMessageAction": "Refresh pip-compile outputs"
        }
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "pip_requirements": {
      "description": "Configuration object for the pip_requirements manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/)[\\w-]*requirements([-.]\\w+)?\\.(txt|pip)$/"
        ]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "pip_setup": {
      "description": "Configuration object for the pip_setup manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)setup\\.py$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "pipenv": {
      "description": "Configuration object for the pipenv manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)Pipfile$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "pixi": {
      "description": "Configuration object for the pixi manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/(^|/)pyproject\\.toml$/",
          "/(^|/)pixi\\.toml$/"
        ]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "platform": {
      "description": "Platform type of repository.",
      "type": "string",
      "enum": [
        "azure",
        "bitbucket",
        "bitbucket-server",
        "codecommit",
        "gerrit",
        "gitea",
        "github",
        "gitlab",
        "local"
      ],
      "default": "github"
    },
    "platformAutomerge": {
      "description": "Controls if platform-native auto-merge is used.",
      "type": "boolean",
      "default": true
    },
    "platformCommit": {
      "description": "Use platform API to perform commits instead of using Git directly.",
      "type": "string",
      "enum": ["auto", "disabled", "enabled"],
      "default": "auto"
    },
    "poetry": {
      "description": "Configuration object for the poetry manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)pyproject\\.toml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "postUpdateOptions": {
      "description": "Enable post-update options to be run after package/artifact updating.",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "bundlerConservative",
          "gomodMassage",
          "gomodTidy",
          "gomodTidy1.17",
          "gomodTidyE",
          "gomodUpdateImportPaths",
          "gomodSkipVendor",
          "gomodVendor",
          "helmUpdateSubChartArchives",
          "kustomizeInflateHelmCharts",
          "npmDedupe",
          "pnpmDedupe",
          "yarnDedupeFewer",
          "yarnDedupeHighest"
        ]
      },
      "default": []
    },
    "postUpgradeTasks": {
      "description": "Post-upgrade tasks that are executed before a commit is made by Renovate.",
      "type": "object",
      "default": {
        "commands": [],
        "fileFilters": [],
        "executionMode": "update"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "commands": {
                "description": "A list of post-upgrade commands that are executed before a commit is made by Renovate.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "executionMode": {
                "description": "Controls when the post upgrade tasks run: on every update, or once per upgrade branch.",
                "type": "string",
                "enum": ["update", "branch"],
                "default": "update"
              },
              "fileFilters": {
                "description": "Files that match the glob pattern will be committed after running a post-upgrade task.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": ["**/*"]
              }
            }
          }
        ]
      }
    },
    "prBodyColumns": {
      "description": "List of columns to use in PR bodies.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": ["Package", "Type", "Update", "Change", "Pending"]
    },
    "prBodyDefinitions": {
      "description": "Table column definitions to use in PR tables.",
      "type": "object",
      "default": {
        "Package": "{{{depNameLinked}}}",
        "Type": "{{{depType}}}",
        "Update": "{{{updateType}}}",
        "Current value": "{{{currentValue}}}",
        "New value": "{{{newValue}}}",
        "Change": "`{{{displayFrom}}}` -> `{{{displayTo}}}`",
        "Pending": "{{{displayPending}}}",
        "References": "{{{references}}}",
        "Package file": "{{{packageFile}}}",
        "Age": "{{#if newVersion}}[![age](https://developer.mend.io/api/mc/badges/age/{{datasource}}/{{replace '/' '%2f' packageName}}/{{{newVersion}}}?slim=true)](https://docs.renovatebot.com/merge-confidence/){{/if}}",
        "Adoption": "{{#if newVersion}}[![adoption](https://developer.mend.io/api/mc/badges/adoption/{{datasource}}/{{replace '/' '%2f' packageName}}/{{{newVersion}}}?slim=true)](https://docs.renovatebot.com/merge-confidence/){{/if}}",
        "Passing": "{{#if newVersion}}[![passing](https://developer.mend.io/api/mc/badges/compatibility/{{datasource}}/{{replace '/' '%2f' packageName}}/{{{currentVersion}}}/{{{newVersion}}}?slim=true)](https://docs.renovatebot.com/merge-confidence/){{/if}}",
        "Confidence": "{{#if newVersion}}[![confidence](https://developer.mend.io/api/mc/badges/confidence/{{datasource}}/{{replace '/' '%2f' packageName}}/{{{currentVersion}}}/{{{newVersion}}}?slim=true)](https://docs.renovatebot.com/merge-confidence/){{/if}}"
      }
    },
    "prBodyNotes": {
      "description": "List of extra notes or templates to include in the Pull Request body.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "string"
        }
      ],
      "default": []
    },
    "prBodyTemplate": {
      "description": "Pull Request body template. Controls which sections are rendered in the body of the pull request.",
      "type": "string",
      "default": "{{{header}}}{{{table}}}{{{warnings}}}{{{notes}}}{{{changelogs}}}{{{configDescription}}}{{{controls}}}{{{footer}}}"
    },
    "prCommitsPerRunLimit": {
      "description": "Set the maximum number of commits per Renovate run. By default there is no limit.",
      "type": "integer",
      "default": 0
    },
    "prConcurrentLimit": {
      "description": "Limit to a maximum of x concurrent branches/PRs. 0 means no limit.",
      "type": "integer",
      "default": 10
    },
    "prCreation": {
      "description": "When to create the PR for a branch.",
      "type": "string",
      "enum": ["immediate", "not-pending", "status-success", "approval"],
      "default": "immediate"
    },
    "prFooter": {
      "description": "Text added here will be placed last in the PR body, with a divider separator before it.",
      "type": "string",
      "default": "This PR has been generated by [Renovate Bot](https://github.com/renovatebot/renovate)."
    },
    "prHeader": {
      "description": "Text added here will be placed first in the PR body.",
      "type": "string"
    },
    "prHourlyLimit": {
      "description": "Rate limit PRs to maximum x created per hour. 0 means no limit.",
      "type": "integer",
      "default": 2
    },
    "prNotPendingHours": {
      "description": "Timeout in hours for when `prCreation=not-pending`.",
      "type": "integer",
      "default": 25
    },
    "prTitle": {
      "description": "Pull Request title template. Inherits from `commitMessage` if null.",
      "type": ["string", "null"],
      "default": null
    },
    "prTitleStrict": {
      "description": "Whether to bypass appending extra context to the Pull Request title.",
      "type": "boolean",
      "default": false
    },
    "pre-commit": {
      "description": "Configuration object for the pre-commit manager",
      "type": "object",
      "default": {
        "commitMessageTopic": "pre-commit hook {{depName}}",
        "enabled": false,
        "managerFilePatterns": ["/(^|/)\\.pre-commit-config\\.ya?ml$/"],
        "prBodyNotes": [
          "Note: The `pre-commit` manager in Renovate is not supported by the `pre-commit` maintainers or community. Please do not report any problems there, instead [create a Discussion in the Renovate repository](https://github.com/renovatebot/renovate/discussions/new) if you have any questions."
        ]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "presetCachePersistence": {
      "description": "Cache resolved presets in package cache.",
      "type": "boolean",
      "default": false
    },
    "printConfig": {
      "description": "If enabled, Renovate logs the fully resolved config for each repository, plus the fully resolved presets.",
      "type": "boolean",
      "default": false
    },
    "privateKey": {
      "description": "Server-side private key.",
      "type": "string"
    },
    "privateKeyOld": {
      "description": "Secondary or old private key to try.",
      "type": "string"
    },
    "privateKeyPath": {
      "description": "Path to the Server-side private key.",
      "type": "string"
    },
    "privateKeyPathOld": {
      "description": "Path to the Server-side old private key.",
      "type": "string"
    },
    "processEnv": {
      "description": "Environment variables to be used in global config only.",
      "type": "object",
      "default": {},
      "additionalProperties": {
        "type": "string"
      },
      "$ref": "#"
    },
    "productLinks": {
      "description": "Links which are used in PRs, issues and comments.",
      "type": "object",
      "default": {
        "documentation": "https://docs.renovatebot.com/",
        "help": "https://github.com/renovatebot/renovate/discussions",
        "homepage": "https://github.com/renovatebot/renovate"
      },
      "additionalProperties": {
        "type": "string",
        "format": "uri"
      },
      "$ref": "#"
    },
    "pruneBranchAfterAutomerge": {
      "description": "Set to `true` to enable branch pruning after automerging.",
      "type": "boolean",
      "default": true
    },
    "pruneStaleBranches": {
      "description": "Set to `false` to disable pruning stale branches.",
      "type": "boolean",
      "default": true
    },
    "pub": {
      "description": "Configuration object for the pub manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)pubspec\\.ya?ml$/"],
        "versioning": "npm"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "puppet": {
      "description": "Configuration object for the puppet manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)Puppetfile$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "pyenv": {
      "description": "Configuration object for the pyenv manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.python-version$/"],
        "versioning": "docker",
        "pinDigests": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "rangeStrategy": {
      "description": "Determines how to modify or update existing ranges.",
      "type": "string",
      "enum": [
        "auto",
        "pin",
        "bump",
        "replace",
        "widen",
        "update-lockfile",
        "in-range-only"
      ],
      "default": "auto"
    },
    "rebaseLabel": {
      "description": "Label to request a rebase from Renovate bot.",
      "type": "string",
      "default": "rebase"
    },
    "rebaseWhen": {
      "description": "Controls when Renovate rebases an existing branch.",
      "type": "string",
      "enum": [
        "auto",
        "never",
        "conflicted",
        "behind-base-branch",
        "automerging"
      ],
      "default": "auto"
    },
    "recreateWhen": {
      "description": "Recreate PRs even if same ones were closed previously.",
      "type": "string",
      "enum": ["auto", "always", "never"],
      "default": "auto"
    },
    "redisPrefix": {
      "description": "Key prefix for redis cache entries.",
      "type": "string"
    },
    "redisUrl": {
      "description": "If set, this Redis URL will be used for caching instead of the file system.",
      "type": "string"
    },
    "regex": {
      "description": "Configuration object for the regex manager",
      "type": "object",
      "default": {
        "pinDigests": false
      },
      "$ref": "#"
    },
    "registryAliases": {
      "description": "Aliases for registries.",
      "type": "object",
      "default": {},
      "additionalProperties": {
        "type": "string"
      },
      "$ref": "#"
    },
    "registryUrls": {
      "description": "List of URLs to try for dependency lookup. Package manager specific.",
      "type": ["array", "null"],
      "items": {
        "type": "string"
      },
      "default": null
    },
    "renovate-config-presets": {
      "description": "Configuration object for the renovate-config-presets manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "renovate.json",
          "renovate.json5",
          ".github/renovate.json",
          ".github/renovate.json5",
          ".gitlab/renovate.json",
          ".gitlab/renovate.json5",
          ".renovaterc",
          ".renovaterc.json",
          ".renovaterc.json5"
        ]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "replacement": {
      "description": "Configuration to apply when replacing a dependency.",
      "type": "object",
      "default": {
        "branchTopic": "{{{depNameSanitized}}}-replacement",
        "commitMessageAction": "Replace",
        "commitMessageExtra": "with {{newName}} {{#if isMajor}}{{{prettyNewMajor}}}{{else}}{{#if isSingleVersion}}{{{prettyNewVersion}}}{{else}}{{{newValue}}}{{/if}}{{/if}}",
        "prBodyNotes": [
          "This is a special PR that replaces `{{{depName}}}` with the community suggested minimal stable replacement version."
        ]
      },
      "$ref": "#"
    },
    "replacementApproach": {
      "description": "Select whether to perform a direct replacement or alias replacement.",
      "type": "string",
      "enum": ["replace", "alias"],
      "default": "replace"
    },
    "reportPath": {
      "description": "Path to where the file should be written. In case of `s3` this has to be a full S3 URI.",
      "type": ["string", "null"],
      "default": null
    },
    "reportType": {
      "description": "Set how, or if, reports should be generated.",
      "type": ["string", "null"],
      "enum": ["logging", "file", "s3"],
      "default": null
    },
    "repositories": {
      "description": "List of Repositories.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "repositoryCache": {
      "description": "This option decides if Renovate uses a JSON cache to speed up extractions.",
      "type": "string",
      "enum": ["disabled", "enabled", "reset"],
      "default": "disabled"
    },
    "repositoryCacheType": {
      "description": "Set the type of renovate repository cache if `repositoryCache` is enabled.",
      "type": "string",
      "default": "local"
    },
    "requireConfig": {
      "description": "Controls Renovate's behavior regarding repository config files such as `renovate.json`.",
      "type": "string",
      "enum": ["required", "optional", "ignored"],
      "default": "required"
    },
    "respectLatest": {
      "description": "Ignore versions newer than npm \"latest\" version.",
      "type": "boolean",
      "default": true
    },
    "reviewers": {
      "description": "Requested reviewers for Pull Requests (either username or email address depending on the platform).",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "reviewersFromCodeOwners": {
      "description": "Determine reviewers based on configured code owners and changes in PR.",
      "type": "boolean",
      "default": false
    },
    "reviewersSampleSize": {
      "description": "Take a random sample of given size from `reviewers`.",
      "type": ["integer", "null"],
      "default": null
    },
    "rollback": {
      "description": "Configuration to apply when rolling back a version.",
      "type": "object",
      "default": {
        "branchTopic": "{{{depNameSanitized}}}-rollback",
        "commitMessageAction": "Roll back",
        "semanticCommitType": "fix"
      },
      "$ref": "#"
    },
    "rollbackPrs": {
      "description": "Create PRs to roll back versions if the current version is not found in the registry.",
      "type": "boolean",
      "default": false
    },
    "ruby-version": {
      "description": "Configuration object for the ruby-version manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.ruby-version$/"],
        "versioning": "ruby"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "runtime-version": {
      "description": "Configuration object for the runtime-version manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)runtime.txt$/"],
        "pinDigests": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "s3Endpoint": {
      "description": "If set, Renovate will use this string as the `endpoint` when creating the AWS S3 client instance.",
      "type": "string"
    },
    "s3PathStyle": {
      "description": "If set, Renovate will enable `forcePathStyle` when creating the AWS S3 client instance.",
      "type": "boolean",
      "default": false
    },
    "sbt": {
      "description": "Configuration object for the sbt manager",
      "type": "object",
      "default": {
        "managerFilePatterns": [
          "/\\.sbt$/",
          "/project/[^/]*\\.scala$/",
          "/project/build\\.properties$/",
          "/(^|/)repositories$/"
        ],
        "versioning": "ivy"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "scalafmt": {
      "description": "Configuration object for the scalafmt manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.scalafmt.conf$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "schedule": {
      "description": "Limit branch creation to these times of day or week.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "string"
        }
      ],
      "default": ["at any time"]
    },
    "secrets": {
      "description": "Object which holds secret name/value pairs.",
      "type": "object",
      "default": {},
      "additionalProperties": {
        "type": "string"
      },
      "$ref": "#"
    },
    "semanticCommitScope": {
      "description": "Commit scope to use if Semantic Commits are enabled.",
      "type": "string",
      "default": "deps"
    },
    "semanticCommitType": {
      "description": "Commit type to use if Semantic Commits is enabled.",
      "type": "string",
      "default": "chore"
    },
    "semanticCommits": {
      "description": "Enable Semantic Commit prefixes for commits and PR titles.",
      "type": "string",
      "enum": ["auto", "enabled", "disabled"],
      "default": "auto"
    },
    "separateMajorMinor": {
      "description": "If set to `false`, Renovate will upgrade dependencies to their latest release only. Renovate will not separate major or minor branches.",
      "type": "boolean",
      "default": true
    },
    "separateMinorPatch": {
      "description": "If set to `true`, Renovate will separate `minor` and `patch` updates into separate branches.",
      "type": "boolean",
      "default": false
    },
    "separateMultipleMajor": {
      "description": "If set to `true`, PRs will be raised separately for each available `major` upgrade version.",
      "type": "boolean",
      "default": false
    },
    "separateMultipleMinor": {
      "description": "If set to `true`, Renovate creates separate PRs for each `minor` stream.",
      "type": "boolean",
      "default": false
    },
    "setup-cfg": {
      "description": "Configuration object for the setup-cfg manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)setup\\.cfg$/"],
        "versioning": "pep440"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "skipInstalls": {
      "description": "Skip installing modules/dependencies if lock file updating is possible without a full install.",
      "type": ["boolean", "null"],
      "default": null
    },
    "statusCheckNames": {
      "description": "Custom strings to use as status check names.",
      "type": "object",
      "default": {
        "artifactError": "renovate/artifacts",
        "configValidation": "renovate/config-validation",
        "mergeConfidence": "renovate/merge-confidence",
        "minimumReleaseAge": "renovate/stability-days"
      },
      "$ref": "#"
    },
    "stopUpdatingLabel": {
      "description": "Label to make Renovate stop updating a PR.",
      "type": "string",
      "default": "stop-updating"
    },
    "suppressNotifications": {
      "description": "Options to suppress various types of warnings and other notifications.",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "artifactErrors",
          "branchAutomergeFailure",
          "configErrorIssue",
          "dependencyLookupWarnings",
          "lockFileErrors",
          "missingCredentialsError",
          "onboardingClose",
          "prEditedNotification",
          "prIgnoreNotification"
        ]
      },
      "default": []
    },
    "sveltos": {
      "description": "Configuration object for the sveltos manager",
      "type": "object",
      "default": {
        "managerFilePatterns": []
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "swift": {
      "description": "Configuration object for the swift manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)Package\\.swift/"],
        "versioning": "swift",
        "pinDigests": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "tekton": {
      "description": "Configuration object for the tekton manager",
      "type": "object",
      "default": {
        "managerFilePatterns": []
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "terraform": {
      "description": "Configuration object for the terraform manager",
      "type": "object",
      "default": {
        "commitMessageTopic": "Terraform {{depName}}",
        "managerFilePatterns": ["/\\.tf$/"],
        "pinDigests": false
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "terraform-version": {
      "description": "Configuration object for the terraform-version manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.terraform-version$/"],
        "versioning": "hashicorp",
        "extractVersion": "^v(?<version>.*)$"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "terragrunt": {
      "description": "Configuration object for the terragrunt manager",
      "type": "object",
      "default": {
        "commitMessageTopic": "Terragrunt dependency {{depName}}",
        "managerFilePatterns": ["/(^|/)terragrunt\\.hcl$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "terragrunt-version": {
      "description": "Configuration object for the terragrunt-version manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.terragrunt-version$/"],
        "versioning": "hashicorp",
        "extractVersion": "^v(?<version>.+)$"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "tflint-plugin": {
      "description": "Configuration object for the tflint-plugin manager",
      "type": "object",
      "default": {
        "commitMessageTopic": "TFLint plugin {{depName}}",
        "managerFilePatterns": ["/\\.tflint\\.hcl$/"],
        "extractVersion": "^v(?<version>.*)$"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "timezone": {
      "description": "Must conform to [IANA Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) format.",
      "type": "string"
    },
    "token": {
      "description": "Repository Auth Token.",
      "type": "string"
    },
    "travis": {
      "description": "Configuration object for the travis manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/^\\.travis\\.ya?ml$/"],
        "major": {
          "enabled": false
        },
        "versioning": "node"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "unicodeEmoji": {
      "description": "Enable or disable Unicode emoji.",
      "type": "boolean",
      "default": true
    },
    "unity3d": {
      "description": "Configuration object for the unity3d manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["**/ProjectSettings/ProjectVersion.txt"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "updateInternalDeps": {
      "description": "Whether to update internal dep versions in a monorepo. Works on Yarn Workspaces.",
      "type": "boolean",
      "default": false
    },
    "updateLockFiles": {
      "description": "Set to `false` to disable lock file updating.",
      "type": "boolean",
      "default": true
    },
    "updateNotScheduled": {
      "description": "Whether to update branches when not scheduled. Renovate will not create branches outside of the schedule.",
      "type": "boolean",
      "default": true
    },
    "updatePinnedDependencies": {
      "description": "Whether to update pinned (single version) dependencies or not.",
      "type": "boolean",
      "default": true
    },
    "useBaseBranchConfig": {
      "description": "Whether to read configuration from `baseBranches` instead of only the default branch.",
      "type": "string",
      "enum": ["merge", "none"],
      "default": "none"
    },
    "useCloudMetadataServices": {
      "description": "If `false`, Renovate does not try to access cloud metadata services.",
      "type": "boolean",
      "default": true
    },
    "userAgent": {
      "description": "If set to any string, Renovate will use this as the `user-agent` it sends with HTTP requests.",
      "type": ["string", "null"],
      "default": null
    },
    "userStrings": {
      "description": "User-facing strings for the Renovate comment when a PR is closed.",
      "type": "object",
      "default": {
        "ignoreTopic": "Renovate Ignore Notification",
        "ignoreMajor": "Because you closed this PR without merging, Renovate will ignore this update. You will not get PRs for *any* future `{{{newMajor}}}.x` releases. But if you manually upgrade to `{{{newMajor}}}.x` then Renovate will re-enable `minor` and `patch` updates automatically.",
        "ignoreDigest": "Because you closed this PR without merging, Renovate will ignore this update. You will not get PRs for the `{{{depName}}}` `{{{newDigestShort}}}` update again.",
        "ignoreOther": "Because you closed this PR without merging, Renovate will ignore this update (`{{{newValue}}}`). You will get a PR once a newer version is released. To ignore this dependency forever, add it to the `ignoreDeps` array of your Renovate config."
      }
    },
    "username": {
      "description": "Username for authentication.",
      "type": "string"
    },
    "velaci": {
      "description": "Configuration object for the velaci manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/(^|/)\\.vela\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "vendir": {
      "description": "Configuration object for the vendir manager",
      "type": "object",
      "default": {
        "commitMessageTopic": "vendir {{depName}}",
        "managerFilePatterns": ["/(^|/)vendir\\.yml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "versionCompatibility": {
      "description": "A regex (`re2`) with named capture groups to show how version and compatibility are split from a raw version string.",
      "type": "string",
      "format": "regex"
    },
    "versioning": {
      "description": "Versioning to use for filtering and comparisons.",
      "type": "string",
      "oneOf": [
        {
          "enum": [
            "aws-eks-addon",
            "aws-machine-image",
            "azure-rest-api",
            "bazel-module",
            "cargo",
            "composer",
            "conan",
            "conda",
            "deb",
            "debian",
            "devbox",
            "docker",
            "git",
            "glasskube",
            "go-mod-directive",
            "gradle",
            "hashicorp",
            "helm",
            "hermit",
            "hex",
            "ivy",
            "kubernetes-api",
            "lambda-node",
            "loose",
            "maven",
            "nixpkgs",
            "node",
            "npm",
            "nuget",
            "pep440",
            "perl",
            "poetry",
            "pvp",
            "python",
            "redhat",
            "regex",
            "rez",
            "rpm",
            "ruby",
            "same-major",
            "semver",
            "semver-coerced",
            "swift",
            "ubuntu",
            "unity3d"
          ]
        },
        {
          "type": "string",
          "pattern": "^regex:"
        }
      ]
    },
    "vulnerabilityAlerts": {
      "description": "Config to apply when a PR is needed due to a vulnerability in the existing package version.",
      "type": "object",
      "default": {
        "groupName": null,
        "schedule": [],
        "dependencyDashboardApproval": false,
        "minimumReleaseAge": null,
        "rangeStrategy": "update-lockfile",
        "commitMessageSuffix": "[SECURITY]",
        "branchTopic": "{{{datasource}}}-{{{depNameSanitized}}}-vulnerability",
        "prCreation": "immediate",
        "vulnerabilityFixStrategy": "lowest"
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "vulnerabilityFixStrategy": {
                "description": "Strategy to use when fixing vulnerabilities. `lowest` will propose the earliest version with a fix, `highest` will always pick the latest version.",
                "type": "string",
                "enum": ["lowest", "highest"],
                "default": "lowest"
              }
            }
          }
        ]
      }
    },
    "woodpecker": {
      "description": "Configuration object for the woodpecker manager",
      "type": "object",
      "default": {
        "managerFilePatterns": ["/^\\.woodpecker(?:/[^/]+)?\\.ya?ml$/"]
      },
      "$ref": "#",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "description": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A custom description for this configuration object"
                    }
                  },
                  {
                    "type": "string",
                    "description": "A custom description for this configuration object"
                  }
                ]
              },
              "managerFilePatterns": {
                "description": "RegEx (`re2`) and glob patterns for matching manager files.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "writeDiscoveredRepos": {
      "description": "Writes discovered repositories to a JSON file and then exit.",
      "type": "string"
    }
  }
}
